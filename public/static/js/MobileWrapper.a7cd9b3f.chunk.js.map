{"version":3,"sources":["Mobile/routes/index.js","Mobile/Containers/Routes/index.js","Mobile/Components/Modal/event/message.js","Mobile/Components/Modal/event/add/appointmentType.js","Mobile/Components/Modal/event/add/activityMode.js","Mobile/Components/Modal/event/add/participants.js","Mobile/Components/Modal/event/add/repeatInterval.js","Mobile/Components/Modal/event/add/reminderTitle.js","Mobile/Components/Modal/event/add/selectedDays.js","Mobile/Components/Modal/event/add/constant.js","Mobile/Components/Modal/event/add/index.js","Mobile/Components/Modal/event/calendarTimeSelection.js","Mobile/Components/Modal/event/modal.js","Mobile/Containers/Modal/event.js","Mobile/Components/Modal/addPatient/message.js","Mobile/Components/Modal/addPatient/addPatient.js","Mobile/Containers/Modal/addPatient.js","Mobile/Components/Modal/addDoctor/message.js","Mobile/Components/Modal/addDoctor/addDoctor.js","Mobile/Containers/Modal/addDoctor.js","Mobile/Components/Modal/adverseEvent/message.js","Mobile/Components/Modal/adverseEvent/form.js","Mobile/Components/Common/docPreview/previewDoc.js","Mobile/Components/Common/docPreview/index.js","Mobile/Components/Modal/adverseEvent/index.js","Mobile/Containers/Modal/adverseEvent.js","Mobile/Components/Modal/changePassword/message.js","Mobile/Components/Modal/changePassword/index.js","Mobile/Containers/Modal/changePassword.js","Mobile/Components/Modal/endSurvey/message.js","Mobile/Components/Modal/endSurvey/index.js","Mobile/Containers/Modal/endSurvey.js","Mobile/Components/Modal/event/cancel/index.js","Mobile/Containers/Modal/cancelEvent.js","Mobile/Components/Modal/dischargePatient/message.js","Mobile/Components/Modal/dischargePatient/index.js","Mobile/Containers/Modal/dischargePatient.js","Mobile/Components/Modal/documentVerification/message.js","Mobile/Components/DocumentViewer/index.js","Mobile/Components/DocumentViewer/message.js","Mobile/Components/PdfViewer/index.js","Mobile/Components/page/idProof/messages.js","Mobile/Components/Common/upload/index.js","Mobile/Components/page/idProof/index.js","Mobile/Components/page/consentDocument/messages.js","Mobile/Components/page/consentDocument/index.js","Mobile/Components/Modal/documentVerification/index.js","Mobile/Containers/Modal/documentVerification.js","Mobile/AppWrapper.js","Mobile/Components/CommonError/index.js","Mobile/Components/MobileInput/index.js","Mobile/Components/Header/message.js","Mobile/Components/Header/headersIcon.js","Mobile/Components/SearchBox/getChildrens.js","Mobile/Components/SearchBox/message.js","Mobile/Components/SearchBox/index.js","Mobile/Components/Header/index.js","Mobile/Components/countryCityInput/index.js","Mobile/Containers/CountryCity/index.js","Mobile/Components/CommonMessage/index.js","Mobile/Components/Cards/appointment/message.js","Mobile/Components/Cards/appointment/actionButton.js","Mobile/Components/Cards/appointment/moreoptions.js","Mobile/Components/Cards/appointment/activityIcon.js","Mobile/Components/Cards/appointment/appointmentTypeIcon.js","Mobile/Components/Cards/appointment/index.js","Mobile/Containers/Cards/appointment.js","Mobile/Components/Cards/reminder/message.js","Mobile/Components/Cards/reminder/moreoptions.js","Mobile/Components/Cards/reminder/index.js","Mobile/Containers/Cards/reminder.js"],"names":["asyncComponent","getComponent","AsyncComponent","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","Component","inherits","createClass","key","value","_this2","then","setState","react_default","a","createElement","props","Global","Promise","all","__webpack_require__","e","bind","module","default","Auth","Routes","_this3","onAppStart","_this$props","authenticated","unauthorizedError","react","authRedirection","connect","auth","authenticatedUser","authenticated_user","dispatch","defineMessages","schedule","id","defaultMessage","cancel","addAppointment","addReminder","chooseWhen","appointment","reminder","reminderTitle","alongWithPlaceHolder","alongWithLabelAppointment","alongWithLabelReminder","doesNotRepeat","repeatsDaily","repeatsWeekly","repeatsMonthly","repeatsYearly","appointmentType","repeatIntervalError","activity","followup","medication","materialDelivery","visit","textEmail","from","till","on","at","repeatsOn","notes","cancelAppointment","cancelReminder","goback","contentAppt","messageAppt","contentRem","messageRem","alert","buttonCancelThisOnly","buttonCancelAll","remindMyCareCoach","forPatientApptType","econsulting","reason","RadioGroup","Group","RadioButton","Button","AppointmentType","onChangeActivityType","preventDefault","activityType","target","_this$props$data","data","_this$props$data$mode","mode","prevActivityMode","activityMode","activityModeOption","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","modeData","disable","objectSpread","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","formatMessage","intl","_this$props2","_this$props2$data","_this$props2$data$mod","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_this$props3","disabledForEdit","_this$props3$data","className","messages","buttonStyle","disabled","onChange","defaultValue","map","option","label","injectIntl","ActivityMode","onChangeActivityMode","console","log","activityMode_RadioGroup","activityMode_RadioButton","SearchIcon","src","searchIcon","alt","Option","OptGroup","FormItem","Item","Participants","getParentNode","t","parentNode","insertUserEntry","users","userOptions","forEach","user","_user$basicInfo","basicInfo","_id","name","_user$basicInfo$profi","profilePicLink","userPlaceHolder","_user$personalInfo","personalInfo","dob","gender","years","moment","diff","push","getParticipantOption","_this$props$members","members","options","doctors","filter","member","category","USER_CATEGORY","DOCTOR","patients","PATIENT","status","USER_STATUS","ENROLLED","careCoach","CARE_COACH","onChangeParticpantRadioGroup","setParticipantTwo","_this$props$members2","_member$basicInfo","memberCategory","ACTIVITY_TYPE","CHAT","APPOINTMENT_TYPE","FOLLOWUP","_this$props2$form","form","getFieldDecorator","isFieldTouched","getFieldError","_this$props2$currentU","currentUser","_this$props2$currentU2","programIds","fieldName","participantTwo","userId","eventMode","remindCareCoach","participantError","_ref","doctor","EVENT_TYPE","REMINDER","es_checkbox","defaultChecked","ref","setref","APPOINTMENT","validateStatus","help","rules","required","message","initialValue","es_select","placeholder","showSearch","autoComplete","optionFilterProp","suffixIcon","getPopupContainer","style","marginBottom","participants_RadioGroup","participants_RadioButton","RepeatInterval","validateFields","setRepeatIntervalError","error","values","repeatInterval","validateRepeatInterval","rule","callback","res","isNumber","valid","getRepeatTypeStr","onRepeatIntervalChange","repeatInterval_FormItem","validator","input","onBlur","min","width","ReminderTitle","_this$props$form","reminderTitle_FormItem","SelectedDays","selectedDays_FormItem","display","APPOINTMENT_FOR_CREATE_CONFIG","_APPOINTMENT_FOR_CREA","defineProperty","_USER_CATEGORY$CARE_C","MEDICATION","MATERIAL_DELIVERY","_mode","CALL","VISIT","_mode2","_mode3","_mode4","_USER_CATEGORY$PATIEN","_mode6","getActivityBetween","_ref$viewer","viewer","_ref$other","other","_ref$event","event","_ref$edit","edit","_viewer$basicInfo","viewerCategory","_other$basicInfo","_other$basicInfo$cate","otherCategory","_mode8","getAppointmentDataForEdit","getAppointmentDataForCreate","TextArea","DropDownIcon","dropDownIcon","CheckableTag","REPEAT_PARAM_WEEKLY","REPEAT_INTERVAL","SELECTED_DAYS","AddAppointment","handleConfirmBlur","confirmDirty","handleSubmit","_this$state","selectedDays","_this$state$remindCar","_objectSpread2","getRepeatOption","REPEAT_OPTION","index","add_Option","getDaysOption","DAYS","add_RadioButton","getTotalTimeDurationOfEvent","eventDurationStr","eventStartTime","eventEndTime","diffInMin","hour","parseInt","onChangeRepeatType","adjustDate","handleCheckDays","tag","checked","nextSelectedTags","toConsumableArray","setFieldsValue","join","openCalendarStartDate","window","document","getElementsByClassName","click","openCalendarEndDate","validateForm","getParticipantOptionField","disabledStartTime","current","disabledEndTime","msg","participant","_this$state$members","getActivityConfig","_this$props4","purpose","otherUser","_this$props$data$repe","repeatDays","autoCompleteResult","repeat","_this$props5","_this$props5$currentU","_this$props5$currentU2","_this$props5$currentU3","_this$props5$users","_this$props5$data","doRequest","url","User","getRelatedMembersURL","payload","catch","_ref2","_this$props6","_this$props6$data","title","loading","handleCancel","onChangeEventEndTime","onChangeEventStartTime","startDate","endDate","repeatType","onEndDateChange","onStartDateChange","disabledEndDate","eventEndTimeError","eventStartTimeError","showRepeating","disabledDateAndTime","disabledStartDateOnEdit","getFieldsError","_this$state2","eventDuration","activityConfig","es_form","onSubmit","add_reminderTitle","participants","add_activityMode","add_FormItem","REPEAT_TYPE","NONE","filterOption","children","toLowerCase","indexOf","DAILY","add_repeatInterval","WEEKLY","MONTHLY","YEARLY","add_selectedDays","date_picker","format","showToday","getCalendarContainer","onClick","calendar","disabledDate","time_picker","allowClear","use12Hours","autosize","es_button","type","htmlType","hasErrors","CalendarComponent","eventResize","duration","start","end","onEventDurationChange","eventResizeStart","eventResizeStop","eventDragStart","eventDrop","eventDragStop","adjustCurrentEvent","currentEvent","scrollIntoView","block","prevProps","prevState","bookedEvents","lib_default","header","left","center","right","defaultDate","events","editable","eventLimit","defaultView","eventDurationEditable","eventStartEditable","timezone","CalendarTimeSelecton","messageId","disabledStartDate","onPrev","onNext","_this$props2$particip","_this$props2$particip2","_this$props2$particip3","today","isValid","isSame","prev","calendarTimeSelection_CalendarComponent","Event","getBookedSlots","asyncToGenerator","regenerator_default","mark","_callee","_this$state$participa","_this$state$participa2","response","_response$payload","_payload$data","bookedSlots","wrap","_context","getBookedSlotsURL","params","clone","sent","startEditable","durationEditable","stop","assertThisInitialized","onFormChanges","changedValues","allValues","changeRepeat","changeRepeatInterval","getNewEndDate","eventStartDate","add","_this$state3","_assertThisInitialize3","close","resetState","eventTitle","onAddAppointment","_this$state4","startTime","startOf","endTime","editNotes","_this$props$event","eventType","editNotesReminder","reschedule","series","_this$state5","editReminder","_this$state6","_data$notes","onAddReminder","_this$state7","remindAlso","onChangeContext","adjustEventOnStartDateChange","prevDate","newDate","_this$state8","startOfNewDate","startOfPrevDate","diffInDays","subtract","Math","abs","currentDate","_assertThisInitialize4","day","getSubmitHandler","_this$props5$event","_event$eventType","_assertThisInitialize7","EVENT_ACTION","EDIT_NOTES","setFormRef","formRef","repeatInterValError","AddForm","create","onValuesChange","Add","newProps","show","isEqual","_newProps$currentUser","_newProps$currentUser2","_newProps$users","_event$data","participantOne","visible","isError","requesting","_this$props6$disabled","_this$props6$event","_this$props6$event$da","_this$props6$currentU","_this$props6$error","clearMsg","_currentUser$basicInf","eventData","otherParticipant","_this$state9","_this$state9$bookedEv","modalProps","RESCHEDULE","okButtonProps","onCancel","wrapClassName","destroyOnClose","footer","es_modal","CommonError","minHeight","modal_RadioGroup","modal_RadioButton","calendarTimeSelection","range","_state$modal","modal","modalType","entityId","_state$modal$data","_state$modal$data$ser","_state$events$events","getUserById","makeGetUserById","GLOBAL_MODALS","EVENT_MODAL","EDIT_REMINDER","open","EventModal","myProfile","personal","contacts","medical","settings","insurance","insuranceProvider","insurancePolicy","insuranceExpiresOn","hospital","work","hospitalName","speciality","specialityRule","licenseNumber","bio","addressLine1","addressLine2","zipcode","cityLabel","countryLabel","organisationName","services","notBlank","nursingTitle","physicalTherapyTitle","occupationalTherapyTitle","speechAndLanguagePathologyTitle","medicalCounsellingTitle","healthAideTitle","nursing","physicalTherapy","occupationalTherapy","speechAndLanguagePathology","medicalCounselling","healthAide","cardiacCareTitle","diabetesCareTitle","smokingCessationTitle","respiteCareTitle","homemakingTitle","cardiacCare","diabetesCare","smokingCessation","respiteCare","homemaking","medicalServices","homeHealthCare","specialCare","nonMedicalServices","basic","chiefComplaint","allergies","useComma","surgeriesFracture","otherConditions","vital","vitalSubtitle","bodyTemperature","respirationRate","breathePerMinute","pulseRate","bpm","bloodPressure","bpUnit","clinicalReadings","clinicalReadingsSubtitle","notBeBlank","caseDoctor","notAssigned","relativeName","parent","spouse","guardian","relativeMobile","contactRelative","emergencyContactMobile","emergencyContactName","emergencyContactRule","phoneNumberRule","careCoachphoneNumberRule","changePassword","calendarSynced","smsAlerts","smsWillBeSent","emailAlerts","emailWillBeSent","pushAlerts","pushWillBeSent","reminderAlerts","reminderWillBeSent","account","notifications","selectPhotoTitle","photoOKText","cropImage","photoVisibleInfo","verified","notVerified","mobile","nameRule","dobRule","genderRule","localityRule","zipcodeRule","cityRule","countryRule","sendOTP","fullName","dateOfBirth","email","male","female","city","country","consentForm","idProof","uploadedOn","newPatient","newDoctor","patientEmail","doctorEmail","incorrectEmail","program","programError","newPatientSuccess","newPatientFailure","newDoctorSuccess","newDoctorFailure","licenseId","hospitalError","relativeNumberError","emergencyNumberError","dropdownIcon","dropDown","PATIENT_PROGRAM","HOSPITAL","ERROR_PRONE_FIELDS","errMessage","endOf","AddPatient","showModal","getProgramsData","programsData","programs","isBefore","expiresOn","addPatient_Option","getDoctorsData","programId","getFieldValue","_ref$doctors","doctorsData","doctorId","getHospitalsData","_this$props2$hospital","hospitals","_this$props2$users","hospitalsData","selectedDoctor","visitingHospitals","includes","without","is_link_send","is_error","openCalendar","k","onChangeProgram","fetchProgramDoctors","_this$props3$form","resetFields","onChangeDoctor","_this$props4$form","fetchDoctorHospitals","isText","match","toggleAddPatient","handleOk","fetchProgramsData","formData","userCategory","method","REQUEST_TYPE","POST","addPatientURL","setTimeout","fieldError","field","CommonMessage","onOk","okText","MobileInput","assign","phoneField","countryCodeField","es_radio","justifyContent","paddingTop","CountryCity","cityField","countryField","cityRules","countryRules","React","PATIENT_MODAL","fetchProgramDoctorsForModal","DOCTOR_COUNTRY","DOCTOR_CITY","AddDoctor","onChangeCity","countryId","cityId","fetchHospitals","onChangeCountry","_this$props$form2","addDoctor_Option","addDoctorURL","_this$props$form3","specialities","countryCity","DOCTOR_MODAL","adverseEvent","tagAPatient","whatHappen","severity","mild","moderate","severe","verySevere","fatal","upload","report","medicationDetails","lastMedicatedOn","daysOfMedicationLeftTill","AdverseEventForm","getSeverityOption","SEVERITY","MILD","MODERATE","SEVERE","VERY_SEVERE","FATAL","form_RadioButton","getPatientOption","_this$state$patients","_data$basicInfo","_data$basicInfo$profi","_data$personalInfo","form_Option","getLatestMedication","_this$props$medicatio","medications","products","loggedInUser","_medication$medicine","medicine","allKeys","keys","medicines","updatedAt","updatedOnDate","_medicine$value","product_id","often","upto","product_detail","medicatedTill","daysLeftForMedication","onChangePatient","fetchUserRecentMedication","validateTime","cb","_x","_x2","_x3","_res$payload","_res$payload$data","_res$payload$data$mem","_value$basicInfo","patientError","descriptionError","timeError","setParticipantRef","form_FormItem","form_TextArea","minRows","maxRows","setDatePickerRef","setTimePickerRef","alowClear","clearIcon","form_RadioGroup","previewDoc","objectWithoutProperties","startsWith","controls","preload","preview","media","onRemove","renderedImages","medium","mediaType","remove","AdverseEvent","disabledOk","docs","fileList","errorMsg","handleReport","reFetchAdverseEvent","authUser","_assertThisInitialize2","patient","_medicationData$medic","onStart","file","filename","progress","onSuccess","ret","onError","onProgress","percent","onAbort","onUploadComplete","_ref2$files","files","customRequest","_ref3","FormData","append","onUploadProgress","_ref4","total","loaded","round","toFixed","Common","getUploadURL","abort","removeAttachment","pos","newDocs","doc","newFileList","handleChange","info","beforeUpload","endsWith","multiple","showUploadList","accept","allvalues","isFieldsTouched","docslist","description","uid","config","BASE_DOC_URL","resetMsg","FormWrapper","onFieldsChange","bodyStyle","height","overflowY","wrappedComponentRef","_state$medications","_state$products","_state$auth","getUser","ADVERSE_EVENTS","reportAdverseEvent","fetchAdverseEvent","getRecentMedication","changeButton","CONFIRM_PASSWORD","NEW_PASSWORD","ERROR_PRONES_FIELD","ChangePassword","currPass","newPass","confirmPass","_assertThisInitialize","hideShowCurrentPass","showCurrentPass","hideShowNewPass","showNewPass","hideShowConfirmPass","showConfirmPass","handleChangePassword","compareToFirstPassword","validateToNextPassword","force","prevprops","prevstate","change_password_error","_this$props$is_changi","is_changing_password_error","changePassword_FormItem","suffix","hide","backgroundColor","bottom","marginLeft","textAlign","icoError","Modal_changePassword","page","CHANGE_PASSWORD","is_password_changing","is_password_changed","endSurvey","content","endSurveyButton","EndSurvey","handleEndSurvey","surveyId","endSurveys","location","href","t0","_this$props2$programs","programs_data","progrmaName","isEmpty","alertIcon","END_SURVEY","EndSurveyModal","CancelAppointment","handleOnTextChange","reasonForCancel","_this$props$eventDeta","eventDetails","eventId","handleCancelAll","_this$props2$eventDet","_this$props$eventDeta2","_this$props$eventDeta3","currentUserId","_this$props3$eventDet","cancel_TextArea","calendarUserId","hideAction","subentity","_state$events","CANCEL_APPOINTMENT","CANCEL_REMINDER","fetchEventsData","CancelModal","discharge","dischargeButton","DischargePatient","handleDischarge","patientId","dischargePatient","DISCHARGE_PATIENT","DischargePatientModal","verifyButton","reUploadButton","consentFormCheckbox","idProofCheckbox","DocumentViewer","renderImage","element","imageViewer","ImageViewer","showImage","onClickImage","baseUrl","load","_this$props$doc","pdfjs","GlobalWorkerOptions","workerSrc","version","PdfViewer","onDocumentLoadSuccess","numPages","renderPages","pages","totalPages","i","entry","pageNumber","pdfUrl","onLoadSuccess","replaceWarning","reUploadText","nextButton","prevButton","IMAGEFORMAT","PDFFORMAT","CommonUpload","handleComplete","isJPG","isPdf","es_message","uploadProps","_this$props$label","IdProofViewer","_this$props$user_data","user_data","_this$props$user_data2","documents","consentDocs","isIdProofUploaded","currentIndex","totalSize","nextDocument","previousDocument","handleReUpload","reUploadIdProofs","_this$props$user_data3","scrollTo","_this$props2$user_dat","_this$props2$user_dat2","baseDocUrl","_this$props2$modal","showIndex","Components_PdfViewer","Components_DocumentViewer","Common_upload","ConsentDocumentView","isConsentFormUploaded","getScroll","_this$props$user_data4","_loop","docPreview_previewDoc","_this$props$user_data5","_this$props$user_data6","_doc$uploadedOn","savedOn","uploadDate","maxHeight","maxWidth","ID_PROOF","CONSENT_FORM","DocumentVerification","openConsent","isConsentVerified","isIdProofVerified","currentField","handleVerify","verifyDocuments","verifyConsentForm","verifyIdProof","handleMenu","handleConsentClick","handleIdClick","handleDisable","_ref$documents","_ref$documents$consen","consentFormVerified","_ref$documents$idProo","idProofVerified","reUploadConsentDocs","_this$props4$currentU","_this$props4$currentU2","_ref2$documents","_ref2$documents$conse","_ref2$documents$conse2","_ref2$documents$idPro","_ref2$documents$idPro2","uploadMessage","_currentUser$document","_ref3$documents","_ref3$documents$conse","_ref3$documents$idPro","_this$props7","LoggedInUser","_currentUser$document2","_LoggedInUser$basicIn","patientName","selectedKey","menu","defaultSelectedKeys","page_idProof","consentDocument","DOCUMENTS_MODAL","proofs","verify","DocumentVerificationModal","MobileAppWrapper","BrowserRouter","Containers_Routes","Modal_event","Modal_addPatient","Modal_addDoctor","Modal_adverseEvent","Containers_Modal_changePassword","Modal_endSurvey","cancelEvent","Containers_Modal_dischargePatient","Modal_documentVerification","ErrorComponent","react__WEBPACK_IMPORTED_MODULE_2___default","antd_es_row__WEBPACK_IMPORTED_MODULE_0__","antd_es_col__WEBPACK_IMPORTED_MODULE_1__","xs","sm","md","lg","xl","xxl","antd_es_form__WEBPACK_IMPORTED_MODULE_8__","antd_es_select__WEBPACK_IMPORTED_MODULE_7__","ParsedCountryCodes","countryCode","callingCountries","cc","countryCallingCodes","code","getParsedCountryCode","getCountryAlpha","country_alpha","alpha2","MobileLabel","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_this$props$countryCo","_this$props$phoneNumb","phoneNumber","react__WEBPACK_IMPORTED_MODULE_9___default","react_country_flag__WEBPACK_IMPORTED_MODULE_11__","svg","_Component2","selectedCountryCode","val","showDropDown","suggestedCountryCodes","setInitialCountryCode","searchCountryCode","debounce","_this$props$countryCo2","nextProps","currentProps","_this$props2$fieldErr","_this$props2$rulesPho","rulesPhoneNumber","margin","validateTrigger","rulesCountryCode","notFoundContent","onSearch","onSelect","showArrow","dropdownStyle","dropdownClassName","optionLabelProp","d","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","antd_es_input__WEBPACK_IMPORTED_MODULE_0__","dashboard","mycalender","surveys","newAppointment","headerlogo","signUp","signIn","MyMedicalDetails","signOut","showSearchbar","showAddButton","es_menu","openModal","openAddPatientModal","openAddDoctorModal","search","chat","getProgramChildren","programChildred","obj","validity","VALIDITY","ACTIVE","EXPIRE","getPatientChildren","patientChildred","_patient$homeAddress","homeAddress","_patient$profilePicLi","UserDpPlaceholder","disease","ENTITY","age","getDoctorChildren","doctorChildred","Speciality","auto_complete","SearchBox","gotToSearchResult","targetValue","dataSource","history","path","SEARCH","query","handleOnClick","entity","showoptions","getoptions","isLoading","Program","Patient","Doctor","throttle","trim","GET","result","validGroups","group","searchresultAvialable","marginTop","paddingBottom","size","opt","PROGRAM","dropdownMatchSelectWidth","position","border","autoFocus","prefix","Cross","hideSearchbar","withRouter","AppHeader","gotoMyProfile","MY_PROFILE","showSearchBar","hideSearchBar","_this$props$location","pathname","querystring","parse","placeHolder","isProfileCompleted","showmenu","currentTab","logo","signup","headersIcon","dropdown","overlay","placement","trigger","Components_SearchBox","searchedText","color","CountryCityInput","updateCountries","countries","getCities","currentCountry","changeCityOptions","cityInput","getCitiesOption","_this$state$currentCo","_this$state$data","_this$state$cityInput","_this$props$city","defaultCity","countriesData","_countriesData$cities","cities","JSON","stringify","citiesList","_ref$cities","defaultSelectedCity","getCountriesOption","countries_list","countryOptions","getFieldsValue","is_loading","isBlank","getCountries","currentState","_nextProps$countries_","_this$props2$cityRule","_this$props2$countryR","countryCities","rescheduleAll","rescheduleThis","updateVitals","updateMedication","updateClinicalReadings","doneButton","undoButton","joinCallButton","scheduledBy","markAsDoneBy","ActionsButton","handleMarkAsDone","handleUndo","ACTIONS","JOIN_CALL","Link","to","MARK_AS_DONE","UNDO","MoreOptions","handleEditNotes","handleRescheduleThis","handleRescheduleAll","handleUpdateVitals","handleUpdateMedication","handleUpdateClinicalReading","moreOptions","EDIT_NOTES_OF_APPOINTMENT","RESCHEDULE_APPOINTMENT","RESCHEDULE_THIS_APPOINTMENT","RESCHEDULE_ALL_APPOINTMENT","UPADTE_VITALS","UPDATE_CLINICAL_READING","UPDATE_MEDICATION","_this$props$actions","actions","medicationIcon","medic","followupIcon","materialIcon","material","activityIcon","_props$event","_props$event$data","cardVisitIcon","cardVisit","cardVisitIconMissed","cardVisitMissed","cardCallIcon","cardCall","cardCallIconMissed","cardCallMissed","cardVideoCallIcon","cardVideoCall","cardVideoCallIconMissed","cardVideoCallMissed","appointmentTypeIcon","EVENT","ACTIVITY_MODE","STATUS","PASSED","Meta","AppointmentCard","handleClick","handleCardClick","cardClicked","handleLeave","openCancelModal","setAppointmentStatus","COMPLETED","isAfter","PENDING","STARTED","rescheduleEvent","getPatientId","participantOneCategory","participantOneId","_this$props2$particip4","participantTwoId","_this$props$viewer","_this$props$viewer$ba","_this$props$viewer$ba2","currentMedicalField","_this$props$viewer2","_this$props$viewer2$b","_this$props$viewer2$b2","_this$props$viewer3","_this$props$viewer3$b","_this$props$viewer3$b2","getAppointmentWithCategoryText","modalOpen","_this$props3$event","_this$props3$modal","_this$props3$hideActi","appointmentHelper","AppointmentHelper","getStartTime","isCardEnable","getNotes","statusName","getStatus","activityName","getActivityName","activityTypeName","getActivityTypeName","getEventDuration","lastActedUserName","getLastActedUser","appointmentWith","getAppointmentWithTag","_appointmentWith$basi","appointmentWithUserName","_appointmentWith$basi2","appointmentWithProfilePic","profilePicPlaceHolder","categoryName","_this$props$match","_this$props$match$par","cardStatusCompletedBy","card","onMouseLeave","hoverable","actionButton","getAction","avatar","moreoptions","getMoreOption","viewerId","stateProps","dispatchProps","ownProps","editNotesDispatch","openCancelModalDispatch","setAppointmentStatusDispatch","rescheduleEventDispatch","calendarUser","addNotes","deleteReminder","handleReschedule","EDIT_NOTES_OF_REMINDER","RESCHEDULE_REMINDER","RESCHEDULE_THIS_REMINDER","RESCHEDULE_ALL_REMINDER","cardReminderIcon","cardReminder","ReminderCard","_this$props$hideActio","_this$props$modal","reminderHelper","ReminderHelper","getStartDate","reminderWith","getReminderWithTag","getReminderTitle","_ref$basicInfo","reminderWithUserName","_ref$basicInfo$profil","reminderWithProfilePic","getReminderWithCategoryText","substr","viewer_id"],"mappings":"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","file":"static/js/MobileWrapper.a7cd9b3f.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nfunction asyncComponent(getComponent) {\n  class AsyncComponent extends Component {\n    static Component = null;\n    state = { Component: AsyncComponent.Component };\n\n    componentWillMount() {\n      if (!this.state.Component) {\n        getComponent().then(Component => {\n          AsyncComponent.Component = Component;\n          this.setState({ Component });\n        });\n      }\n    }\n    render() {\n      const { Component } = this.state;\n      if (Component) {\n        return <Component {...this.props} />;\n      }\n      return null;\n    }\n  }\n  return AsyncComponent;\n}\n\nconst Global = asyncComponent(() =>\n  import(\"./global\").then(module => module.default)\n);\nconst Auth = asyncComponent(() =>\n  import(\"../Containers/Auth\").then(module => module.default)\n);\n\nexport default class Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    //\n\n    const { onAppStart } = this.props;\n    onAppStart();\n  }\n\n  render() {\n    const { authenticated, unauthorizedError } = this.props;\n    if (authenticated !== true && authenticated !== false) {\n      return <div>Loading</div>;\n    }\n\n    return (\n      <Fragment>\n        {authenticated === true ? (\n          <Auth\n            unauthorizedError={unauthorizedError}\n            authRedirection={this.props.authRedirection}\n          />\n        ) : (\n          <Global />\n        )}\n      </Fragment>\n    );\n  }\n}\n","import Routes from \"../../routes\";\n\nimport { connect } from \"react-redux\";\nimport { onAppStart } from \"../../../modules/auth\";\n\nconst mapStateToProps = state => {\n  const { auth } = state;\n  return {\n    authenticated: auth.authenticated,\n    authenticatedUser: auth.authenticated_user,\n    authRedirection: auth.authRedirection,\n    unauthorizedError: auth.unauthorizedError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAppStart: () => {\n      dispatch(onAppStart());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Routes);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  schedule: {\n    id: \"app.event.schedule\",\n    description: \"\",\n    defaultMessage: \"Schedule New\"\n  },\n  cancel: {\n    id: \"app.event.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel\"\n  },\n  addAppointment: {\n    id: \"app.event.addAppointment\",\n    description: \"\",\n    defaultMessage: \"Add Appointment\"\n  },\n  addReminder: {\n    id: \"app.event.addReminder\",\n    description: \"\",\n    defaultMessage: \"Add Reminder\"\n  },\n  chooseWhen: {\n    id: \"app.event.chooseWhen\",\n    description: \"\",\n    defaultMessage: \"Choose When\"\n  },\n  appointment: {\n    id: \"add.event.appointment\",\n    description: \"\",\n    defaultMessage: \"Appointment\"\n  },\n  reminder: {\n    id: \"add.event.reminder\",\n    description: \"\",\n    defaultMessage: \"Reminder\"\n  },\n  reminderTitle: {\n    id: \"app.event.reminderTitle\",\n    description: \"\",\n    defaultMessage: \"Reminder Title\"\n  },\n  alongWithPlaceHolder: {\n    id: \"app.event.reminderalongwith\",\n    description: \"\",\n    defaultMessage: \"Tag a patient or a doctor\"\n  },\n  alongWithLabelAppointment: {\n    id: \"app.event.appointmentAlongWithLabel\",\n    description: \"\",\n    defaultMessage: \"Appointment with\"\n  },\n  alongWithLabelReminder: {\n    id: \"app.event.reminderAlongWithLabel\",\n    description: \"\",\n    defaultMessage: \"Reminder with\"\n  },\n  doesNotRepeat: {\n    id: \"app.event.doesNotRepeat\",\n    description: \"\",\n    defaultMessage: \"Does not repeat\"\n  },\n  repeatsDaily: {\n    id: \"app.event.repeatsDaily\",\n    description: \"\",\n    defaultMessage: \"Repeats Daily\"\n  },\n  repeatsWeekly: {\n    id: \"app.event.repeatsWeekly\",\n    description: \"\",\n    defaultMessage: \"Repeats Weekly\"\n  },\n  repeatsMonthly: {\n    id: \"add.event.repeatsMonthly\",\n    description: \"\",\n    defaultMessage: \"Repeats Monthly\"\n  },\n  repeatsYearly: {\n    id: \"add.event.repeatsYearly\",\n    description: \"\",\n    defaultMessage: \"Repeats Yearly\"\n  },\n  appointmentType: {\n    id: \"add.event.appointmentType\",\n    description: \"\",\n    defaultMessage: \"Appointment Type\"\n  },\n  repeatIntervalError: {\n    id: \"add.event.repeatIntervalError\",\n    description: \"\",\n    defaultMessage: \"Repeat Interval is required\"\n  },\n  activity: {\n    id: \"add.event.activity\",\n    description: \"\",\n    defaultMessage: \"Activity\"\n  },\n\n  followup: {\n    id: \"app.event.followup\",\n    description: \"\",\n    defaultMessage: \"Follow Up\"\n  },\n  medication: {\n    id: \"add.event.medication\",\n    description: \"\",\n    defaultMessage: \"Medication\"\n  },\n  materialDelivery: {\n    id: \"add.event.materialDelivery\",\n    description: \"\",\n    defaultMessage: \"Material Delivery\"\n  },\n  visit: {\n    id: \"app.event.visit\",\n    description: \"\",\n    defaultMessage: \"Visit\"\n  },\n  call: {\n    id: \"add.event.call\",\n    description: \"\",\n    defaultMessage: \"Phone Call\"\n  },\n  textEmail: {\n    id: \"add.event.textEmail\",\n    description: \"\",\n    defaultMessage: \"Video Call\"\n  },\n\n  from: {\n    id: \"app.event.from\",\n    description: \"\",\n    defaultMessage: \"From\"\n  },\n  till: {\n    id: \"add.event.till\",\n    description: \"\",\n    defaultMessage: \"Till\"\n  },\n  on: {\n    id: \"add.event.on\",\n    description: \"\",\n    defaultMessage: \"On\"\n  },\n  at: {\n    id: \"app.event.at\",\n    description: \"\",\n    defaultMessage: \"At\"\n  },\n  repeatsOn: {\n    id: \"add.event.repeatsOn\",\n    description: \"\",\n    defaultMessage: \"Repeats on:\"\n  },\n  notes: {\n    id: \"add.event.notes\",\n    description: \"\",\n    defaultMessage: \"Write notes (optional)\"\n  },\n  cancelAppointment: {\n    id: \"cancel.event.calendarCard\",\n    description: \"\",\n    defaultMessage: \"Cancel Appointment\"\n  },\n  cancelReminder: {\n    id: \"cancel.event.Reminder\",\n    description: \"\",\n    defaultMessage: \"Cancel Reminder\"\n  },\n  goback: {\n    id: \"cancel.all.event.calendarCard\",\n    description: \"\",\n    defaultMessage: \"Go Back\"\n  },\n  contentAppt: {\n    id: \"cancel.modal.contentAppt\",\n    description: \"\",\n    defaultMessage:\n      \"Please note that appointments once cancelled cannot be undone you may have to add new appointment in case you wanted to add similar appointment later.\"\n  },\n  messageAppt: {\n    id: \"cancel.modal.messageAppt\",\n    description: \"\",\n    defaultMessage: \"Are you sure you want to cancel the appointment?\"\n  },\n  contentRem: {\n    id: \"cancel.modal.contentRem\",\n    description: \"\",\n    defaultMessage:\n      \"Please note that reminders once cancelled cannot be undone you may have to add new reminder in case you wanted to add similar reminder later.\"\n  },\n  messageRem: {\n    id: \"cancel.modal.messageRem\",\n    description: \"\",\n    defaultMessage: \"Are you sure you want to cancel the reminder?\"\n  },\n  alert: {\n    id: \"cancel.modal.alert\",\n    description: \"\",\n    defaultMessage:\n      \"This action cannot be undone. For help, contact program admin\"\n  },\n  buttonCancelThisOnly: {\n    id: \"cancel.modal.buttonCancelThisOnly\",\n    description: \"\",\n    defaultMessage: \"Cancel This Only\"\n  },\n  buttonCancelAll: {\n    id: \"cancel.modal.buttonCancelAll\",\n    description: \"\",\n    defaultMessage: \"Cancel All\"\n  },\n  remindMyCareCoach: {\n    id: \"add.event.remindCareCoach\",\n    description: \"\",\n    defaultMessage: \"Remind my Care Coach also\"\n  },\n  forPatientApptType: {\n    id: \"event.modal.forPatientApptType\",\n    description: \"\",\n    defaultMessage: \"Follow Up appointment\"\n  },\n  econsulting: {\n    id: \"add.event.econsulting\",\n    description: \"\",\n    defaultMessage: \"Online Video Call(E-consultation)\"\n  },\n  reason: {\n    id: \"cancel.modal.reason\",\n    description: \"\",\n    defaultMessage: \"Write reason for cancelling this appointment\"\n  }\n});\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Radio } from \"antd\";\n\nimport messages from \"../message\";\n\nconst { Group: RadioGroup, Button: RadioButton } = Radio;\n\nclass AppointmentType extends Component {\n  componentDidMount() {\n    const {\n      activityType,\n      onChangeActivityType,\n      data: { mode = {} } = {}\n    } = this.props;\n    const activityModeOption = mode[activityType] || [];\n    for (const modeData of activityModeOption) {\n      const { value, disable } = modeData;\n      if (disable === false) {\n        onChangeActivityType({ activityMode: value });\n        break;\n      }\n    }\n  }\n\n  onChangeActivityType = e => {\n    e.preventDefault();\n    const activityType = e.target.value;\n    const {\n      onChangeActivityType,\n      data: { mode = {} } = {},\n      activityMode: prevActivityMode\n    } = this.props;\n    let data = { activityType };\n    const activityModeOption = mode[activityType] || [];\n\n    for (const modeData of activityModeOption) {\n      const { value, disable } = modeData;\n      if (disable === false) {\n        data = { ...data, activityMode: value };\n        break;\n      }\n    }\n\n    for (const modeData of activityModeOption) {\n      const { value, disable } = modeData;\n      if (disable === false && prevActivityMode === value) {\n        data = { ...data, activityMode: value };\n        break;\n      }\n    }\n\n    onChangeActivityType(data);\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n  render() {\n    const { disabledForEdit, data: { activity } = {} } = this.props;\n    const { activityType } = this.props;\n    const { formatMessage, onChangeActivityType } = this;\n\n    // if (activity.length === 1) {\n    //   return (\n    //     <div className=\"flex justify-content-start align-items-start mb24\">\n    //       <div className=\"label-color fontsize12 mr8\">\n    //         {formatMessage(messages.appointmentType)}\n    //       </div>\n    //       <div>{formatMessage(messages.forPatientApptType)}</div>\n    //     </div>\n    //   );\n    // } else {\n    return (\n      <Fragment>\n        <div className=\"label-color pb5 fontsize12\">\n          {formatMessage(messages.appointmentType)}\n        </div>\n        <RadioGroup\n          className=\"radio-group-tab mb24\"\n          buttonStyle=\"solid\"\n          disabled={disabledForEdit}\n          onChange={onChangeActivityType}\n          defaultValue={activityType}\n          value={activityType}\n        >\n          {activity.map(option => {\n            return (\n              <RadioButton\n                key={option.value}\n                className=\"full-width\"\n                disabled={option.disable}\n                value={option.value}\n              >\n                {formatMessage(option.label)}\n              </RadioButton>\n            );\n          })}\n        </RadioGroup>\n      </Fragment>\n    );\n    // }\n  }\n}\n\nexport default injectIntl(AppointmentType);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Radio } from \"antd\";\n\nimport messages from \"../message\";\n\nconst { Group: RadioGroup, Button: RadioButton } = Radio;\n\nclass ActivityMode extends Component {\n  onChangeActivityMode = e => {\n    e.preventDefault();\n    const { onChangeActivityMode } = this.props;\n    onChangeActivityMode(e.target.value);\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n  render() {\n    const { activityMode, activityType, data: { mode = {} } = {} } = this.props;\n    const { disabledForEdit } = this.props;\n    const activityModeOption = mode[activityType];\n    console.log(\"act,\", activityType, activityModeOption, activityMode);\n    const { formatMessage, onChangeActivityMode } = this;\n\n    return (\n      <Fragment>\n        <div className=\"label-color pb5 fontsize12\">\n          {formatMessage(messages.activity)}\n        </div>\n        <RadioGroup\n          className=\"radio-group-tab mb24\"\n          buttonStyle=\"solid\"\n          disabled={disabledForEdit}\n          value={activityMode}\n          onChange={onChangeActivityMode}\n          defaultValue={activityMode}\n        >\n          {activityModeOption.map(option => {\n            return (\n              <RadioButton\n                key={option.value}\n                className=\"full-width\"\n                value={option.value}\n                disabled={option.disable}\n              >\n                {formatMessage(option.label)}\n              </RadioButton>\n            );\n          })}\n        </RadioGroup>\n      </Fragment>\n    );\n    // }\n  }\n}\n\nexport default injectIntl(ActivityMode);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Select, Radio, Form, Checkbox } from \"antd\";\nimport moment from \"moment\";\nimport {\n  USER_CATEGORY,\n  EVENT_TYPE,\n  USER_STATUS,\n  ACTIVITY_TYPE,\n  APPOINTMENT_TYPE\n} from \"../../../../../constant\";\nimport messages from \"../message\";\n// import dropDownIcon from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport userPlaceHolder from \"../../../../../Assets/images/ico-placeholder-userdp.svg\";\nimport searchIcon from \"../../../../../Assets/images/ico-search.svg\";\n\n// const DropDownIcon = <img src={dropDownIcon} alt=\"d\" className=\"w24 h24\" />;\nconst SearchIcon = <img src={searchIcon} alt=\"s\" className=\"w18 h18\" />;\n\nconst { Group: RadioGroup, Button: RadioButton } = Radio;\nconst { Option, OptGroup } = Select;\nconst { Item: FormItem } = Form;\n\nclass Participants extends Component {\n  getParentNode = t => t.parentNode;\n\n  insertUserEntry = users => {\n    const userOptions = [];\n    users.forEach(user => {\n      const {\n        basicInfo: { _id, name, profilePicLink = userPlaceHolder },\n        personalInfo: { dob, gender }\n      } = user;\n      const years = dob && moment().diff(dob, \"years\", false);\n      userOptions.push(\n        <Option key={_id} value={_id} name={name}>\n          <div className=\"flex justify-content-start align-items-center iqvia-user-snippet\">\n            <img alt={\"user\"} src={profilePicLink} />\n            <div className=\"deep-sea-blue fontsize12 mr8\">{`${name}${\n              years ? ` (${years} ${gender})` : \"\"\n            }`}</div>\n          </div>\n        </Option>\n      );\n    });\n    return userOptions;\n  };\n\n  getParticipantOption = () => {\n    const { members = [] } = this.props;\n    console.log(\" ---- members\", members);\n    let options = [];\n    const doctors = members.filter(member => {\n      return member.basicInfo.category === USER_CATEGORY.DOCTOR;\n    });\n    const patients = members.filter(member => {\n      return (\n        member.basicInfo.category === USER_CATEGORY.PATIENT &&\n        member.status === USER_STATUS.ENROLLED\n      );\n    });\n    const careCoach = members.filter(member => {\n      return member.basicInfo.category === USER_CATEGORY.CARE_COACH;\n    });\n    if (doctors.length > 0) {\n      options.push(\n        <OptGroup key={\"doctor\"} label={`Doctors (${doctors.length})`}>\n          {this.insertUserEntry(doctors)}\n        </OptGroup>\n      );\n    }\n    if (patients.length > 0) {\n      options.push(\n        <OptGroup key={\"patient\"} label={`Patients (${patients.length})`}>\n          {this.insertUserEntry(patients)}\n        </OptGroup>\n      );\n    }\n\n    if (careCoach.length > 0) {\n      options.push(\n        <OptGroup key={\"careCoach\"} label={`Carecoaches (${careCoach.length})`}>\n          {this.insertUserEntry(careCoach)}\n        </OptGroup>\n      );\n    }\n\n    return options;\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  onChangeParticpantRadioGroup = e => {\n    e.preventDefault();\n    const { setParticipantTwo, members = [] } = this.props;\n    const value = e.target.value;\n    const { onChangeActivityType } = this.props;\n    let category;\n    members.forEach(member => {\n      const { basicInfo: { _id, category: memberCategory } = {} } = member;\n      if (_id === value) {\n        category = memberCategory;\n      }\n    });\n    if (category === USER_CATEGORY.DOCTOR) {\n      // onChangeActivityMode(APPOINTMENT_TYPE.FOLLOWUP);\n      onChangeActivityType({\n        activityMode: ACTIVITY_TYPE.CHAT,\n        activityType: APPOINTMENT_TYPE.FOLLOWUP\n      });\n    }\n    setParticipantTwo(value);\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator, isFieldTouched, getFieldError },\n      currentUser: { basicInfo: { category }, programIds = [] } = {},\n      fieldName,\n      participantTwo,\n      userId,\n      eventMode,\n      disabledForEdit,\n      remindCareCoach,\n      setParticipantTwo\n    } = this.props;\n    const {\n      getParticipantOption,\n      formatMessage,\n      onChangeParticpantRadioGroup\n    } = this;\n\n    const participantError =\n      isFieldTouched(fieldName) && getFieldError(fieldName);\n    const { careCoach, doctor } = programIds[0] || {};\n\n    if (\n      eventMode === EVENT_TYPE.REMINDER &&\n      category === USER_CATEGORY.PATIENT\n    ) {\n      return (\n        <div className=\"flex justify-content-space-between mb24\">\n          <div className=\"fontsize14 black\">\n            {formatMessage(messages.remindMyCareCoach)}\n          </div>\n          <Checkbox\n            defaultChecked={!participantTwo ? false : true}\n            disabled={disabledForEdit}\n            onChange={remindCareCoach}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Fragment>\n        <div ref={this.setref}>\n          {(USER_CATEGORY.CARE_COACH === category ||\n            USER_CATEGORY.DOCTOR === category) && (\n            <FormItem\n              label={`${\n                eventMode === EVENT_TYPE.APPOINTMENT\n                  ? formatMessage(messages.alongWithLabelAppointment)\n                  : formatMessage(messages.alongWithLabelReminder)\n              }`}\n              validateStatus={participantError ? \"error\" : \"\"}\n              help={participantError || \"\"}\n            >\n              {getFieldDecorator(fieldName, {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Enter particpant\"\n                  }\n                ],\n                initialValue: participantTwo || userId\n              })(\n                <Select\n                  className=\"user-select\"\n                  disabled={disabledForEdit || userId !== undefined}\n                  placeholder={formatMessage(messages.alongWithPlaceHolder)}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"name\"\n                  suffixIcon={SearchIcon}\n                  onChange={setParticipantTwo}\n                  getPopupContainer={this.getParentNode}\n                >\n                  {getParticipantOption()}\n                </Select>\n              )}\n            </FormItem>\n          )}\n        </div>\n        {USER_CATEGORY.PATIENT === category && (\n          <Fragment>\n            <div className=\"label-color pb5 fontsize12\">\n              {formatMessage(messages.alongWithLabelAppointment)}\n            </div>\n            <FormItem style={{ marginBottom: \"16px\" }}>\n              {getFieldDecorator(fieldName, {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Enter particpant\"\n                  }\n                ],\n                initialValue: careCoach || participantTwo || userId\n              })(\n                <RadioGroup\n                  className=\"radio-group-tab mb24\"\n                  buttonStyle=\"solid\"\n                  disabled={disabledForEdit}\n                  onChange={onChangeParticpantRadioGroup}\n                >\n                  <RadioButton\n                    key={\"careCoach\"}\n                    className=\"full-width\"\n                    value={careCoach}\n                  >\n                    My Care Coach\n                  </RadioButton>\n                  <RadioButton\n                    key={\"doctor\"}\n                    className=\"full-width\"\n                    value={doctor}\n                  >\n                    My Doctor\n                  </RadioButton>\n                </RadioGroup>\n              )}\n            </FormItem>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Participants);\n","import React, { Component } from \"react\";\nimport { Form, Input } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { isNumber } from \"../../../../../Helper/validation\";\nimport messages from \"../message\";\n\nconst { Item: FormItem } = Form;\n\nclass RepeatInterval extends Component {\n  componentDidMount() {\n    this.validateFields();\n  }\n  componentWillUnmount() {\n    this.validateFields();\n  }\n\n  validateFields = () => {\n    const {\n      form: { validateFields },\n      setRepeatIntervalError\n    } = this.props;\n    validateFields((error, values) => {\n      if (error !== null) {\n        const { repeatInterval } = error;\n        setRepeatIntervalError(repeatInterval !== undefined);\n      }\n    });\n  };\n\n  validateRepeatInterval = (rule, value, callback) => {\n    const res = isNumber(value);\n\n    if (value && res.valid === false) {\n      callback(`${value} is not valid Repeat Interval.`);\n    } else if (value > 1000) {\n      callback(\"Repeat Interval cannot be greater than 1000\");\n    }\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator, getFieldError, isFieldTouched },\n      fieldName,\n      value,\n      getRepeatTypeStr,\n      onRepeatIntervalChange,\n      intl: { formatMessage }\n    } = this.props;\n    console.log(fieldName);\n    const { validateRepeatInterval } = this;\n\n    const repeatIntervalError =\n      isFieldTouched(fieldName) && getFieldError(fieldName);\n\n    return (\n      <div className=\"ml16\">\n        <FormItem\n          className=\"flex-1 flex repeat-interval\"\n          label={\"Repeats Every\"}\n          validateStatus={repeatIntervalError ? \"error\" : \"\"}\n          help={repeatIntervalError || \"\"}\n        >\n          {getFieldDecorator(fieldName, {\n            rules: [\n              {\n                required: true,\n                message: formatMessage(messages.repeatIntervalError)\n              },\n\n              {\n                validator: validateRepeatInterval\n              }\n            ],\n            initialValue: value\n          })(\n            <Input\n              onBlur={onRepeatIntervalChange}\n              className=\"full-width repeat-interval\"\n              min={1}\n              style={{ width: \"100%\" }}\n            />\n          )}\n          <div className=\"repeat-type\">{getRepeatTypeStr()}</div>\n        </FormItem>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(RepeatInterval);\n","import React, { Component } from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst { Item: FormItem } = Form;\n\nclass ReminderTitle extends Component {\n  componentDidMount() {\n    const {\n      form: { validateFields }\n    } = this.props;\n    validateFields();\n  }\n  componentWillUnmount() {\n    const {\n      form: { validateFields }\n    } = this.props;\n    validateFields();\n  }\n\n  render() {\n    const {\n      form: { getFieldDecorator, getFieldError, isFieldTouched },\n      fieldName,\n      value,\n      label,\n      disabled\n    } = this.props;\n\n    const error = isFieldTouched(fieldName) && getFieldError(fieldName);\n\n    return (\n      <FormItem\n        label={label}\n        style={{ marginBottom: \"16px\" }}\n        validateStatus={error ? \"error\" : \"\"}\n        help={error || \"\"}\n      >\n        {getFieldDecorator(fieldName, {\n          rules: [\n            {\n              required: true,\n              message: \"Enter reminder title\"\n            }\n          ],\n          initialValue: value\n        })(<Input disabled={disabled} />)}\n      </FormItem>\n    );\n  }\n}\n\nexport default ReminderTitle;\n","import React, { Component, Fragment } from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst { Item: FormItem } = Form;\n\nclass SelectedDays extends Component {\n  componentDidMount() {\n    const {\n      form: { validateFields }\n    } = this.props;\n    validateFields();\n  }\n  componentWillUnmount() {\n    const {\n      form: { validateFields }\n    } = this.props;\n    validateFields();\n  }\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      fieldName,\n      value,\n      label\n    } = this.props;\n    return (\n      <Fragment>\n        <FormItem label={label} style={{ display: \"none\" }}>\n          {getFieldDecorator(fieldName, {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: value\n          })(<Input />)}\n        </FormItem>\n      </Fragment>\n    );\n  }\n}\n\nexport default SelectedDays;\n","import {\n  USER_CATEGORY,\n  ACTIVITY_TYPE,\n  APPOINTMENT_TYPE\n} from \"../../../../../constant\";\nimport messages from \"../message\";\n\nconst DEFAULT = \"DEFAULT\";\n\nconst APPOINTMENT_FOR_CREATE_CONFIG = {\n  [USER_CATEGORY.CARE_COACH]: {\n    [USER_CATEGORY.PATIENT]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: false\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MATERIAL_DELIVERY]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MEDICATION]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ]\n      }\n    },\n    [USER_CATEGORY.DOCTOR]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: false\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MATERIAL_DELIVERY]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MEDICATION]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ]\n      }\n    },\n    [DEFAULT]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: false\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MATERIAL_DELIVERY]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MEDICATION]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ]\n      }\n    },\n    [USER_CATEGORY.DOCTOR]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: false\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MATERIAL_DELIVERY]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MEDICATION]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ]\n      }\n    }\n  },\n  [USER_CATEGORY.PATIENT]: {\n    [USER_CATEGORY.DOCTOR]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: true\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: true\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: true\n          }\n        ]\n      }\n    },\n    [USER_CATEGORY.CARE_COACH]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: false\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MATERIAL_DELIVERY]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ],\n        [APPOINTMENT_TYPE.MEDICATION]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: false\n          }\n        ]\n      }\n    },\n    [DEFAULT]: {\n      activity: [\n        {\n          value: APPOINTMENT_TYPE.FOLLOWUP,\n          label: messages.followup,\n          disable: false\n        },\n        {\n          value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n          label: messages.materialDelivery,\n          disable: true\n        },\n        {\n          value: APPOINTMENT_TYPE.MEDICATION,\n          label: messages.medication,\n          disable: true\n        }\n      ],\n      mode: {\n        [APPOINTMENT_TYPE.FOLLOWUP]: [\n          {\n            value: ACTIVITY_TYPE.CALL,\n            label: messages.call,\n            disable: true\n          },\n          {\n            value: ACTIVITY_TYPE.CHAT,\n            label: messages.textEmail,\n            disable: false\n          },\n          {\n            value: ACTIVITY_TYPE.VISIT,\n            label: messages.visit,\n            disable: true\n          }\n        ]\n      }\n    }\n  }\n};\n\nconst getAppointmentDataForEdit = (event = {}, viewer, other) => {\n  const { activityType, activityMode } = event;\n\n  return {\n    activity: [\n      {\n        value: APPOINTMENT_TYPE.FOLLOWUP,\n        label: messages.followup,\n        disable: activityType !== APPOINTMENT_TYPE.FOLLOWUP\n      },\n      {\n        value: APPOINTMENT_TYPE.MATERIAL_DELIVERY,\n        label: messages.materialDelivery,\n        disable: activityType !== APPOINTMENT_TYPE.MATERIAL_DELIVERY\n      },\n      {\n        value: APPOINTMENT_TYPE.MEDICATION,\n        label: messages.medication,\n        disable: activityType !== APPOINTMENT_TYPE.MEDICATION\n      }\n    ],\n    mode: {\n      [APPOINTMENT_TYPE.FOLLOWUP]: [\n        {\n          value: ACTIVITY_TYPE.CALL,\n          label: messages.call,\n          disable: activityMode !== ACTIVITY_TYPE.CALL\n        },\n        {\n          value: ACTIVITY_TYPE.CHAT,\n          label: messages.textEmail,\n          disable: activityMode !== ACTIVITY_TYPE.CHAT\n        },\n        {\n          value: ACTIVITY_TYPE.VISIT,\n          label: messages.visit,\n          disable: activityMode !== ACTIVITY_TYPE.VISIT\n        }\n      ],\n      [APPOINTMENT_TYPE.MATERIAL_DELIVERY]: [\n        {\n          value: ACTIVITY_TYPE.CALL,\n          label: messages.call,\n          disable: activityMode !== ACTIVITY_TYPE.CALL\n        },\n        {\n          value: ACTIVITY_TYPE.CHAT,\n          label: messages.textEmail,\n          disable: activityMode !== ACTIVITY_TYPE.CHAT\n        },\n        {\n          value: ACTIVITY_TYPE.VISIT,\n          label: messages.visit,\n          disable: activityMode !== ACTIVITY_TYPE.VISIT\n        }\n      ],\n      [APPOINTMENT_TYPE.MEDICATION]: [\n        {\n          value: ACTIVITY_TYPE.CALL,\n          label: messages.call,\n          disable: activityMode !== ACTIVITY_TYPE.CALL\n        },\n        {\n          value: ACTIVITY_TYPE.CHAT,\n          label: messages.textEmail,\n          disable: activityMode !== ACTIVITY_TYPE.CHAT\n        },\n        {\n          value: ACTIVITY_TYPE.VISIT,\n          label: messages.visit,\n          disable: activityMode !== ACTIVITY_TYPE.VISIT\n        }\n      ]\n    }\n  };\n};\n\nconst getAppointmentDataForCreate = (viewer, other) => {\n  return APPOINTMENT_FOR_CREATE_CONFIG[viewer][other];\n};\n\nexport const getActivityBetween = ({\n  viewer = {},\n  other = {},\n  event = {},\n  edit = false\n}) => {\n  const { basicInfo: { category: viewerCategory } = {} } = viewer;\n  const { basicInfo: { category: otherCategory = DEFAULT } = {} } = other;\n  if (edit) {\n    return getAppointmentDataForEdit(event, viewerCategory, otherCategory);\n  } else {\n    return getAppointmentDataForCreate(viewerCategory, otherCategory);\n  }\n};\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Form,\n  Input,\n  Select,\n  Radio,\n  TimePicker,\n  DatePicker,\n  Button,\n  Tag\n} from \"antd\";\n\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\n\nimport AppointmentType from \"./appointmentType\";\nimport ActivityMode from \"./activityMode\";\nimport Participants from \"./participants\";\nimport RepeatInterval from \"./repeatInterval\";\nimport ReminderTitle from \"./reminderTitle\";\nimport SelectedDays from \"./selectedDays\";\nimport { isNumber } from \"../../../../../Helper/validation\";\nimport { getActivityBetween } from \"./constant\";\n\nimport {\n  REPEAT_OPTION,\n  REPEAT_TYPE,\n  DAYS,\n  EVENT_TYPE,\n  ACTIVITY_TYPE,\n  APPOINTMENT_TYPE,\n  USER_CATEGORY\n} from \"../../../../../constant\";\nimport calendar from \"../../../../../Assets/images/button-select-date.svg\";\nimport dropDownIcon from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport messages from \"../message\";\nimport { doRequest } from \"../../../../../Helper/network\";\nimport { User } from \"../../../../../Helper/urls\";\nimport { hasErrors } from \"../../../../../Helper/validation\";\n\nconst { TextArea } = Input;\n\nconst DropDownIcon = <img src={dropDownIcon} alt=\"d\" className=\"w24 h24\" />;\n\n// function range(start, end) {\n//   const result = [];\n//   for (let i = start; i < end; i++) {\n//     result.push(i);\n//   }\n//   return result;\n// }\n\nconst { Item: FormItem } = Form;\nconst { Button: RadioButton } = Radio;\nconst { Option } = Select;\nconst { CheckableTag } = Tag;\n\nconst PARTICIPANT_TWO = \"participantTwo\";\nconst REPEAT = \"repeat\";\nconst REPEAT_PARAM_WEEKLY = \"repeatDays\";\nconst REPEAT_INTERVAL = \"repeat interval\";\nconst REPEATINTERVAL = \"repeatInterval\";\n\nconst REMINDER_TITLE = \"title\";\nconst SELECTED_DAYS = \"days\";\n// const START_DATE = \"startDate\";\n// const END_DATE = \"endDate\";\n// const START_TIME = \"startTime\";\n// const END_TIME = \"endTime\";\nconst NOTES = \"notes\";\n\nclass AddAppointment extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      data: { activityType, activityMode, repeatDays = [] } = {}\n    } = this.props;\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      selectedDays: repeatDays || [],\n      activityType: activityType || APPOINTMENT_TYPE.FOLLOWUP,\n      activityMode: activityMode || ACTIVITY_TYPE.CALL,\n      members: []\n    };\n  }\n\n  getParentNode = t => t.parentNode;\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n    const {\n      data: { repeat }\n    } = this.props;\n\n    if (repeat) {\n      this.onChangeRepeatType(repeat);\n    }\n    const { setParticipantTwo } = this;\n    const {\n      currentUser: { basicInfo: { category } = {}, programIds = [] } = {},\n      users = {},\n      data: { participantTwo } = {}\n    } = this.props;\n    if (\n      category === USER_CATEGORY.CARE_COACH ||\n      category === USER_CATEGORY.DOCTOR\n    ) {\n      doRequest({\n        url: User.getRelatedMembersURL()\n      })\n        .then(res => {\n          this.setState({ members: res.payload.data.members });\n        })\n        .catch(err => {});\n    } else if (category === USER_CATEGORY.PATIENT) {\n      const { careCoach, doctor } = programIds[0] || {};\n      this.setState({ members: [users[careCoach], users[doctor]] }, () => {\n        setParticipantTwo(careCoach);\n      });\n      setParticipantTwo();\n    }\n    if (participantTwo) {\n      setParticipantTwo(participantTwo);\n    }\n  }\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({\n      confirmDirty: this.state.confirmDirty || !!value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { handleSubmit } = this.props;\n    const {\n      selectedDays,\n      activityMode,\n      activityType,\n      remindCareCoach = false\n    } = this.state;\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        handleSubmit({\n          ...values,\n          [REPEAT_PARAM_WEEKLY]: selectedDays,\n          activityMode,\n          activityType,\n          remindCareCoach\n        });\n      }\n    });\n  };\n\n  getRepeatOption = () => {\n    return REPEAT_OPTION.map((value, index) => {\n      return (\n        <Option key={index} value={value.key}>\n          {value.label}\n        </Option>\n      );\n    });\n  };\n\n  getDaysOption = () => {\n    return DAYS.map(value => {\n      return (\n        <RadioButton key={value} value={value}>\n          {value}\n        </RadioButton>\n      );\n    });\n  };\n\n  getTotalTimeDurationOfEvent = () => {\n    let eventDurationStr = \"\";\n    const { eventStartTime, eventEndTime } = this.props;\n    const diffInMin =\n      eventEndTime > eventStartTime\n        ? eventEndTime.diff(eventStartTime, \"minutes\")\n        : 0;\n    if (diffInMin > 0) {\n      const hour = parseInt(diffInMin / 60);\n      const min = diffInMin % 60;\n      eventDurationStr =\n        hour > 0\n          ? `Duration ${hour} hour ${min > 0 ? `${min} min` : \"\"}`\n          : `Duration ${min} min`;\n    }\n    return eventDurationStr;\n  };\n\n  onChangeRepeatType = value => {\n    const { onChangeRepeatType, adjustDate } = this.props;\n    onChangeRepeatType(value);\n    adjustDate();\n  };\n\n  handleCheckDays = (tag, checked) => {\n    const { selectedDays } = this.state;\n    const nextSelectedTags = checked\n      ? [...selectedDays, tag]\n      : selectedDays.filter(t => t !== tag);\n    this.setState({ selectedDays: nextSelectedTags });\n    const {\n      form: { setFieldsValue, validateFields }\n    } = this.props;\n    setFieldsValue({ [SELECTED_DAYS]: nextSelectedTags.join(\",\") });\n    validateFields();\n  };\n\n  openCalendarStartDate = e => {\n    e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[0]\n      .click();\n  };\n\n  openCalendarEndDate = e => {\n    e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[1]\n      .click();\n  };\n\n  onChangeActivityType = data => {\n    this.setState(data);\n  };\n\n  onChangeActivityMode = activityMode => {\n    this.setState({ activityMode: activityMode });\n  };\n\n  validateForm = () => {};\n\n  getParticipantOptionField = () => {};\n\n  disabledStartTime = current => {};\n  disabledEndTime = current => {};\n\n  validateRepeatInterval = (rule, value, callback) => {\n    const res = isNumber(value);\n\n    if (value && res.valid === false) {\n      callback(res.msg);\n    } else {\n      callback();\n    }\n  };\n\n  onRepeatIntervalChange = e => {\n    e.preventDefault();\n    const {\n      adjustDate,\n      form: { getFieldError },\n      setRepeatIntervalError\n    } = this.props;\n    const error = getFieldError(REPEAT_INTERVAL);\n    // eslint-disable-next-line eqeqeq\n    setRepeatIntervalError(error != undefined);\n    adjustDate();\n  };\n\n  remindCareCoach = e => {\n    this.setState({ remindCareCoach: e.target.checked });\n  };\n\n  setParticipantTwo = value => {\n    const { members = [] } = this.state;\n    const { setParticipantTwo } = this.props;\n    let participant;\n    console.log(\"members ----\", members);\n    // move to simple for;\n    members.forEach(member => {\n      const {\n        basicInfo: { _id }\n      } = member || {};\n      if (_id === value) {\n        participant = member;\n      }\n    });\n    setParticipantTwo(participant);\n  };\n\n  getActivityConfig = () => {\n    const { purpose, currentUser, otherUser, data } = this.props;\n    return getActivityBetween({\n      viewer: currentUser,\n      other: otherUser,\n      event: data,\n      edit: purpose\n    });\n  };\n\n  render() {\n    const {\n      data: {\n        participantTwo,\n        repeatInterval,\n        notes,\n        title: reminderTitle\n      } = {},\n      form,\n      eventMode,\n      loading,\n      handleCancel,\n      eventStartTime,\n      eventEndTime,\n      onChangeEventEndTime,\n      onChangeEventStartTime,\n      startDate,\n      endDate,\n      repeatType,\n      onEndDateChange,\n      onStartDateChange,\n      // disabledStartDate,\n      disabledEndDate,\n      purpose,\n      disabledForEdit,\n      userId,\n      currentUser,\n      eventEndTimeError,\n      eventStartTimeError,\n      setRepeatIntervalError,\n      showRepeating,\n      disabledDateAndTime,\n      disabledStartDateOnEdit\n    } = this.props;\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError\n      //getFieldValue\n    } = form;\n\n    const {\n      getRepeatOption,\n      formatMessage,\n      onChangeRepeatType,\n      handleCheckDays,\n      openCalendarStartDate,\n      openCalendarEndDate,\n      getTotalTimeDurationOfEvent,\n      onChangeActivityMode,\n      onChangeActivityType,\n      onRepeatIntervalChange,\n      remindCareCoach,\n      setParticipantTwo\n    } = this;\n    const { members, activityType, activityMode } = this.state;\n\n    // const participantError =\n    //   isFieldTouched(PARTICIPANT_TWO) && getFieldError(PARTICIPANT_TWO);\n    // const reminderTitleError =\n    //   isFieldTouched(REMINDER_TITLE) && getFieldError(REMINDER_TITLE);\n    // const repeatIntervalError =\n    //   isFieldTouched(REPEAT_INTERVAL) && getFieldError(REPEAT_INTERVAL);\n\n    const eventDuration = getTotalTimeDurationOfEvent();\n\n    const { selectedDays } = this.state;\n\n    const getRepeatTypeStr = () => {\n      switch (repeatType) {\n        case REPEAT_TYPE.WEEKLY:\n          return \"Weeks\";\n        case REPEAT_TYPE.MONTHLY:\n          return \"Months\";\n        case REPEAT_TYPE.YEARLY:\n          return \"Years\";\n        default:\n          return \"\";\n      }\n    };\n\n    //const appointmentWith = getFieldValue(PARTICIPANT_TWO);\n\n    const activityConfig = this.getActivityConfig();\n\n    return (\n      <Form className=\"event-form\" onSubmit={this.handleSubmit}>\n        {eventMode === EVENT_TYPE.REMINDER && (\n          <ReminderTitle\n            fieldName={REMINDER_TITLE}\n            value={reminderTitle}\n            form={this.props.form}\n            label={formatMessage(messages.reminderTitle)}\n            disabled={disabledForEdit}\n          />\n        )}\n        <Participants\n          eventMode={eventMode}\n          currentUser={currentUser}\n          userId={userId}\n          members={members}\n          participantTwo={participantTwo}\n          form={form}\n          fieldName={PARTICIPANT_TWO}\n          disabledForEdit={disabledForEdit}\n          remindCareCoach={remindCareCoach}\n          setParticipantTwo={setParticipantTwo}\n          onChangeActivityType={onChangeActivityType}\n          onChangeActivityMode={onChangeActivityMode}\n        />\n\n        {eventMode === EVENT_TYPE.APPOINTMENT && (\n          <Fragment>\n            <AppointmentType\n              data={activityConfig}\n              onChangeActivityType={onChangeActivityType}\n              activityType={activityType}\n              activityMode={activityMode}\n            />\n            <ActivityMode\n              data={activityConfig}\n              onChangeActivityMode={onChangeActivityMode}\n              activityMode={activityMode}\n              activityType={activityType}\n            />\n          </Fragment>\n        )}\n        {showRepeating && (\n          <Fragment>\n            <div className=\"flex justify-content-space-between\">\n              <FormItem className=\"flex-1 align-self-end\">\n                {getFieldDecorator(REPEAT, {\n                  rules: [],\n                  initialValue: repeatType || REPEAT_TYPE.NONE,\n                  onChange: onChangeRepeatType\n                })(\n                  <Select\n                    className=\"full-width\"\n                    placeholder=\"\"\n                    showSearch\n                    autoComplete=\"off\"\n                    optionFilterProp=\"children\"\n                    suffixIcon={DropDownIcon}\n                    filterOption={(input, option) =>\n                      option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                    getPopupContainer={this.getParentNode}\n                  >\n                    {getRepeatOption()}\n                  </Select>\n                )}\n              </FormItem>\n\n              {repeatType !== REPEAT_TYPE.NONE &&\n                (repeatType !== REPEAT_TYPE.DAILY && (\n                  <RepeatInterval\n                    fieldName={REPEATINTERVAL}\n                    value={repeatInterval}\n                    form={this.props.form}\n                    getRepeatTypeStr={getRepeatTypeStr}\n                    onRepeatIntervalChange={onRepeatIntervalChange}\n                    setRepeatIntervalError={setRepeatIntervalError}\n                  />\n                ))}\n            </div>\n            {repeatType === REPEAT_TYPE.WEEKLY && (\n              <div className=\"mb16\">\n                <div className=\"mb8\">\n                  <span className=\"warning-color\">* </span>\n                  <span className=\"fontsize12 label-color\">\n                    {formatMessage(messages.repeatsOn)}\n                  </span>\n                  <span className=\"fontsize12 dark\">{` ${selectedDays.join(\n                    \", \"\n                  )}`}</span>\n                  {selectedDays && selectedDays.length === 0 && (\n                    <span className=\"fontsize12 warning-color ml8\">\n                      select repeating days\n                    </span>\n                  )}\n                </div>\n\n                <SelectedDays\n                  value={selectedDays.join(\",\")}\n                  fieldName={SELECTED_DAYS}\n                  form={this.props.form}\n                />\n                <div className=\"flex select-days\">\n                  {DAYS.map(tag => (\n                    <CheckableTag\n                      className=\"select-days flex-1\"\n                      key={tag}\n                      checked={selectedDays.indexOf(tag) > -1}\n                      onChange={checked => handleCheckDays(tag, checked)}\n                    >\n                      {tag}\n                    </CheckableTag>\n                  ))}\n                </div>\n              </div>\n            )}\n          </Fragment>\n        )}\n        <div className=\" full-width flex justify-content-space-between mb24\">\n          {\n            <div className=\" flex-1 flex  align-items-end iqvia-date-picker\">\n              {/* <div className=\"full-width \"> */}\n              {/* <FormItem\n                className=\"flex-1 date-picker\"\n                label={\n                  repeatType === REPEAT_TYPE.NONE\n                    ? formatMessage(messages.on)\n                    : formatMessage(messages.from)\n                }\n              >\n                {getFieldDecorator(START_DATE, {\n                  rules: []\n                })( */}\n\n              <div className=\"full-width\">\n                <div className=\"label-color fontsize12\">\n                  {repeatType === REPEAT_TYPE.NONE\n                    ? formatMessage(messages.on)\n                    : formatMessage(messages.from)}\n                </div>\n                <DatePicker\n                  format=\"DD/MM/YYYY, ddd\"\n                  showToday={false}\n                  disabled={disabledDateAndTime || disabledStartDateOnEdit}\n                  // disabledDate={disabledStartDate}\n                  className=\"full-width\"\n                  suffixIcon={null}\n                  value={startDate === null ? null : moment(startDate)}\n                  onChange={onStartDateChange}\n                  getCalendarContainer={this.getParentNode}\n                />\n              </div>\n              {/* )} */}\n              <img\n                alt=\"\"\n                className=\"calendar\"\n                onClick={disabledDateAndTime ? null : openCalendarStartDate}\n                src={calendar}\n              />\n              {/* </FormItem> */}\n              {/* </div> */}\n            </div>\n          }\n\n          {showRepeating && repeatType !== REPEAT_TYPE.NONE && (\n            <div className=\"flex-1 flex  align-items-end iqvia-date-picker\">\n              {/* <div className=\"full-width \"> */}\n              {/* <FormItem\n                  className=\"flex-1 date-picker\"\n                  label={formatMessage(messages.till)}\n                >\n                  {getFieldDecorator(END_DATE, {\n                    rules: []\n                  })( */}\n              <div className=\"full-width ml16\">\n                <div className=\"label-color fontsize12\">\n                  {formatMessage(messages.till)}\n                </div>\n                <DatePicker\n                  format=\"DD/MM/YYYY, ddd\"\n                  disabled={getFieldError(REPEAT_INTERVAL) !== undefined}\n                  showToday={false}\n                  disabledDate={disabledEndDate}\n                  className=\"full-width\"\n                  suffixIcon={null}\n                  value={endDate === null ? null : moment(endDate)}\n                  onChange={onEndDateChange}\n                  getCalendarContainer={this.getParentNode}\n                />\n              </div>\n              {/* )} */}\n\n              <img\n                alt=\"\"\n                className=\"calendar\"\n                onClick={openCalendarEndDate}\n                src={calendar}\n              />\n              {/* </FormItem> */}\n              {/* </div> */}\n            </div>\n          )}\n        </div>\n\n        {\n          <Fragment>\n            <div className=\"flex justify-content-space-between\">\n              {/* <FormItem label={formatMessage(messages.from)}>\n            {getFieldDecorator(START_TIME, {\n              rules: []\n            })( */}\n              <div className=\"full-width\">\n                <div className=\"label-color fontsize12\">\n                  {`${\n                    eventMode === EVENT_TYPE.APPOINTMENT\n                      ? formatMessage(messages.from)\n                      : formatMessage(messages.at)\n                  }`}\n                </div>\n                <TimePicker\n                  allowClear={false}\n                  disabled={disabledDateAndTime}\n                  className={`${\n                    eventStartTimeError === true ? \"has-error\" : \"\"\n                  }`}\n                  use12Hours\n                  format=\"h:mm A\"\n                  suffixIcon={null}\n                  style={{ width: \"100%\" }}\n                  value={moment(eventStartTime)}\n                  onChange={onChangeEventStartTime}\n                  getPopupContainer={this.getParentNode}\n                />\n              </div>\n              {/* )}\n          </FormItem> */}\n\n              {/* <FormItem label={formatMessage(messages.till)}>\n            {getFieldDecorator(END_TIME, {\n              rules: [],\n              initialValue: event.end\n            })( */}\n              {eventMode === EVENT_TYPE.APPOINTMENT && (\n                <div className=\"full-width ml16\">\n                  <div className=\"label-color fontsize12\">\n                    {formatMessage(messages.till)}\n                  </div>\n                  <TimePicker\n                    className={`${\n                      eventEndTimeError === true ? \"has-error\" : \"\"\n                    }`}\n                    allowClear={false}\n                    disabled={disabledDateAndTime}\n                    use12Hours\n                    format=\"h:mm A\"\n                    style={{ width: \"100%\" }}\n                    suffixIcon={null}\n                    value={moment(eventEndTime)}\n                    onChange={onChangeEventEndTime}\n                    getPopupContainer={this.getParentNode}\n                  />\n                </div>\n              )}\n              {/* )}\n          </FormItem> */}\n            </div>\n            {eventMode === EVENT_TYPE.APPOINTMENT &&\n              !eventEndTimeError &&\n              !eventStartTimeError && (\n                <div className=\"full-width dark tar mt4\">{eventDuration}</div>\n              )}\n            {eventEndTimeError === true && (\n              <div className=\"full-width warning-color tar mt4 fontsize12\">\n                End time cannot be less than and equal Start time\n              </div>\n            )}\n            {eventStartTimeError === true && (\n              <div className=\"full-width warning-color tar mt4 fontsize12\">\n                You can't create events on passed time.\n              </div>\n            )}\n          </Fragment>\n        }\n        {\n          <FormItem className=\"mt16\">\n            {getFieldDecorator(NOTES, {\n              rules: [],\n              initialValue: notes\n            })(\n              <TextArea placeholder={formatMessage(messages.notes)} autosize />\n            )}\n          </FormItem>\n        }\n        <div className=\"footer\">\n          <div className=\"flex align-items-center justify-content-end h100 mr24\">\n            <Button className=\"iqvia-btn cancel mr16\" onClick={handleCancel}>\n              {formatMessage(messages.cancel)}\n            </Button>\n            <FormItem className=\"m0\">\n              <Button\n                className=\"iqvia-btn\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n                disabled={\n                  hasErrors(getFieldsError()) ||\n                  eventEndTimeError ||\n                  eventStartTimeError\n                }\n              >\n                {purpose\n                  ? \"Save\"\n                  : eventMode === EVENT_TYPE.APPOINTMENT\n                  ? formatMessage(messages.addAppointment)\n                  : formatMessage(messages.addReminder)}\n              </Button>\n            </FormItem>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default injectIntl(AddAppointment);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { DatePicker } from \"antd\";\nimport FullCalendar from \"fullcalendar-reactwrapper\";\nimport \"fullcalendar-reactwrapper/dist/css/fullcalendar.min.css\";\n// // import isEqual from \"lodash-es/isEqual\";\n\nimport next from \"../../../../Assets/images/ico-calendar-nav-next.svg\";\nimport prev from \"../../../../Assets/images/ico-calendar-nav-prev.svg\";\nimport dropDownIcon from \"../../../../Assets/images/ico-dropdown.svg\";\nimport userPlaceHolder from \"../../../../Assets/images/ico-placeholder-userdp.svg\";\n\nimport messages from \"./message\";\nimport moment from \"moment\";\nimport { EVENT_TYPE } from \"../../../../constant\";\n\nconst DropDownIcon = <img src={dropDownIcon} alt=\"d\" className=\"w14 h14\" />;\n\nclass CalendarComponent extends Component {\n  eventResize = (event, duration) => {\n    const { start, end } = event;\n    const { onEventDurationChange } = this.props;\n    onEventDurationChange(start, end);\n  };\n\n  eventResizeStart = (event, ...args) => {};\n\n  eventResizeStop = (event, ...args) => {};\n\n  eventDragStart = (event, args) => {};\n\n  eventDrop = (event, duration) => {\n    const { start, end } = event;\n    const { onEventDurationChange } = this.props;\n    onEventDurationChange(start, end);\n  };\n\n  eventDragStop = event => {};\n\n  componentDidMount() {\n    this.adjustCurrentEvent();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.adjustCurrentEvent();\n  }\n\n  adjustCurrentEvent = () => {\n    const currentEvent = window.document.getElementsByClassName(\"current\");\n    if (currentEvent && currentEvent.length > 0) {\n      currentEvent[0].scrollIntoView({\n        // behavior: \"smooth\",\n        block: \"center\"\n      });\n    }\n  };\n\n  render() {\n    const { event, bookedEvents } = this.props;\n    const {\n      eventDragStart,\n      eventDragStop,\n      eventResize,\n      eventResizeStop,\n      eventResizeStart,\n      eventDrop\n    } = this;\n    return (\n      <div id=\"12717728812718t27182t1\">\n        <FullCalendar\n          header={{\n            left: \"\",\n            center: \"\",\n            right: \"\"\n          }}\n          defaultDate={event === null ? null : event.start}\n          events={event === null ? [] : [event, ...bookedEvents]}\n          editable={true}\n          eventLimit={true}\n          defaultView=\"agendaDay\"\n          eventDurationEditable={true}\n          eventStartEditable={true}\n          eventDragStart={eventDragStart}\n          eventDragStop={eventDragStop}\n          eventDrop={eventDrop}\n          eventResize={eventResize}\n          eventResizeStart={eventResizeStart}\n          eventResizeStop={eventResizeStop}\n          timezone={\"local\"}\n        />\n      </div>\n    );\n  }\n}\n\nclass CalendarTimeSelecton extends Component {\n  formatMessage = messageId => {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    return formatMessage(messageId);\n  };\n\n  getParentNode = t => t.parentNode;\n\n  render() {\n    const {\n      className,\n      //eventTitle,\n      eventEndTime,\n      eventStartTime,\n      onEventDurationChange,\n      startDate,\n      //endDate,\n      //range,\n      //onEndDateChange,\n      onStartDateChange,\n      //disabledEndDate,\n      disabledStartDate,\n      disabledStartDateOnEdit,\n      onPrev,\n      onNext,\n      //repeatInterValError,\n      eventMode,\n      bookedEvents,\n      participant: {\n        basicInfo: { name, profilePicLink = userPlaceHolder } = {}\n      } = {}\n    } = this.props;\n    const { formatMessage } = this;\n    const event = {\n      start: eventStartTime,\n      end: eventEndTime,\n      className: \"current\"\n    };\n\n    let today = false;\n    if (startDate && startDate !== null) {\n      if (startDate.isValid) {\n        today = moment().isSame(startDate, \"day\");\n      }\n    }\n\n    return (\n      <div className={className}>\n        <div className=\"mask\" />\n        {eventMode === EVENT_TYPE.APPOINTMENT && (\n          <Fragment>\n            <div className=\" header fontsize16 dark medium\">\n              {formatMessage(messages.chooseWhen)}\n            </div>\n            <div className=\"calendar-toolbar mt16 flex justify-content-start align-items-center\">\n              {/* //  {!range && ( */}\n              <Fragment>\n                <img\n                  className={`mr8  ${\n                    today || disabledStartDateOnEdit\n                      ? \"not-allowed\"\n                      : \"clickable\"\n                  } `}\n                  src={prev}\n                  alt=\"prev\"\n                  onClick={today || disabledStartDateOnEdit ? null : onPrev}\n                />\n                <img\n                  className={`mr8  ${\n                    disabledStartDateOnEdit ? \"not-allowed\" : \"clickable\"\n                  } `}\n                  src={next}\n                  alt=\"prev\"\n                  onClick={disabledStartDateOnEdit ? null : onNext}\n                />\n              </Fragment>\n              {/* )} */}\n              <div className=\"mr16\">\n                <DatePicker\n                  disabledDate={disabledStartDate}\n                  disabled={disabledStartDateOnEdit}\n                  allowClear={false}\n                  className=\"date-picker\"\n                  format=\"DD/MM/YYYY, ddd\"\n                  suffixIcon={DropDownIcon}\n                  value={startDate === null ? null : moment(startDate)}\n                  onChange={onStartDateChange}\n                  getCalendarContainer={this.getParentNode}\n                />\n              </div>\n              <div\n                className={\n                  \"flex-1 flex justify-content-end align-items-center mr8 ml8\"\n                }\n              >\n                {name && (\n                  <div className=\"flex justify-content-start align-items-center iqvia-user-snippet bg-transparent\">\n                    <img alt={\"u\"} src={profilePicLink} />\n                    <div className=\"deep-sea-blue fontsize12 medium mr8\">{`${name}'s Calendar`}</div>\n                  </div>\n                )}\n              </div>\n              {/* {range && (\n                <Fragment>\n                  <div className=\"mr16\">-</div>\n                  <div className=\"mr16\">\n                    <DatePicker\n                      allowClear={false}\n                      disabled={repeatInterValError}\n                      disabledDate={disabledEndDate}\n                      className=\"date-picker \"\n                      format=\"DD/MM/YYYY, ddd\"\n                      suffixIcon={DropDownIcon}\n                      value={endDate === null ? null : moment(endDate)}\n                      onChange={onEndDateChange}\n                    />\n                  </div>\n                </Fragment>\n              )} */}\n            </div>\n          </Fragment>\n        )}\n        <CalendarComponent\n          onEventDurationChange={onEventDurationChange}\n          event={eventMode === EVENT_TYPE.REMINDER ? null : event}\n          bookedEvents={bookedEvents}\n        />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(CalendarTimeSelecton);\n","import React, { Component } from \"react\";\nimport { Modal, Radio, Form } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport \"../style.less\";\nimport { EVENT_TYPE, EVENT_ACTION, REPEAT_TYPE } from \"../../../../constant\";\nimport messages from \"./message\";\nimport Add from \"./add\";\nimport CalendarTimeSelection from \"./calendarTimeSelection\";\nimport clone from \"lodash-es/cloneDeep\";\nimport isEqual from \"lodash-es/isEqual\";\n\nimport { doRequest } from \"../../../../Helper/network\";\nimport { getBookedSlotsURL } from \"../../../../Helper/urls/event\";\nimport CommonError from \"../../CommonError\";\n\nimport { isNumber } from \"../../../../Helper/validation\";\n\nconst { Button: RadioButton, Group: RadioGroup } = Radio;\n\nclass Event extends Component {\n  constructor(props) {\n    super(props);\n    this.AddForm = Form.create({ onValuesChange: this.onFormChanges })(Add);\n    this.state = {\n      eventMode: this.props.eventMode || EVENT_TYPE.APPOINTMENT,\n      eventTitle: \"\",\n      eventStartTime: moment(),\n      eventEndTime: moment().add(1, \"h\"),\n      startDate: moment(),\n      endDate: null,\n      repeatType: REPEAT_TYPE.NONE,\n      bookedEvents: []\n    };\n  }\n\n  // componentDidMount() {\n  //   //for now, we are considering that care-coach is our participantone.\n  //   const { event: { eventType, startTime, endTime } = {} } = this.props;\n  //   this.setState({\n  //     eventMode: eventType,\n  //     eventStartTime: startTime,\n  //     eventEndTime: endTime\n  //   });\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    const newProps = clone(this.props);\n    if (newProps.show === true && newProps.show !== prevProps.show) {\n      this.setState({\n        eventStartTime: moment(),\n        eventEndTime: moment().add(1, \"h\"),\n        startDate: moment()\n      });\n      const { userId, users } = newProps;\n      if (userId) {\n        const user = users[userId] || {};\n        this.setParticipantTwo(user);\n      }\n    }\n\n    if (newProps.show && !isEqual(prevProps.event, newProps.event)) {\n      const {\n        event,\n        currentUser: { basicInfo: { _id } = {} } = {},\n        users = {}\n      } = newProps;\n      if (event) {\n        const {\n          eventType,\n          startTime,\n          endTime,\n          data: { repeatInterval, repeat, participantTwo, participantOne } = {}\n        } = event;\n        this.setState({\n          eventMode: eventType,\n          eventStartTime: moment(startTime),\n          eventEndTime: moment(endTime),\n          startDate: moment(startTime),\n          repeatInterval,\n          repeat\n        });\n        const id = participantTwo === _id ? participantOne : participantTwo;\n        if (id) {\n          const user = users[id] || {};\n          this.setParticipantTwo(user);\n        }\n      }\n    }\n  }\n\n  getBookedSlots = async () => {\n    const {\n      startDate,\n      participantTwo: { basicInfo: { _id } = {} } = {}\n    } = this.state;\n    if (startDate && startDate.isValid && _id) {\n      //fetching current startDate's booked events.\n      const response = await doRequest({\n        url: getBookedSlotsURL(),\n        params: {\n          startDate: startDate.clone().format(\"YYYY-MM-DD\"),\n          userId: _id\n        }\n      });\n      const { status, payload = {} } = response;\n      if (status) {\n        const { data: { bookedSlots } = [] } = payload;\n        //for more events option got to https://fullcalendar.io/docs/event-parsing\n        const bookedEvents = bookedSlots.map(event => {\n          const { start, end } = event;\n          return {\n            start,\n            end,\n            editable: false,\n            startEditable: false,\n            durationEditable: false,\n            className: \"booked\"\n          };\n        });\n        this.setState({ bookedEvents });\n      }\n    }\n  };\n\n  setParticipantTwo = value => {\n    const { getBookedSlots } = this;\n    //make category check here\n    this.setState({ participantTwo: value }, getBookedSlots);\n  };\n\n  onFormChanges = (props, changedValues, allValues) => {\n    const { adjustDate } = this;\n    const {\n      repeat: changeRepeat,\n      repeatInterval: changeRepeatInterval\n    } = changedValues;\n\n    if (changeRepeat || changeRepeatInterval) {\n      const { repeat, repeatInterval } = allValues;\n      this.setState({ repeat, repeatInterval }, adjustDate);\n    }\n  };\n\n  getNewEndDate = () => {\n    const { repeat, repeatInterval, startDate: eventStartDate } = this.state;\n    let endDate;\n    if (!repeat && !repeatInterval) {\n      return endDate;\n    } else {\n      const startDate = eventStartDate.clone();\n      const res = isNumber(repeatInterval);\n      if (repeat === REPEAT_TYPE.DAILY || res.valid === true) {\n        switch (repeat) {\n          case REPEAT_TYPE.DAILY: {\n            endDate = startDate.add(1, \"d\");\n            break;\n          }\n          case REPEAT_TYPE.WEEKLY: {\n            endDate = startDate.add(res.value, \"w\");\n            break;\n          }\n          case REPEAT_TYPE.MONTHLY: {\n            endDate = startDate.add(res.value, \"M\");\n            break;\n          }\n          case REPEAT_TYPE.YEARLY: {\n            endDate = startDate.add(res.value, \"y\");\n            break;\n          }\n          default:\n            break;\n        }\n      }\n      console.log(\"endDate\", endDate);\n      return endDate;\n    }\n  };\n\n  adjustDate = () => {\n    const { repeat, repeatInterval } = this.state;\n    const { onEndDateChange, getNewEndDate } = this;\n    if (!repeat && !repeatInterval) {\n      return;\n    }\n    onEndDateChange(getNewEndDate());\n  };\n\n  formatMessage = messageId => {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    return formatMessage(messageId);\n  };\n\n  handleCancel = () => {\n    const { close } = this.props;\n    close();\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({\n      eventMode: EVENT_TYPE.APPOINTMENT,\n      eventTitle: \"\",\n      eventStartTime: moment(),\n      eventEndTime: moment().add(1, \"h\"),\n      startDate: moment(),\n      endDate: null,\n      repeatType: REPEAT_TYPE.NONE,\n      participantTwo: {},\n      bookedEvents: []\n    });\n  };\n\n  onAddAppointment = data => {\n    const { addAppointment } = this.props;\n\n    const {\n      participantTwo,\n      activityType,\n      activityMode,\n      repeat,\n      repeatDays,\n      notes,\n      repeatInterval\n    } = data;\n\n    const { startDate, endDate, eventStartTime, eventEndTime } = this.state;\n\n    addAppointment({\n      participantTwo,\n      activityMode,\n      activityType,\n      repeat,\n      repeatInterval,\n      repeatDays,\n      notes,\n      startDate:\n        startDate && startDate !== null ? startDate.format() : startDate,\n      endDate: endDate && endDate !== null ? endDate.format() : endDate,\n      startTime:\n        eventStartTime && eventStartTime !== null\n          ? eventStartTime.startOf(\"minute\").format()\n          : eventStartTime,\n      endTime:\n        eventEndTime && eventEndTime !== null\n          ? eventEndTime.startOf(\"minute\").format()\n          : eventEndTime\n    }).then(res => {\n      if (res !== undefined && res.status) {\n        this.resetState();\n        // setTimeout(() => {\n        //   window.location.reload();\n        // }, 1000);\n      }\n    });\n  };\n\n  editNotes = data => {\n    const {\n      editNotes,\n      event: { id, eventType },\n      editNotesReminder\n    } = this.props;\n    const { notes } = data;\n\n    if (eventType === EVENT_TYPE.APPOINTMENT) {\n      editNotes({\n        id: id,\n        notes\n      }).then(value => {\n        this.resetState();\n      });\n    } else if (eventType === EVENT_TYPE.REMINDER) {\n      editNotesReminder({\n        id: id,\n        notes\n      }).then(value => {\n        this.resetState();\n      });\n    }\n  };\n\n  reschedule = data => {\n    const {\n      reschedule,\n      event: { id },\n      series\n    } = this.props;\n    const { repeat, repeatDays, repeatInterval, notes } = data;\n\n    const {\n      startDate,\n      endDate,\n      eventStartTime: startTime,\n      eventEndTime: endTime\n    } = this.state;\n    reschedule({\n      id: id,\n      startDate,\n      endDate,\n      startTime: startTime.startOf(\"minute\").format(),\n      endTime:\n        endTime && endTime !== null\n          ? endTime.startOf(\"minute\").format()\n          : endTime,\n      repeat,\n      repeatDays,\n      repeatInterval,\n      series,\n      notes\n    }).then(res => {\n      if (res !== undefined && res.status) {\n        this.resetState();\n        // setTimeout(() => {\n        //   window.location.reload();\n        // }, 1000);\n      }\n    });\n  };\n\n  editReminder = data => {\n    const {\n      editReminder,\n      event: { id },\n      series\n    } = this.props;\n    const {\n      startDate,\n      endDate,\n      eventStartTime: startTime,\n      eventEndTime: endTime\n    } = this.state;\n    const { notes = \"\", repeat, repeatDays, repeatInterval } = data;\n\n    editReminder({\n      id: id,\n      startDate,\n      endDate,\n      startTime: startTime.startOf(\"minute\").format(),\n      endTime,\n      repeat,\n      repeatDays,\n      repeatInterval,\n      series,\n      notes\n    }).then(res => {\n      if (res !== undefined && res.status) {\n        this.resetState();\n        // setTimeout(() => {\n        //   window.location.reload();\n        // }, 1000);\n      }\n    });\n  };\n\n  onAddReminder = data => {\n    const {\n      addReminder,\n      currentUser: { programIds }\n    } = this.props;\n    const { startDate, endDate, eventStartTime } = this.state;\n    const {\n      repeat,\n      repeatDays,\n      notes,\n      repeatInterval,\n      title,\n      remindCareCoach,\n      participantTwo: remindAlso\n    } = data;\n    let participantTwo;\n    if (remindCareCoach) {\n      const { careCoach } = programIds[0] || {};\n      participantTwo = careCoach;\n    }\n    if (remindAlso) {\n      participantTwo = remindAlso;\n    }\n    addReminder({\n      startDate:\n        startDate && startDate !== null ? startDate.format() : startDate,\n      endDate: endDate && endDate !== null ? endDate.format() : endDate,\n      startTime:\n        eventStartTime && eventStartTime !== null\n          ? eventStartTime.startOf(\"minute\").format()\n          : eventStartTime,\n      participantTwo,\n      repeat,\n      repeatInterval,\n      repeatDays,\n      notes,\n      title\n    }).then(res => {\n      this.resetState();\n      // if (res !== undefined && res.status) {\n      //   setTimeout(() => {\n      //     window.location.reload();\n      //   }, 1000);\n      // }\n    });\n  };\n\n  onChangeContext = event => {\n    this.setState({ eventMode: event.target.value });\n  };\n\n  onEventDurationChange = (start, end) => {\n    const now = moment();\n    let data = {\n      eventStartTime: start,\n      eventEndTime: end,\n      eventStartTimeError: false\n    };\n\n    if (start <= now) {\n      data = { ...data, eventStartTimeError: true };\n    }\n    this.setState(data);\n  };\n\n  onChangeEventEndTime = endTime => {\n    const { eventStartTime } = this.state;\n    let data = { eventEndTime: endTime, eventEndTimeError: false };\n    if (eventStartTime >= endTime) {\n      data = { ...data, eventEndTimeError: true };\n    }\n    this.setState(data);\n  };\n\n  onChangeEventStartTime = startTime => {\n    const endTime = startTime.clone();\n    const eventEndTime = endTime.add(1, \"h\");\n    const now = moment();\n    let data = {\n      eventStartTime: startTime,\n      eventEndTime: eventEndTime,\n      eventStartTimeError: false,\n      eventEndTimeError: false\n    };\n    if (startTime <= now) {\n      data = { ...data, eventStartTimeError: true };\n    }\n    this.setState(data);\n  };\n\n  onChangeRepeatType = value => {\n    this.setState({ repeatType: value }, this.adjustDate);\n  };\n\n  onEndDateChange = endDate => {\n    if (endDate && endDate.isValid) {\n      this.setState({ endDate: endDate });\n    }\n  };\n\n  adjustEventOnStartDateChange = (prevDate, newDate) => {\n    const { eventStartTime, eventEndTime } = this.state;\n\n    const startOfNewDate = newDate.clone().startOf(\"day\");\n    const startOfPrevDate = prevDate.clone().startOf(\"day\");\n    const diffInDays = startOfNewDate.diff(startOfPrevDate, \"days\");\n    const newEventStartTime =\n      diffInDays > 0\n        ? eventStartTime.add(diffInDays, \"days\")\n        : eventStartTime.subtract(Math.abs(diffInDays), \"days\");\n    const newEventEndTime =\n      diffInDays > 0\n        ? eventEndTime.add(diffInDays, \"days\")\n        : eventEndTime.subtract(Math.abs(diffInDays), \"days\");\n\n    let data = {\n      eventStartTime: newEventStartTime,\n      eventEndTime: newEventEndTime,\n      eventStartTimeError: false\n    };\n    const now = moment();\n    if (eventStartTime <= now) {\n      data = { ...data, eventStartTimeError: true };\n    }\n\n    this.setState(data);\n  };\n\n  onStartDateChange = currentDate => {\n    const { startDate } = this.state;\n    const { adjustDate, getBookedSlots } = this;\n    if (currentDate && currentDate.isValid) {\n      this.setState({ startDate: currentDate }, () => {\n        this.adjustEventOnStartDateChange(startDate, currentDate);\n        adjustDate(); //it will reset the end date field according to what is selected in repeatType and repeatInterval\n        getBookedSlots();\n      });\n    }\n  };\n\n  disabledStartDate = current => {\n    // Can not select days before today\n    return current && current <= moment().subtract({ day: 1 });\n  };\n\n  disabledEndDate = current => {\n    const { repeat } = this.state;\n    //cannot selecct days before today + repeatInterval\n    if (repeat && repeat !== REPEAT_TYPE.NONE) {\n      const endDate = this.getNewEndDate();\n      if (endDate) {\n        return current && current < endDate;\n      }\n    }\n  };\n\n  onPrev = () => {\n    const { startDate } = this.state;\n    if (startDate !== null) {\n      const { onStartDateChange } = this;\n      const newStartDate = startDate.clone().subtract(1, \"days\");\n      onStartDateChange(newStartDate);\n    }\n  };\n\n  onNext = () => {\n    const { startDate } = this.state;\n    if (startDate !== null) {\n      const { onStartDateChange } = this;\n      const newStartDate = startDate.clone().add(1, \"days\");\n      onStartDateChange(newStartDate);\n    }\n  };\n\n  getSubmitHandler = () => {\n    const { purpose, event = {} } = this.props;\n    const { eventType = \"\" } = event;\n    const {\n      editNotes,\n      reschedule,\n      onAddAppointment,\n      onAddReminder,\n      editReminder\n    } = this;\n    const { eventMode } = this.state;\n    if (purpose) {\n      if (eventType === EVENT_TYPE.APPOINTMENT) {\n        return purpose === EVENT_ACTION.EDIT_NOTES ? editNotes : reschedule;\n      } else if (eventType === EVENT_TYPE.REMINDER) {\n        return purpose === EVENT_ACTION.EDIT_NOTES ? editNotes : editReminder;\n      }\n    } else {\n      return eventMode === EVENT_TYPE.APPOINTMENT\n        ? onAddAppointment\n        : onAddReminder;\n    }\n  };\n\n  setFormRef = formRef => {\n    this.formRef = formRef;\n    this.setState({ formRef: true });\n  };\n\n  setRepeatIntervalError = status => {\n    this.setState({ repeatInterValError: status });\n  };\n\n  render() {\n    const {\n      show: visible,\n      isError,\n      requesting,\n      purpose,\n      series,\n      showRepeating,\n      disabledDateAndTime,\n      disabledStartDate: disabledStartDateOnEdit = false,\n      userId,\n      event: { data = {} } = {},\n      currentUser = {},\n      users,\n      error: { error } = {},\n      clearMsg\n    } = this.props;\n    const { basicInfo: { _id } = {} } = currentUser;\n    const {\n      formatMessage,\n      handleCancel,\n      AddForm,\n      onChangeContext,\n      onEventDurationChange,\n      onChangeEventEndTime,\n      onChangeEventStartTime,\n      onChangeRepeatType,\n      onEndDateChange,\n      onStartDateChange,\n      disabledEndDate,\n      disabledStartDate,\n      onPrev,\n      onNext,\n      getSubmitHandler,\n      adjustDate,\n      setRepeatIntervalError,\n      setParticipantTwo\n    } = this;\n\n    let eventData = { ...data };\n    const { participantTwo: otherParticipant, participantOne } = data;\n    if (otherParticipant === _id) {\n      eventData = { ...eventData, participantTwo: participantOne };\n    }\n\n    const {\n      eventMode,\n      eventTitle,\n      eventStartTime,\n      eventEndTime,\n      startDate,\n      endDate,\n      repeatType,\n      eventEndTimeError,\n      repeatInterValError,\n      eventStartTimeError,\n      bookedEvents = [],\n      participantTwo\n    } = this.state;\n\n    const modalTitle =\n      purpose === EVENT_ACTION.EDIT_NOTES\n        ? \"Edit Notes\"\n        : purpose === EVENT_ACTION.RESCHEDULE\n        ? \"Reschedule\"\n        : formatMessage(messages.schedule);\n    const modalProps = {\n      visible: visible || isError,\n      title: modalTitle,\n      okButtonProps: {},\n      onCancel: handleCancel,\n      wrapClassName: \"m global-modal event-modal\",\n      destroyOnClose: true,\n      footer: null,\n      width: \"100%\"\n    };\n\n    const disabledForEdit = !!purpose;\n\n    return (\n      <Modal {...modalProps}>\n        {error && (\n          <CommonError close={clearMsg} msg={error} className=\"error\" />\n        )}\n        <div className=\"flex\">\n          <div style={{ width: \"50%\", minHeight: \"640px\" }}>\n            <div className=\"flex justify-content-end mb16\">\n              <RadioGroup\n                className=\"event-group-btn\"\n                buttonStyle=\"solid\"\n                onChange={onChangeContext}\n                defaultValue={eventMode}\n                disabled={disabledForEdit}\n                value={eventMode}\n              >\n                <RadioButton value={EVENT_TYPE.APPOINTMENT}>\n                  {formatMessage(messages.appointment)}\n                </RadioButton>\n                <RadioButton value={EVENT_TYPE.REMINDER}>\n                  {formatMessage(messages.reminder)}\n                </RadioButton>\n              </RadioGroup>\n            </div>\n            <AddForm\n              adjustDate={adjustDate}\n              eventMode={eventMode}\n              repeatType={repeatType}\n              onChangeRepeatType={onChangeRepeatType}\n              disabledEndDate={disabledEndDate}\n              disabledStartDate={disabledStartDate}\n              disabledStartDateOnEdit={disabledStartDateOnEdit}\n              startDate={startDate}\n              endDate={endDate}\n              onStartDateChange={onStartDateChange}\n              onEndDateChange={onEndDateChange}\n              eventTitle={eventTitle}\n              eventStartTime={eventStartTime}\n              eventEndTime={eventEndTime}\n              loading={requesting}\n              handleCancel={handleCancel}\n              onChangeEventEndTime={onChangeEventEndTime}\n              onChangeEventStartTime={onChangeEventStartTime}\n              handleSubmit={getSubmitHandler()}\n              purpose={purpose}\n              showRepeating={showRepeating}\n              disabledDateAndTime={disabledDateAndTime}\n              series={series}\n              disabledForEdit={disabledForEdit}\n              userId={userId}\n              data={eventData}\n              currentUser={currentUser}\n              otherUser={participantTwo}\n              users={users}\n              eventEndTimeError={eventEndTimeError}\n              eventStartTimeError={eventStartTimeError}\n              setRepeatIntervalError={setRepeatIntervalError}\n              setParticipantTwo={setParticipantTwo}\n            />\n          </div>\n          <CalendarTimeSelection\n            eventMode={eventMode}\n            range={repeatType !== REPEAT_TYPE.NONE}\n            disabled={\n              eventMode === EVENT_TYPE.REMINDER ||\n              purpose === EVENT_ACTION.EDIT_NOTES\n            }\n            eventTitle={eventTitle}\n            disabledEndDate={disabledEndDate}\n            disabledStartDate={disabledStartDate}\n            disabledStartDateOnEdit={disabledStartDateOnEdit}\n            onStartDateChange={onStartDateChange}\n            onEndDateChange={onEndDateChange}\n            eventStartTime={eventStartTime}\n            eventEndTime={eventEndTime}\n            startDate={startDate}\n            endDate={endDate}\n            onPrev={onPrev}\n            onNext={onNext}\n            repeatInterValError={repeatInterValError}\n            onEventDurationChange={onEventDurationChange}\n            bookedEvents={bookedEvents}\n            className={`calendar-section ${\n              eventMode === EVENT_TYPE.REMINDER ||\n              purpose === EVENT_ACTION.EDIT_NOTES\n                ? \"disabled\"\n                : \"\"\n            }`}\n            participant={participantTwo}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(Event);\n","import { connect } from \"react-redux\";\nimport EventModal from \"../../Components/Modal/event/modal\";\nimport {\n  open,\n  close,\n  addAppointment, //it should be goes into eventModules which is not build yet.\n  addReminder,\n  clearMsg\n} from \"../../../modules/modals\";\n\nimport {\n  reschedule,\n  editNotes,\n  editReminder,\n  editNotesReminder\n} from \"../../../modules/events\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\n\nimport { GLOBAL_MODALS, EVENT_ACTION } from \"../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    modal: {\n      show,\n      modalType,\n      requesting,\n      purpose,\n      entityId,\n      data: { userId, series = false } = {},\n      error\n    },\n    events: { events = {} },\n    users,\n    auth\n  } = state;\n  const getUserById = makeGetUserById();\n  return {\n    show: show && modalType === GLOBAL_MODALS.EVENT_MODAL,\n    requesting,\n    purpose,\n    event: events[entityId],\n    userId: userId,\n    currentUser: getUserById(users, auth.authenticated_user),\n    users: users,\n    showRepeating: purpose ? series : true,\n    series,\n    disabledDateAndTime: purpose === EVENT_ACTION.EDIT_NOTES,\n    disabledStartDate:\n      (purpose === EVENT_ACTION.RESCHEDULE ||\n        purpose === EVENT_ACTION.EDIT_REMINDER) &&\n      series,\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    open: data => dispatch(open(data)),\n    close: () => dispatch(close()),\n    addAppointment: data => dispatch(addAppointment(data)),\n    addReminder: data => dispatch(addReminder(data)),\n    reschedule: data => dispatch(reschedule(data)),\n    editNotes: data => dispatch(editNotes(data)),\n    editReminder: data => dispatch(editReminder(data)),\n    editNotesReminder: data => dispatch(editNotesReminder(data)),\n    clearMsg: () => dispatch(clearMsg())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EventModal);\n","import { defineMessages } from \"react-intl\";\nconst messages = defineMessages({\n  myProfile: {\n    id: \"app.edit-profile-main.my-profile\",\n    description: \"heading\",\n    defaultMessage: \"My Profile\"\n  },\n  personal: {\n    id: \"app.edit-profile.menubar.personal\",\n    description: \"personal menu text\",\n    defaultMessage: \"Personal\"\n  },\n  contacts: {\n    id: \"app.edit-profile.menubar.contacts\",\n    description: \"contacts menu text\",\n    defaultMessage: \"Contacts\"\n  },\n  medical: {\n    id: \"app.edit-profile.menubar.medical\",\n    description: \"medical menu text\",\n    defaultMessage: \"Medical\"\n  },\n  settings: {\n    id: \"app.edit-profile.menubar.settings\",\n    description: \"settings menu text\",\n    defaultMessage: \"Settings\"\n  },\n  insurance: {\n    id: \"app.edit-profile.menubar.insurance\",\n    description: \"insurance menu text\",\n    defaultMessage: \"Insurance\"\n  },\n  insuranceProvider: {\n    id: \"app.edit-profile.insuranceSection.insuranceProvider\",\n    description: \"insurance provider input label text\",\n    defaultMessage: \"Medical Insurance Provider\"\n  },\n  insurancePolicy: {\n    id: \"app.edit-profile.insuranceSection.insurancePolicy\",\n    description: \"insurance policy input label text\",\n    defaultMessage: \"Insurance Policy\"\n  },\n  insuranceExpiresOn: {\n    id: \"app.edit-profile.insuranceSection.insuranceExpiresOn\",\n    description: \"insurance expires input label text\",\n    defaultMessage: \"Valid Till\"\n  },\n\n  hospital: {\n    id: \"app.edit-profile.contact-sections.hospital\",\n    description: \"Hospital label text\",\n    defaultMessage: \"Hospital\"\n  },\n\n  work: {\n    id: \"app.edit-profile.menubar.work\",\n    description: \"work menu text\",\n    defaultMessage: \"Work\"\n  },\n  hospitalName: {\n    id: \"app.edit-profile.work-section.hospital-name\",\n    description: \"hospital name\",\n    defaultMessage: \"Hospital Name\"\n  },\n  speciality: {\n    id: \"app.edit-profile.work-section.speciality\",\n    description: \"speciality\",\n    defaultMessage: \"Speciality\"\n  },\n  specialityRule: {\n    id: \"app.edit-profile.work-section.speciality-rule\",\n    description: \"speciality rule\",\n    defaultMessage: \"Please provide speciality\"\n  },\n  licenseNumber: {\n    id: \"app.edit-profile.work-section.license-number\",\n    description: \"license number\",\n    defaultMessage: \"License Number\"\n  },\n  bio: {\n    id: \"app.edit-profile.work-section.bio\",\n    description: \"bio\",\n    defaultMessage: \"Bio\"\n  },\n  addressLine1: {\n    id: \"app.edit-profile.work-section.address-line1\",\n    description: \"address line 1\",\n    defaultMessage: \"Flat / House / Floor / Building\"\n  },\n  addressLine2: {\n    id: \"app.edit-profile.work-section.address-line2\",\n    description: \"address line 2\",\n    defaultMessage: \"Street / Locality / Area\"\n  },\n  zipcode: {\n    id: \"app.edit-profile.work-section.zipcode\",\n    description: \"zip code\",\n    defaultMessage: \"PO box / Zipcode\"\n  },\n  cityLabel: {\n    id: \"app.edit-profile.work-section.city\",\n    description: \"city label\",\n    defaultMessage: \"Region or State\"\n  },\n  countryLabel: {\n    id: \"app.edit-profile.work-section.country\",\n    description: \"country label\",\n    defaultMessage: \"Country\"\n  },\n  organisationName: {\n    id: \"app.edit-profile.work-section.organisation-name\",\n    description: \"organization name\",\n    defaultMessage: \"Organisation Name\"\n  },\n  services: {\n    id: \"app.edit-profile.work-section.services\",\n    description: \"services\",\n    defaultMessage: \"Services\"\n  },\n  notBlank: {\n    id: \"app.edit-profile.not-blank\",\n    description: \"not be blank\",\n    defaultMessage: \"not be blank\"\n  },\n  nursingTitle: {\n    id: \"app.edit-profile.service-section.nursing-title\",\n    description: \"nursing title\",\n    defaultMessage: \"Nursing\"\n  },\n  physicalTherapyTitle: {\n    id: \"app.edit-profile.service-section.physical-therapy-title\",\n    description: \"physical therapy title\",\n    defaultMessage: \"Physical Therapy\"\n  },\n  occupationalTherapyTitle: {\n    id: \"app.edit-profile.service-section.occupational-therapy-title\",\n    description: \"occupational therapy title\",\n    defaultMessage: \"Occupational Therapy\"\n  },\n  speechAndLanguagePathologyTitle: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology-title\",\n    description: \"speech and language pathology title\",\n    defaultMessage: \"Speech and Language Pathology\"\n  },\n  medicalCounsellingTitle: {\n    id: \"app.edit-profile.service-section.medical-counselling-title\",\n    description: \"medical counselling title\",\n    defaultMessage: \"Medical Counselling\"\n  },\n  healthAideTitle: {\n    id: \"app.edit-profile.service-section.health-aide-title\",\n    description: \"health aide title\",\n    defaultMessage: \"Health Aide\"\n  },\n  nursing: {\n    id: \"app.edit-profile.service-section.nursing\",\n    description: \"nursing\",\n    defaultMessage:\n      \"Physical assessments, which include monitoring of vital signs, administer oral and intravenous medications as well as monitoring of cardiac and respiratory status\"\n  },\n  physicalTherapy: {\n    id: \"app.edit-profile.service-section.physical-therapy\",\n    description: \"physical therapy\",\n    defaultMessage: \"Assist patients to condition muscles and regain strength\"\n  },\n  occupationalTherapy: {\n    id: \"app.edit-profile.service-section.occupational-therapy\",\n    description: \"occupational therapy\",\n    defaultMessage:\n      \"Assist patients to perform functional skills such as bathing, eating, cooking, and many other skills\"\n  },\n  speechAndLanguagePathology: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology\",\n    description: \"speech and language pathology\",\n    defaultMessage:\n      \"Assist patients to regain their ability to speak, swallow, and eat after a stroke or other neurological injuries\"\n  },\n  medicalCounselling: {\n    id: \"app.edit-profile.service-section.medical-counselling\",\n    description: \"medical counselling\",\n    defaultMessage:\n      \"Assistance with medications, provision of counseling, assistance with financial matters, transportation, and in accessing educational and treatment resources\"\n  },\n  healthAide: {\n    id: \"app.edit-profile.service-section.health-aide\",\n    description: \"health aide\",\n    defaultMessage:\n      \"Assist patients with their activities of daily living while patients are limited in mobility and strength which includes tasks such as bathing, grooming, and preparing meals\"\n  },\n  cardiacCareTitle: {\n    id: \"app.edit-profile.service-section.cardiac-care-title\",\n    description: \"cardiac care title\",\n    defaultMessage: \"Cardiac Care\"\n  },\n  diabetesCareTitle: {\n    id: \"app.edit-profile.service-section.diabetes-care-title\",\n    description: \"diabetes care title\",\n    defaultMessage: \"Diabetes Care\"\n  },\n  smokingCessationTitle: {\n    id: \"app.edit-profile.service-section.smoking-cessation-title\",\n    description: \"smoking cessation title\",\n    defaultMessage: \"Smoking Cessation\"\n  },\n  respiteCareTitle: {\n    id: \"app.edit-profile.service-section.respite-care-title\",\n    description: \"respite care title\",\n    defaultMessage: \"Respite Care\"\n  },\n  homemakingTitle: {\n    id: \"app.edit-profile.service-section.homemaking-title\",\n    description: \"homemaking title\",\n    defaultMessage: \"Homemaking\"\n  },\n  cardiacCare: {\n    id: \"app.edit-profile.service-section.cardiac-care\",\n    description: \"Cardiac Care\",\n    defaultMessage:\n      \"Assist patients with cardiac disease to manage their disease and to help slow down progression of their disease, monitor the cardiac status, prompt efficient treatment that will prevent re- hospitalization\"\n  },\n  diabetesCare: {\n    id: \"app.edit-profile.service-section.diabetes-care\",\n    description: \"Diabetes Care\",\n    defaultMessage:\n      \"Assist patient with diabetes and their families in learning to manage their diabetes, educate diet, exercise, self- blood glucose monitoring, and about complications of uncontrolled diabetes\"\n  },\n  smokingCessation: {\n    id: \"app.edit-profile.service-section.smoking-cessation\",\n    description: \"Smoking Cessation\",\n    defaultMessage: \"Provide nicotine replacement therapy\"\n  },\n  respiteCare: {\n    id: \"app.edit-profile.service-section.respite-care\",\n    description: \"Respite Care\",\n    defaultMessage:\n      \"Assist patients with Adult Care, Alzheimer’s Care, Hospital Support\"\n  },\n  homemaking: {\n    id: \"app.edit-profile.service-section.homemaking\",\n    description: \"Homemaking\",\n    defaultMessage:\n      \"Provide patients with daily assistance including meal preparation, housekeeping, laundary & maintaining chores\"\n  },\n  medicalServices: {\n    id: \"app.myprofile.medical-services\",\n    description: \"medical services\",\n    defaultMessage: \"Medical Services\"\n  },\n  homeHealthCare: {\n    id: \"app.myprofile.home-health-care\",\n    description: \"home health care\",\n    defaultMessage: \"Home Health Care\"\n  },\n  specialCare: {\n    id: \"app.myprofile.special-care\",\n    description: \"special care\",\n    defaultMessage: \"Special Care\"\n  },\n  nonMedicalServices: {\n    id: \"app.myprofile.non-medical-services\",\n    description: \"non medical services\",\n    defaultMessage: \"Non-medical Services\"\n  },\n  basic: {\n    id: \"app.medical-section.basic\",\n    description: \"basic\",\n    defaultMessage: \"Basic\"\n  },\n  chiefComplaint: {\n    id: \"app.medical-section.chief-complaint\",\n    description: \"chief complaint\",\n    defaultMessage: \"Chief Complaint\"\n  },\n  allergies: {\n    id: \"app.medical-section.allergies\",\n    description: \"allergies\",\n    defaultMessage: \"Allergies\"\n  },\n  useComma: {\n    id: \"app.medical-section.use-comma\",\n    description: \"use comma tip\",\n    defaultMessage: \"Use , (comma) to add more\"\n  },\n  surgeriesFracture: {\n    id: \"app.medical-section.surgeries-fracture\",\n    description: \"surgeries fracture label\",\n    defaultMessage: \"Surgeries/Fracture\"\n  },\n  otherConditions: {\n    id: \"app.medical-section.other-conditions\",\n    description: \"other conditions label\",\n    defaultMessage: \"Other Conditions\"\n  },\n  vital: {\n    id: \"app.medical-section.vital\",\n    description: \"vital label\",\n    defaultMessage: \"Vital\"\n  },\n  vitalSubtitle: {\n    id: \"app.medical-section.vital-subtitle\",\n    description: \"vital subtitle\",\n    defaultMessage: \"Add most recent vital readings\"\n  },\n  bodyTemperature: {\n    id: \"app.medical-section.body-temperature\",\n    description: \"body temperature\",\n    defaultMessage: \"Body Temperature\"\n  },\n  respirationRate: {\n    id: \"app.medical-section.respiration-rate\",\n    description: \"respiration rate\",\n    defaultMessage: \"Respiration Rate\"\n  },\n  breathePerMinute: {\n    id: \"app.medical-section.breathe-per-minute\",\n    description: \"breathe per minute\",\n    defaultMessage: \"breathe per minute\"\n  },\n  pulseRate: {\n    id: \"app.medical-section.pulse-rate\",\n    description: \"pulse rate\",\n    defaultMessage: \"Pulse Rate\"\n  },\n  bpm: {\n    id: \"app.medical-section.bpm\",\n    description: \"bpm\",\n    defaultMessage: \"bpm\"\n  },\n  bloodPressure: {\n    id: \"app.medical-section.blood-pressure\",\n    description: \"blood pressure\",\n    defaultMessage: \"Blood Pressure\"\n  },\n  bpUnit: {\n    id: \"app.medical-section.bp-unit\",\n    description: \"blood pressure unit\",\n    defaultMessage: \"systolic/diastolic in mmHG\"\n  },\n  clinicalReadings: {\n    id: \"app.medical-section.clinical-readings\",\n    description: \"clinical readings\",\n    defaultMessage: \"Clinical Readings\"\n  },\n  clinicalReadingsSubtitle: {\n    id: \"app.medical-section.clinical-readings-subtitle\",\n    description: \"clinical readings subtitle\",\n    defaultMessage:\n      \"Choose a diagnosis method & add clinical readings respectively. You can add multiple readings\"\n  },\n  notBeBlank: {\n    id: \"app.contacts-section.not-be-blank\",\n    description: \"Cannot be blank\",\n    defaultMessage: \"Cannot be blank\"\n  },\n  caseDoctor: {\n    id: \"app.contacts-section.case-doctor\",\n    description: \"case doctor\",\n    defaultMessage: \"Case Doctor\"\n  },\n  notAssigned: {\n    id: \"app.contacts-section.not-assigned\",\n    description: \"not assigned\",\n    defaultMessage: \"Not assigned\"\n  },\n  careCoach: {\n    id: \"app.contacts-section.care-coach\",\n    description: \"care coach\",\n    defaultMessage: \"Care coach\"\n  },\n  relativeName: {\n    id: \"app.contacts-section.relative-name\",\n    description: \"relative name\",\n    defaultMessage: \"Relative Name\"\n  },\n  parent: {\n    id: \"app.contacts-section.parent\",\n    description: \"parent\",\n    defaultMessage: \"Parent\"\n  },\n  spouse: {\n    id: \"app.contacts-section.spouse\",\n    description: \"spouse\",\n    defaultMessage: \"Spouse\"\n  },\n  guardian: {\n    id: \"app.contacts-section.guardian\",\n    description: \"guardian\",\n    defaultMessage: \"Guardian\"\n  },\n  relativeMobile: {\n    id: \"app.contacts-section.relative-mobile\",\n    description: \"relative mobile\",\n    defaultMessage: \"Relative Mobile\"\n  },\n  contactRelative: {\n    id: \"app.contacts-section.contact-relative\",\n    description: \"contact relative for emergency\",\n    defaultMessage: \"Contact Relative for Emergency\"\n  },\n  emergencyContactMobile: {\n    id: \"app.contacts-section.emergency-contact-mobile\",\n    description: \"emergency contact mobile\",\n    defaultMessage: \"Emergency Contact Mobile\"\n  },\n  emergencyContactName: {\n    id: \"app.contacts-section.emergency-contact-name\",\n    description: \"emergency contact name\",\n    defaultMessage: \"Emergency Contact Name\"\n  },\n  emergencyContactRule: {\n    id: \"app.contacts-section.emergency-contact-rule\",\n    description: \"emergency contact rule\",\n    defaultMessage: \"Please provide emergency contact\"\n  },\n  phoneNumberRule: {\n    id: \"app.contacts-section.phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"Please provide phone number\"\n  },\n  careCoachphoneNumberRule: {\n    id: \"app.contacts-section.carecoach-phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"This field cannot be blank. Please provide phone number\"\n  },\n  changePassword: {\n    id: \"app.edit-profile.setting-section.chnage-password\",\n    description: \"change password\",\n    defaultMessage: \"Change Password\"\n  },\n  calendarSynced: {\n    id: \"app.edit-profile.setting-section.calendar-sync\",\n    description: \"calendar synced\",\n    defaultMessage: \"Calendar Sync\"\n  },\n  smsAlerts: {\n    id: \"app.edit-profile.setting-section.sms-alerts\",\n    description: \"sms alert\",\n    defaultMessage: \"SMS Alerts\"\n  },\n  smsWillBeSent: {\n    id: \"app.edit-profile.setting-section.sms-will-be-sent\",\n    description: \"sms will be sent\",\n    defaultMessage: \"SMS will be sent to your registered mobile contact\"\n  },\n  emailAlerts: {\n    id: \"app.edit-profile.setting-section.email-alerts\",\n    description: \"email alert\",\n    defaultMessage: \"Email Alerts\"\n  },\n  emailWillBeSent: {\n    id: \"app.edit-profile.setting-section.email-will-be-sent\",\n    description: \"email will be sent\",\n    defaultMessage: \"Email will be sent to your registered email address\"\n  },\n  pushAlerts: {\n    id: \"app.edit-profile.setting-section.push-alerts\",\n    description: \"push alert\",\n    defaultMessage: \"In-app / Push Alerts\"\n  },\n  pushWillBeSent: {\n    id: \"app.edit-profile.setting-section.push-will-be-sent\",\n    description: \"push will be sent\",\n    defaultMessage: \"These alerts are notified within the RPM web app.\"\n  },\n  reminderAlerts: {\n    id: \"app.edit-profile.setting-section.reminder-alerts\",\n    description: \"reminder alert\",\n    defaultMessage: \"Reminder Alerts\"\n  },\n  reminderWillBeSent: {\n    id: \"app.edit-profile.setting-section.reminder-will-be-sent\",\n    description: \"reminder will be sent\",\n    defaultMessage: \"All reminders will be sent via SMS/Email/Calendar\"\n  },\n  account: {\n    id: \"app.edit-profile.setting-section.account\",\n    description: \"account\",\n    defaultMessage: \"Account\"\n  },\n  notifications: {\n    id: \"app.edit-profile.setting-section.notifications\",\n    description: \"notifications\",\n    defaultMessage: \"Notifications\"\n  },\n\n  selectPhotoTitle: {\n    id: \"app.edit-profile.personal-section.select-photo-title\",\n    description: \"profile photo selection title\",\n    defaultMessage: \"Select profile photo\"\n  },\n  photoOKText: {\n    id: \"app.edit-profile.personal-section.photo-ok-text\",\n    description: \"profile photo ok text\",\n    defaultMessage: \"Set as Profile Photo\"\n  },\n  cropImage: {\n    id: \"app.edit-profile.personal-section.crop-image-text\",\n    description: \"crop image instruction text\",\n    defaultMessage:\n      \"To crop this image, drag the region below and then click “Set as Profile Photo” button\"\n  },\n  photoVisibleInfo: {\n    id: \"app.edit-profile.personal-section.photo-visible-info\",\n    description: \"photo will be visible info text\",\n    defaultMessage:\n      \"Your profile photo will be visible to everyone, across IQVIA products.\"\n  },\n  verified: {\n    id: \"app.edit-profile.personal-section.verified\",\n    description: \"verified\",\n    defaultMessage: \"Verified\"\n  },\n  notVerified: {\n    id: \"app.edit-profile.personal-section.not-verified\",\n    description: \"not verified\",\n    defaultMessage: \"Not verified\"\n  },\n  mobile: {\n    id: \"app.edit-profile.personal-section.mobile\",\n    description: \"mobile\",\n    defaultMessage: \"Mobile\"\n  },\n  nameRule: {\n    id: \"app.edit-profile.personal-section.name-rule\",\n    description: \"name rule\",\n    defaultMessage: \"please provide your Name\"\n  },\n  dobRule: {\n    id: \"app.edit-profile.personal-section.dob-rule\",\n    description: \"dob rule\",\n    defaultMessage: \"please provide your Date of Birth\"\n  },\n  genderRule: {\n    id: \"app.edit-profile.personal-section.gender-rule\",\n    description: \"gender rule\",\n    defaultMessage: \"please provide your gender\"\n  },\n  localityRule: {\n    id: \"app.edit-profile.personal-section.locality-rule\",\n    description: \"locality rule\",\n    defaultMessage: \"please fill your locality\"\n  },\n  zipcodeRule: {\n    id: \"app.edit-profile.personal-section.zipcode-rule\",\n    description: \"zipcode rule\",\n    defaultMessage: \"please fill your zip code\"\n  },\n  cityRule: {\n    id: \"app.edit-profile.personal-section.city-rule\",\n    description: \"city rule\",\n    defaultMessage: \"please provide your city\"\n  },\n  countryRule: {\n    id: \"app.edit-profile.personal-section.country-rule\",\n    description: \"country rule\",\n    defaultMessage: \"please provide your country\"\n  },\n  sendOTP: {\n    id: \"app.edit-profile.personal-section.send-otp\",\n    description: \"send otp\",\n    defaultMessage: \"Send OTP\"\n  },\n  fullName: {\n    id: \"app.edit-profile.personal-section.full-name\",\n    description: \"full name\",\n    defaultMessage: \"Full Name\"\n  },\n  dateOfBirth: {\n    id: \"app.edit-profile.personal-section.date-of-birth\",\n    description: \"date of birth\",\n    defaultMessage: \"Date of Birth\"\n  },\n  email: {\n    id: \"app.edit-profile.personal-section.email\",\n    description: \"email\",\n    defaultMessage: \"Email\"\n  },\n  male: {\n    id: \"app.edit-profile.personal-section.male\",\n    description: \"male\",\n    defaultMessage: \"Male\"\n  },\n  female: {\n    id: \"app.edit-profile.personal-section.female\",\n    description: \"female\",\n    defaultMessage: \"Female\"\n  },\n  city: {\n    id: \"app.edit-profile.personal-section.city\",\n    description: \"city\",\n    defaultMessage: \"City\"\n  },\n  country: {\n    id: \"app.edit-profile.personal-section.country\",\n    description: \"country\",\n    defaultMessage: \"Country\"\n  },\n  consentForm: {\n    id: \"app.edit-profile.settingSection.consentForm\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  idProof: {\n    id: \"app.edit-profile.settingSection.Idproof\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  },\n  uploadedOn: {\n    id: \"app.edit-profile.settingSection.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded on\"\n  },\n  newPatient: {\n    id: \"app.care-coach.add-patient.newPatient\",\n    description: \"new patient text\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.care-coach.add-doctor.newDoctor\",\n    description: \"new doctor text\",\n    defaultMessage: \"New Doctor\"\n  },\n  patientEmail: {\n    id: \"app.care-coach.add-patient.patientEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Patient's Email\"\n  },\n  doctorEmail: {\n    id: \"app.care-coach.add-patient.doctorEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Doctor's Email\"\n  },\n  incorrectEmail: {\n    id: \"app.care-coach.add-patient.incorrectEmail\",\n    description: \"That's not a valid E-mail address\",\n    defaultMessage: \"Please enter a valid email address\"\n  },\n  program: {\n    id: \"app.care-coach.add-patient.program\",\n    description: \"program menu text\",\n    defaultMessage: \"Program\"\n  },\n  programError: {\n    id: \"app.care-coach.add-patient.programError\",\n    description: \"program error text\",\n    defaultMessage: \"Please enter a Program\"\n  },\n  newPatientSuccess: {\n    id: \"app.care-coach.add-patient.newPatientSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Patient enrolled to the program and invite sent successfully\"\n  },\n  newPatientFailure: {\n    id: \"app.care-coach.add-patient.newPatientFailure\",\n    description: \"new patient not enrolled\",\n    defaultMessage: \"Unable to enroll new Patient, Please try again.\"\n  },\n  newDoctorSuccess: {\n    id: \"app.care-coach.add-patient.newDoctorSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Doctor enrolled to the program and invite sent successfully\"\n  },\n  newDoctorFailure: {\n    id: \"app.care-coach.add-patient.newDoctorFailure\",\n    description: \"new doctor not enrolled\",\n    defaultMessage: \"Unable to enroll new Doctor, Please try again.\"\n  },\n  licenseId: {\n    id: \"app.care-coach.add-doctor.licenseId\",\n    description: \"license id\",\n    defaultMessage: \"License ID\"\n  },\n  hospitalError: {\n    id: \"app.care-coach.add-patient.hospitalError\",\n    description: \"hospital error text\",\n    defaultMessage: \"Please enter a Hospital\"\n  },\n  relativeNumberError: {\n    id: \"app.edit-profile.relativeNumber error\",\n    description: \"relatvie number equal to personal number error\",\n    defaultMessage: \"Relative number and Personal Number cannot be same\"\n  },\n  emergencyNumberError: {\n    id: \"app.edit-profile.emergencyNumber error\",\n    description: \"emergency number equal to personal number error\",\n    defaultMessage: \"Emergency number and Personal Number cannot be same\"\n  }\n});\n\nexport default messages;\n","import React from \"react\";\nimport map from \"lodash-es/map\";\nimport without from \"lodash-es/without\";\nimport forEach from \"lodash-es/forEach\";\nimport moment from \"moment\";\nimport { Form, Select, DatePicker, Modal, Input, Radio } from \"antd\";\nimport { doRequest } from \"../../../../Helper/network\";\nimport { Auth } from \"../../../../Helper/urls\";\nimport { REQUEST_TYPE } from \"../../../../constant\";\nimport { injectIntl } from \"react-intl\";\nimport calendar from \"../../../../Assets/images/button-select-date.svg\";\nimport { MobileInput } from \"../../MobileInput\";\nimport CountryCity from \"../../../Containers/CountryCity\";\nimport messages from \"./message\";\nimport CommonMessage from \"../../CommonMessage\";\nimport CommonError from \"../../CommonError\";\nimport \"../style.less\";\n\nimport dropDown from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport searchIcon from \"../../../../Assets/images/ico-search.svg\";\nconst SearchIcon = <img alt=\"\" src={searchIcon} />;\nconst dropdownIcon = <img alt=\"\" src={dropDown} />;\n\nconst PATIENT_EMAIL = \"email\";\nconst PATIENT_PROGRAM = \"programId\";\nconst PATIENT_NAME = \"name\";\nconst PATIENT_PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst PATIENT_COUNTRY_CODE = \"contactNo.countryCode\";\nconst PATIENT_DOB = \"dob\";\nconst PATIENT_GENDER = \"gender\";\nconst PATIENT_COUNTRY = \"country\";\nconst PATIENT_CITY = \"city\";\nconst DOCTOR = \"doctor\";\nconst HOSPITAL = \"hospital\";\n\n//don't remove mobile no from here\n//to remove something from required, change the rule props of that field\nconst ERROR_PRONE_FIELDS = [\n  PATIENT_EMAIL,\n  PATIENT_PROGRAM,\n  PATIENT_PHONE_NUMBER,\n  DOCTOR,\n  HOSPITAL,\n  PATIENT_COUNTRY_CODE\n];\n\nconst { Option } = Select;\nlet errMessage = {};\n\nfunction disabledDate(current) {\n  // Can not select days after today\n  return current && current > moment().endOf(\"day\");\n}\n\nclass AddPatient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n      is_link_send: false,\n      is_error: false,\n      toggleAddPatient: true\n    };\n    this.handleOk = this.handleOk.bind(this);\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    const { fetchProgramsData } = this.props;\n    fetchProgramsData();\n    //to disable end button intially\n    const { validateFields } = this.props.form;\n    validateFields();\n  }\n\n  componentWillUnmount() {\n    const { resetFields } = this.props.form;\n    resetFields();\n  }\n\n  formatMessage = data => {\n    this.props.intl.formatMessage(data);\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk() {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let formData = {};\n        formData = values;\n        if (formData.city === \"\") {\n          formData.city = undefined;\n        }\n        formData.userCategory = \"patient\";\n        const { handleCancel } = this.props;\n\n        doRequest({\n          method: REQUEST_TYPE.POST,\n          data: formData,\n          url: Auth.addPatientURL()\n        }).then(response => {\n          errMessage = response.payload.error\n            ? response.payload.error.message\n            : \"\";\n          !response.status\n            ? this.setState({ visible: true, is_error: true })\n            : this.setState({ visible: false, is_link_send: true }, () => {\n                setTimeout(async () => {\n                  //await resetFields();\n                  await handleCancel();\n                }, 3000);\n              });\n        });\n      } else if (err) {\n        this.setState({\n          visible: true,\n          is_error: true\n        });\n      }\n    });\n  }\n\n  getProgramsData = () => {\n    const programsData = this.props.programs;\n    let options = [];\n\n    for (const key in programsData) {\n      const program = programsData[key];\n      //To resolve duplicate key warnings\n      if (program._id !== undefined && moment().isBefore(program.expiresOn)) {\n        options.push(\n          <Option key={`${program._id}`} value={program._id}>\n            {program.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  getDoctorsData = () => {\n    //\n\n    const {\n      users,\n      form: { getFieldValue }\n    } = this.props;\n    const programId = getFieldValue(PATIENT_PROGRAM);\n    const { doctors = {} } = this.props.programs[programId] || {};\n    //\n    //\n    let doctorsData = [];\n    forEach(doctors, doctor => {\n      const doctorId = doctor._id;\n      if (doctor && doctorId && users[doctorId]) {\n        doctorsData.push(users[doctorId]);\n      }\n    });\n\n    //const doctorsData = this.props.programs.programDoctors;\n    let options = [];\n    forEach(doctorsData, doctor => {\n      options.push(\n        <Option key={`${doctor._id}`} value={doctor._id}>\n          {doctor.name}\n        </Option>\n      );\n    });\n    return options;\n  };\n\n  getHospitalsData = () => {\n    const {\n      form: { getFieldValue },\n      hospitals = {},\n      users = {}\n    } = this.props;\n    let hospitalsData = hospitals;\n    const selectedDoctor = getFieldValue(DOCTOR);\n\n    if (selectedDoctor && users[selectedDoctor]) {\n      const doctor = users[selectedDoctor];\n      let visitingHospitals = doctor.visitingHospitals;\n      hospitalsData = map(hospitalsData, hospital => {\n        if (visitingHospitals.includes(hospital.id)) return hospital;\n      });\n      hospitalsData = without(hospitalsData, undefined);\n    }\n\n    let options = [];\n    for (const key in hospitalsData) {\n      const hospital = hospitalsData[key];\n      options.push(\n        <Option key={`${hospital.id}`} value={hospital.id}>\n          {hospital.name}\n        </Option>\n      );\n    }\n    return options;\n  };\n\n  handleCancel = () => {\n    const { close } = this.props;\n    close();\n  };\n\n  clearMsg = e => {\n    //e.preventDefault();\n    this.setState({\n      is_link_send: false,\n      is_error: false\n    });\n  };\n\n  openCalendar = e => {\n    //e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[0]\n      .click();\n  };\n\n  isError = () => {\n    const { getFieldError } = this.props.form;\n    for (const k in ERROR_PRONE_FIELDS) {\n      const key = ERROR_PRONE_FIELDS[k];\n      if (getFieldError(key)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  onChangeProgram = value => {\n    const {\n      fetchProgramDoctors,\n      form: { resetFields, validateFields }\n    } = this.props;\n    fetchProgramDoctors(value);\n    resetFields([DOCTOR, HOSPITAL]);\n    validateFields([DOCTOR, HOSPITAL]);\n  };\n\n  onChangeDoctor = value => {\n    const {\n      form: { resetFields, validateFields },\n      fetchDoctorHospitals\n    } = this.props;\n    resetFields([HOSPITAL]);\n    fetchDoctorHospitals(value);\n    validateFields([HOSPITAL]);\n  };\n\n  isText = (rule, value, callback) => {\n    if (value && value.length > 0 && value.match(\"^[A-Za-z ]+$\") === null) {\n      callback(\"Enter valid name\");\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage },\n      show: visible\n    } = this.props;\n\n    if (!visible) {\n      return null;\n    }\n    const {\n      getFieldDecorator,\n      isFieldTouched,\n      getFieldError\n    } = this.props.form;\n    const { isError } = this;\n\n    let fieldError = {};\n\n    ERROR_PRONE_FIELDS.forEach(field => {\n      fieldError[field] = isFieldTouched(field) && getFieldError(field);\n    });\n\n    return (\n      <div>\n        <div>\n          {this.state.is_link_send && (\n            <CommonMessage\n              msg={formatMessage(messages.newPatientSuccess)}\n              className={\"carecoach-new-user-success-message top60\"}\n              close={this.clearMsg}\n            />\n          )}\n        </div>\n\n        <Modal\n          title={formatMessage(messages.newPatient)}\n          visible={visible}\n          onOk={this.handleOk}\n          okButtonProps={{\n            disabled: isError()\n          }}\n          onCancel={this.handleCancel}\n          okText=\"Send Invite\"\n          wrapClassName={\"global-modal\"}\n          destroyOnClose={true}\n        >\n          <Form className=\"full-width\">\n            <Form.Item\n              validateStatus={fieldError[PATIENT_EMAIL] ? \"error\" : \"\"}\n              help={fieldError[PATIENT_EMAIL] || \"\"}\n              label={formatMessage(messages.patientEmail)}\n            >\n              {getFieldDecorator(PATIENT_EMAIL, {\n                rules: [\n                  {\n                    type: \"email\",\n                    required: true,\n                    message: formatMessage(messages.incorrectEmail)\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item\n              validateStatus={fieldError[PATIENT_PROGRAM] ? \"error\" : \"\"}\n              help={fieldError[PATIENT_PROGRAM] || \"\"}\n              label={formatMessage(messages.program)}\n            >\n              {getFieldDecorator(PATIENT_PROGRAM, {\n                rules: [\n                  {\n                    required: true,\n                    message: formatMessage(messages.programError)\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={dropdownIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  onChange={this.onChangeProgram}\n                  getPopupContainer={this.getParentNode}\n                >\n                  {this.getProgramsData()}\n                </Select>\n              )}\n            </Form.Item>\n\n            <Form.Item\n              label={formatMessage(messages.caseDoctor)}\n              validateStatus={fieldError[DOCTOR] ? \"error\" : \"\"}\n              help={fieldError[DOCTOR] || \"\"}\n            >\n              {getFieldDecorator(DOCTOR, {\n                rules: [\n                  {\n                    required: true\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={SearchIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  onChange={this.onChangeDoctor}\n                  getPopupContainer={this.getParentNode}\n                >\n                  {this.getDoctorsData()}\n                </Select>\n              )}\n            </Form.Item>\n\n            <Form.Item\n              label={formatMessage(messages.hospital)}\n              validateStatus={fieldError[HOSPITAL] ? \"error\" : \"\"}\n              help={fieldError[HOSPITAL] || \"\"}\n            >\n              {getFieldDecorator(HOSPITAL, {\n                rules: [\n                  {\n                    required: true\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={SearchIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  getPopupContainer={this.getParentNode}\n                >\n                  {this.getHospitalsData()}\n                </Select>\n              )}\n            </Form.Item>\n\n            <div className=\"optional\">Optional</div>\n            <Form.Item label={formatMessage(messages.fullName)}>\n              {getFieldDecorator(PATIENT_NAME, {\n                rules: [\n                  {\n                    validator: this.isText\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <div className=\"mobile-gender\">\n              {formatMessage(messages.mobile)}\n            </div>\n            <MobileInput\n              fieldError={fieldError}\n              phoneField={PATIENT_PHONE_NUMBER}\n              countryCodeField={PATIENT_COUNTRY_CODE}\n              {...this.props}\n            />\n            <div />\n\n            <div className=\"mt20 flex row align-items-center iqvia-date-picker\">\n              <div className=\"full-width \">\n                <Form.Item label={formatMessage(messages.dateOfBirth)}>\n                  {getFieldDecorator(PATIENT_DOB, {\n                    onChange: () => {\n                      this.setState({ open: false });\n                    }\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      disabledDate={disabledDate}\n                      className=\"full-width\"\n                      getCalendarContainer={this.getParentNode}\n                    />\n                  )}\n                  <img\n                    alt=\"\"\n                    className=\"calendar\"\n                    onClick={this.openCalendar}\n                    src={calendar}\n                  />\n                </Form.Item>\n              </div>\n            </div>\n\n            <div className=\"\">\n              <div className=\"mobile-gender\">Gender</div>\n              <Form.Item>\n                {getFieldDecorator(PATIENT_GENDER, {})(\n                  <Radio.Group className=\"full-width male_female_radio_group\">\n                    <Radio.Button\n                      className=\"full-width check-box-right flex fontsize16\"\n                      value={\"M\"}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        paddingTop: \"8px\"\n                      }}\n                    >\n                      {formatMessage(messages.male)}\n                    </Radio.Button>\n                    <Radio.Button\n                      className=\"full-width check-box-right flex fontsize16 pt8\"\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        paddingTop: \"8px\"\n                      }}\n                      value={\"F\"}\n                    >\n                      {formatMessage(messages.female)}\n                    </Radio.Button>\n                  </Radio.Group>\n                )}\n              </Form.Item>\n            </div>\n\n            <CountryCity\n              form={this.props.form}\n              getFieldDecorator={getFieldDecorator}\n              cityLabel={formatMessage(messages.city)}\n              countryLabel={formatMessage(messages.country)}\n              cityField={PATIENT_CITY}\n              countryField={PATIENT_COUNTRY}\n              fieldError={fieldError}\n              cityRules={[\n                {\n                  required: false,\n                  message: formatMessage(messages.cityRule)\n                }\n              ]}\n              countryRules={[\n                {\n                  required: false,\n                  message: formatMessage(messages.countryRule)\n                }\n              ]}\n            />\n\n            {/* <Form.Item\n              label=\"Doctor\"\n              validateStatus={fieldError[DOCTOR] ? \"error\" : \"\"}\n              help={fieldError[DOCTOR] || \"\"}\n            >\n              {getFieldDecorator(DOCTOR, {\n                rules: [\n                  {\n                    required: true\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={SearchIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  onChange={this.onChangeDoctor}\n                >\n                  {this.getDoctorsData()}\n                </Select>\n              )}\n            </Form.Item> */}\n\n            <div className=\"end-padding\">\n              {/* <Form.Item\n                label=\"Hospital\"\n                validateStatus={fieldError[HOSPITAL] ? \"error\" : \"\"}\n                help={fieldError[HOSPITAL] || \"\"}\n              >\n                {getFieldDecorator(HOSPITAL, {\n                  rules: [\n                    {\n                      required: true\n                    }\n                  ]\n                })(\n                  <Select\n                    className={\"full-width iqvia-style-select fontsize14\"}\n                    suffixIcon={SearchIcon}\n                    showSearch\n                    autoComplete=\"off\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {this.getHospitalsData()}\n                  </Select>\n                )}\n              </Form.Item> */}\n            </div>\n\n            <div className=\"end-padding\">\n              {this.state.is_error && (\n                <CommonError\n                  msg={errMessage}\n                  className={\"carecoach-new-user-failure-message\"}\n                  close={this.clearMsg}\n                />\n              )}\n            </div>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default injectIntl(Form.create()(AddPatient));\n","import { connect } from \"react-redux\";\nimport AddPatient from \"../../Components/Modal/addPatient/addPatient\";\nimport {\n  fetchProgramsData,\n  fetchProgramDoctorsForModal\n} from \"../../../modules/program\";\nimport { fetchDoctorHospitals } from \"../../../modules/hospital\";\nimport { close } from \"../../../modules/modals\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    programs,\n    hospitals,\n    users,\n    modal: { show, modalType }\n  } = state;\n\n  return {\n    show: show && modalType === GLOBAL_MODALS.PATIENT_MODAL,\n    programs,\n    hospitals,\n    users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchProgramDoctors: programId =>\n      dispatch(fetchProgramDoctorsForModal(programId)),\n    fetchDoctorHospitals: doctorId => dispatch(fetchDoctorHospitals(doctorId)),\n    close: () => dispatch(close())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddPatient);\n","import { defineMessages } from \"react-intl\";\nconst messages = defineMessages({\n  myProfile: {\n    id: \"app.edit-profile-main.my-profile\",\n    description: \"heading\",\n    defaultMessage: \"My Profile\"\n  },\n  personal: {\n    id: \"app.edit-profile.menubar.personal\",\n    description: \"personal menu text\",\n    defaultMessage: \"Personal\"\n  },\n  contacts: {\n    id: \"app.edit-profile.menubar.contacts\",\n    description: \"contacts menu text\",\n    defaultMessage: \"Contacts\"\n  },\n  medical: {\n    id: \"app.edit-profile.menubar.medical\",\n    description: \"medical menu text\",\n    defaultMessage: \"Medical\"\n  },\n  settings: {\n    id: \"app.edit-profile.menubar.settings\",\n    description: \"settings menu text\",\n    defaultMessage: \"Settings\"\n  },\n  insurance: {\n    id: \"app.edit-profile.menubar.insurance\",\n    description: \"insurance menu text\",\n    defaultMessage: \"Insurance\"\n  },\n  insuranceProvider: {\n    id: \"app.edit-profile.insuranceSection.insuranceProvider\",\n    description: \"insurance provider input label text\",\n    defaultMessage: \"Medical Insurance Provider\"\n  },\n  insurancePolicy: {\n    id: \"app.edit-profile.insuranceSection.insurancePolicy\",\n    description: \"insurance policy input label text\",\n    defaultMessage: \"Insurance Policy\"\n  },\n  insuranceExpiresOn: {\n    id: \"app.edit-profile.insuranceSection.insuranceExpiresOn\",\n    description: \"insurance expires input label text\",\n    defaultMessage: \"Valid Till\"\n  },\n\n  hospital: {\n    id: \"app.edit-profile.contact-sections.hospital\",\n    description: \"Hospital label text\",\n    defaultMessage: \"Hospital\"\n  },\n\n  work: {\n    id: \"app.edit-profile.menubar.work\",\n    description: \"work menu text\",\n    defaultMessage: \"Work\"\n  },\n  hospitalName: {\n    id: \"app.edit-profile.work-section.hospital-name\",\n    description: \"hospital name\",\n    defaultMessage: \"Hospital Name\"\n  },\n  speciality: {\n    id: \"app.edit-profile.work-section.speciality\",\n    description: \"speciality\",\n    defaultMessage: \"Speciality\"\n  },\n  specialityRule: {\n    id: \"app.edit-profile.work-section.speciality-rule\",\n    description: \"speciality rule\",\n    defaultMessage: \"Please provide speciality\"\n  },\n  licenseNumber: {\n    id: \"app.edit-profile.work-section.license-number\",\n    description: \"license number\",\n    defaultMessage: \"License Number\"\n  },\n  bio: {\n    id: \"app.edit-profile.work-section.bio\",\n    description: \"bio\",\n    defaultMessage: \"Bio\"\n  },\n  addressLine1: {\n    id: \"app.edit-profile.work-section.address-line1\",\n    description: \"address line 1\",\n    defaultMessage: \"Flat / House / Floor / Building\"\n  },\n  addressLine2: {\n    id: \"app.edit-profile.work-section.address-line2\",\n    description: \"address line 2\",\n    defaultMessage: \"Street / Locality / Area\"\n  },\n  zipcode: {\n    id: \"app.edit-profile.work-section.zipcode\",\n    description: \"zip code\",\n    defaultMessage: \"PO box / Zipcode\"\n  },\n  cityLabel: {\n    id: \"app.edit-profile.work-section.city\",\n    description: \"city label\",\n    defaultMessage: \"Region or State\"\n  },\n  countryLabel: {\n    id: \"app.edit-profile.work-section.country\",\n    description: \"country label\",\n    defaultMessage: \"Country\"\n  },\n  organisationName: {\n    id: \"app.edit-profile.work-section.organisation-name\",\n    description: \"organization name\",\n    defaultMessage: \"Organisation Name\"\n  },\n  services: {\n    id: \"app.edit-profile.work-section.services\",\n    description: \"services\",\n    defaultMessage: \"Services\"\n  },\n  notBlank: {\n    id: \"app.edit-profile.not-blank\",\n    description: \"not be blank\",\n    defaultMessage: \"not be blank\"\n  },\n  nursingTitle: {\n    id: \"app.edit-profile.service-section.nursing-title\",\n    description: \"nursing title\",\n    defaultMessage: \"Nursing\"\n  },\n  physicalTherapyTitle: {\n    id: \"app.edit-profile.service-section.physical-therapy-title\",\n    description: \"physical therapy title\",\n    defaultMessage: \"Physical Therapy\"\n  },\n  occupationalTherapyTitle: {\n    id: \"app.edit-profile.service-section.occupational-therapy-title\",\n    description: \"occupational therapy title\",\n    defaultMessage: \"Occupational Therapy\"\n  },\n  speechAndLanguagePathologyTitle: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology-title\",\n    description: \"speech and language pathology title\",\n    defaultMessage: \"Speech and Language Pathology\"\n  },\n  medicalCounsellingTitle: {\n    id: \"app.edit-profile.service-section.medical-counselling-title\",\n    description: \"medical counselling title\",\n    defaultMessage: \"Medical Counselling\"\n  },\n  healthAideTitle: {\n    id: \"app.edit-profile.service-section.health-aide-title\",\n    description: \"health aide title\",\n    defaultMessage: \"Health Aide\"\n  },\n  nursing: {\n    id: \"app.edit-profile.service-section.nursing\",\n    description: \"nursing\",\n    defaultMessage:\n      \"Physical assessments, which include monitoring of vital signs, administer oral and intravenous medications as well as monitoring of cardiac and respiratory status\"\n  },\n  physicalTherapy: {\n    id: \"app.edit-profile.service-section.physical-therapy\",\n    description: \"physical therapy\",\n    defaultMessage: \"Assist patients to condition muscles and regain strength\"\n  },\n  occupationalTherapy: {\n    id: \"app.edit-profile.service-section.occupational-therapy\",\n    description: \"occupational therapy\",\n    defaultMessage:\n      \"Assist patients to perform functional skills such as bathing, eating, cooking, and many other skills\"\n  },\n  speechAndLanguagePathology: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology\",\n    description: \"speech and language pathology\",\n    defaultMessage:\n      \"Assist patients to regain their ability to speak, swallow, and eat after a stroke or other neurological injuries\"\n  },\n  medicalCounselling: {\n    id: \"app.edit-profile.service-section.medical-counselling\",\n    description: \"medical counselling\",\n    defaultMessage:\n      \"Assistance with medications, provision of counseling, assistance with financial matters, transportation, and in accessing educational and treatment resources\"\n  },\n  healthAide: {\n    id: \"app.edit-profile.service-section.health-aide\",\n    description: \"health aide\",\n    defaultMessage:\n      \"Assist patients with their activities of daily living while patients are limited in mobility and strength which includes tasks such as bathing, grooming, and preparing meals\"\n  },\n  cardiacCareTitle: {\n    id: \"app.edit-profile.service-section.cardiac-care-title\",\n    description: \"cardiac care title\",\n    defaultMessage: \"Cardiac Care\"\n  },\n  diabetesCareTitle: {\n    id: \"app.edit-profile.service-section.diabetes-care-title\",\n    description: \"diabetes care title\",\n    defaultMessage: \"Diabetes Care\"\n  },\n  smokingCessationTitle: {\n    id: \"app.edit-profile.service-section.smoking-cessation-title\",\n    description: \"smoking cessation title\",\n    defaultMessage: \"Smoking Cessation\"\n  },\n  respiteCareTitle: {\n    id: \"app.edit-profile.service-section.respite-care-title\",\n    description: \"respite care title\",\n    defaultMessage: \"Respite Care\"\n  },\n  homemakingTitle: {\n    id: \"app.edit-profile.service-section.homemaking-title\",\n    description: \"homemaking title\",\n    defaultMessage: \"Homemaking\"\n  },\n  cardiacCare: {\n    id: \"app.edit-profile.service-section.cardiac-care\",\n    description: \"Cardiac Care\",\n    defaultMessage:\n      \"Assist patients with cardiac disease to manage their disease and to help slow down progression of their disease, monitor the cardiac status, prompt efficient treatment that will prevent re- hospitalization\"\n  },\n  diabetesCare: {\n    id: \"app.edit-profile.service-section.diabetes-care\",\n    description: \"Diabetes Care\",\n    defaultMessage:\n      \"Assist patient with diabetes and their families in learning to manage their diabetes, educate diet, exercise, self- blood glucose monitoring, and about complications of uncontrolled diabetes\"\n  },\n  smokingCessation: {\n    id: \"app.edit-profile.service-section.smoking-cessation\",\n    description: \"Smoking Cessation\",\n    defaultMessage: \"Provide nicotine replacement therapy\"\n  },\n  respiteCare: {\n    id: \"app.edit-profile.service-section.respite-care\",\n    description: \"Respite Care\",\n    defaultMessage:\n      \"Assist patients with Adult Care, Alzheimer’s Care, Hospital Support\"\n  },\n  homemaking: {\n    id: \"app.edit-profile.service-section.homemaking\",\n    description: \"Homemaking\",\n    defaultMessage:\n      \"Provide patients with daily assistance including meal preparation, housekeeping, laundary & maintaining chores\"\n  },\n  medicalServices: {\n    id: \"app.myprofile.medical-services\",\n    description: \"medical services\",\n    defaultMessage: \"Medical Services\"\n  },\n  homeHealthCare: {\n    id: \"app.myprofile.home-health-care\",\n    description: \"home health care\",\n    defaultMessage: \"Home Health Care\"\n  },\n  specialCare: {\n    id: \"app.myprofile.special-care\",\n    description: \"special care\",\n    defaultMessage: \"Special Care\"\n  },\n  nonMedicalServices: {\n    id: \"app.myprofile.non-medical-services\",\n    description: \"non medical services\",\n    defaultMessage: \"Non-medical Services\"\n  },\n  basic: {\n    id: \"app.medical-section.basic\",\n    description: \"basic\",\n    defaultMessage: \"Basic\"\n  },\n  chiefComplaint: {\n    id: \"app.medical-section.chief-complaint\",\n    description: \"chief complaint\",\n    defaultMessage: \"Chief Complaint\"\n  },\n  allergies: {\n    id: \"app.medical-section.allergies\",\n    description: \"allergies\",\n    defaultMessage: \"Allergies\"\n  },\n  useComma: {\n    id: \"app.medical-section.use-comma\",\n    description: \"use comma tip\",\n    defaultMessage: \"Use , (comma) to add more\"\n  },\n  surgeriesFracture: {\n    id: \"app.medical-section.surgeries-fracture\",\n    description: \"surgeries fracture label\",\n    defaultMessage: \"Surgeries/Fracture\"\n  },\n  otherConditions: {\n    id: \"app.medical-section.other-conditions\",\n    description: \"other conditions label\",\n    defaultMessage: \"Other Conditions\"\n  },\n  vital: {\n    id: \"app.medical-section.vital\",\n    description: \"vital label\",\n    defaultMessage: \"Vital\"\n  },\n  vitalSubtitle: {\n    id: \"app.medical-section.vital-subtitle\",\n    description: \"vital subtitle\",\n    defaultMessage: \"Add most recent vital readings\"\n  },\n  bodyTemperature: {\n    id: \"app.medical-section.body-temperature\",\n    description: \"body temperature\",\n    defaultMessage: \"Body Temperature\"\n  },\n  respirationRate: {\n    id: \"app.medical-section.respiration-rate\",\n    description: \"respiration rate\",\n    defaultMessage: \"Respiration Rate\"\n  },\n  breathePerMinute: {\n    id: \"app.medical-section.breathe-per-minute\",\n    description: \"breathe per minute\",\n    defaultMessage: \"breathe per minute\"\n  },\n  pulseRate: {\n    id: \"app.medical-section.pulse-rate\",\n    description: \"pulse rate\",\n    defaultMessage: \"Pulse Rate\"\n  },\n  bpm: {\n    id: \"app.medical-section.bpm\",\n    description: \"bpm\",\n    defaultMessage: \"bpm\"\n  },\n  bloodPressure: {\n    id: \"app.medical-section.blood-pressure\",\n    description: \"blood pressure\",\n    defaultMessage: \"Blood Pressure\"\n  },\n  bpUnit: {\n    id: \"app.medical-section.bp-unit\",\n    description: \"blood pressure unit\",\n    defaultMessage: \"systolic/diastolic in mmHG\"\n  },\n  clinicalReadings: {\n    id: \"app.medical-section.clinical-readings\",\n    description: \"clinical readings\",\n    defaultMessage: \"Clinical Readings\"\n  },\n  clinicalReadingsSubtitle: {\n    id: \"app.medical-section.clinical-readings-subtitle\",\n    description: \"clinical readings subtitle\",\n    defaultMessage:\n      \"Choose a diagnosis method & add clinical readings respectively. You can add multiple readings\"\n  },\n  notBeBlank: {\n    id: \"app.contacts-section.not-be-blank\",\n    description: \"Cannot be blank\",\n    defaultMessage: \"Cannot be blank\"\n  },\n  caseDoctor: {\n    id: \"app.contacts-section.case-doctor\",\n    description: \"case doctor\",\n    defaultMessage: \"Case Doctor\"\n  },\n  notAssigned: {\n    id: \"app.contacts-section.not-assigned\",\n    description: \"not assigned\",\n    defaultMessage: \"Not assigned\"\n  },\n  careCoach: {\n    id: \"app.contacts-section.care-coach\",\n    description: \"care coach\",\n    defaultMessage: \"Care coach\"\n  },\n  relativeName: {\n    id: \"app.contacts-section.relative-name\",\n    description: \"relative name\",\n    defaultMessage: \"Relative Name\"\n  },\n  parent: {\n    id: \"app.contacts-section.parent\",\n    description: \"parent\",\n    defaultMessage: \"Parent\"\n  },\n  spouse: {\n    id: \"app.contacts-section.spouse\",\n    description: \"spouse\",\n    defaultMessage: \"Spouse\"\n  },\n  guardian: {\n    id: \"app.contacts-section.guardian\",\n    description: \"guardian\",\n    defaultMessage: \"Guardian\"\n  },\n  relativeMobile: {\n    id: \"app.contacts-section.relative-mobile\",\n    description: \"relative mobile\",\n    defaultMessage: \"Relative Mobile\"\n  },\n  contactRelative: {\n    id: \"app.contacts-section.contact-relative\",\n    description: \"contact relative for emergency\",\n    defaultMessage: \"Contact Relative for Emergency\"\n  },\n  emergencyContactMobile: {\n    id: \"app.contacts-section.emergency-contact-mobile\",\n    description: \"emergency contact mobile\",\n    defaultMessage: \"Emergency Contact Mobile\"\n  },\n  emergencyContactName: {\n    id: \"app.contacts-section.emergency-contact-name\",\n    description: \"emergency contact name\",\n    defaultMessage: \"Emergency Contact Name\"\n  },\n  emergencyContactRule: {\n    id: \"app.contacts-section.emergency-contact-rule\",\n    description: \"emergency contact rule\",\n    defaultMessage: \"Please provide emergency contact\"\n  },\n  phoneNumberRule: {\n    id: \"app.contacts-section.phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"Please provide phone number\"\n  },\n  careCoachphoneNumberRule: {\n    id: \"app.contacts-section.carecoach-phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"This field cannot be blank. Please provide phone number\"\n  },\n  changePassword: {\n    id: \"app.edit-profile.setting-section.chnage-password\",\n    description: \"change password\",\n    defaultMessage: \"Change Password\"\n  },\n  calendarSynced: {\n    id: \"app.edit-profile.setting-section.calendar-sync\",\n    description: \"calendar synced\",\n    defaultMessage: \"Calendar Sync\"\n  },\n  smsAlerts: {\n    id: \"app.edit-profile.setting-section.sms-alerts\",\n    description: \"sms alert\",\n    defaultMessage: \"SMS Alerts\"\n  },\n  smsWillBeSent: {\n    id: \"app.edit-profile.setting-section.sms-will-be-sent\",\n    description: \"sms will be sent\",\n    defaultMessage: \"SMS will be sent to your registered mobile contact\"\n  },\n  emailAlerts: {\n    id: \"app.edit-profile.setting-section.email-alerts\",\n    description: \"email alert\",\n    defaultMessage: \"Email Alerts\"\n  },\n  emailWillBeSent: {\n    id: \"app.edit-profile.setting-section.email-will-be-sent\",\n    description: \"email will be sent\",\n    defaultMessage: \"Email will be sent to your registered email address\"\n  },\n  pushAlerts: {\n    id: \"app.edit-profile.setting-section.push-alerts\",\n    description: \"push alert\",\n    defaultMessage: \"In-app / Push Alerts\"\n  },\n  pushWillBeSent: {\n    id: \"app.edit-profile.setting-section.push-will-be-sent\",\n    description: \"push will be sent\",\n    defaultMessage: \"These alerts are notified within the RPM web app.\"\n  },\n  reminderAlerts: {\n    id: \"app.edit-profile.setting-section.reminder-alerts\",\n    description: \"reminder alert\",\n    defaultMessage: \"Reminder Alerts\"\n  },\n  reminderWillBeSent: {\n    id: \"app.edit-profile.setting-section.reminder-will-be-sent\",\n    description: \"reminder will be sent\",\n    defaultMessage: \"All reminders will be sent via SMS/Email/Calendar\"\n  },\n  account: {\n    id: \"app.edit-profile.setting-section.account\",\n    description: \"account\",\n    defaultMessage: \"Account\"\n  },\n  notifications: {\n    id: \"app.edit-profile.setting-section.notifications\",\n    description: \"notifications\",\n    defaultMessage: \"Notifications\"\n  },\n\n  selectPhotoTitle: {\n    id: \"app.edit-profile.personal-section.select-photo-title\",\n    description: \"profile photo selection title\",\n    defaultMessage: \"Select profile photo\"\n  },\n  photoOKText: {\n    id: \"app.edit-profile.personal-section.photo-ok-text\",\n    description: \"profile photo ok text\",\n    defaultMessage: \"Set as Profile Photo\"\n  },\n  cropImage: {\n    id: \"app.edit-profile.personal-section.crop-image-text\",\n    description: \"crop image instruction text\",\n    defaultMessage:\n      \"To crop this image, drag the region below and then click “Set as Profile Photo” button\"\n  },\n  photoVisibleInfo: {\n    id: \"app.edit-profile.personal-section.photo-visible-info\",\n    description: \"photo will be visible info text\",\n    defaultMessage:\n      \"Your profile photo will be visible to everyone, across IQVIA products.\"\n  },\n  verified: {\n    id: \"app.edit-profile.personal-section.verified\",\n    description: \"verified\",\n    defaultMessage: \"Verified\"\n  },\n  notVerified: {\n    id: \"app.edit-profile.personal-section.not-verified\",\n    description: \"not verified\",\n    defaultMessage: \"Not verified\"\n  },\n  mobile: {\n    id: \"app.edit-profile.personal-section.mobile\",\n    description: \"mobile\",\n    defaultMessage: \"Mobile\"\n  },\n  nameRule: {\n    id: \"app.edit-profile.personal-section.name-rule\",\n    description: \"name rule\",\n    defaultMessage: \"please provide your Name\"\n  },\n  dobRule: {\n    id: \"app.edit-profile.personal-section.dob-rule\",\n    description: \"dob rule\",\n    defaultMessage: \"please provide your Date of Birth\"\n  },\n  genderRule: {\n    id: \"app.edit-profile.personal-section.gender-rule\",\n    description: \"gender rule\",\n    defaultMessage: \"please provide your gender\"\n  },\n  localityRule: {\n    id: \"app.edit-profile.personal-section.locality-rule\",\n    description: \"locality rule\",\n    defaultMessage: \"please fill your locality\"\n  },\n  zipcodeRule: {\n    id: \"app.edit-profile.personal-section.zipcode-rule\",\n    description: \"zipcode rule\",\n    defaultMessage: \"please fill your zip code\"\n  },\n  cityRule: {\n    id: \"app.edit-profile.personal-section.city-rule\",\n    description: \"city rule\",\n    defaultMessage: \"please provide your city\"\n  },\n  countryRule: {\n    id: \"app.edit-profile.personal-section.country-rule\",\n    description: \"country rule\",\n    defaultMessage: \"please provide your country\"\n  },\n  sendOTP: {\n    id: \"app.edit-profile.personal-section.send-otp\",\n    description: \"send otp\",\n    defaultMessage: \"Send OTP\"\n  },\n  fullName: {\n    id: \"app.edit-profile.personal-section.full-name\",\n    description: \"full name\",\n    defaultMessage: \"Full Name\"\n  },\n  dateOfBirth: {\n    id: \"app.edit-profile.personal-section.date-of-birth\",\n    description: \"date of birth\",\n    defaultMessage: \"Date of Birth\"\n  },\n  email: {\n    id: \"app.edit-profile.personal-section.email\",\n    description: \"email\",\n    defaultMessage: \"Email\"\n  },\n  male: {\n    id: \"app.edit-profile.personal-section.male\",\n    description: \"male\",\n    defaultMessage: \"Male\"\n  },\n  female: {\n    id: \"app.edit-profile.personal-section.female\",\n    description: \"female\",\n    defaultMessage: \"Female\"\n  },\n  city: {\n    id: \"app.edit-profile.personal-section.city\",\n    description: \"city\",\n    defaultMessage: \"City\"\n  },\n  country: {\n    id: \"app.edit-profile.personal-section.country\",\n    description: \"country\",\n    defaultMessage: \"Country\"\n  },\n  consentForm: {\n    id: \"app.edit-profile.settingSection.consentForm\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  idProof: {\n    id: \"app.edit-profile.settingSection.Idproof\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  },\n  uploadedOn: {\n    id: \"app.edit-profile.settingSection.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded on\"\n  },\n  newPatient: {\n    id: \"app.care-coach.add-patient.newPatient\",\n    description: \"new patient text\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.care-coach.add-doctor.newDoctor\",\n    description: \"new doctor text\",\n    defaultMessage: \"New Doctor\"\n  },\n  patientEmail: {\n    id: \"app.care-coach.add-patient.patientEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Patient's Email\"\n  },\n  doctorEmail: {\n    id: \"app.care-coach.add-patient.doctorEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Doctor's Email\"\n  },\n  incorrectEmail: {\n    id: \"app.care-coach.add-patient.incorrectEmail\",\n    description: \"That's not a valid E-mail address\",\n    defaultMessage: \"Please enter a valid email address\"\n  },\n  program: {\n    id: \"app.care-coach.add-patient.program\",\n    description: \"program menu text\",\n    defaultMessage: \"Program\"\n  },\n  programError: {\n    id: \"app.care-coach.add-patient.programError\",\n    description: \"program error text\",\n    defaultMessage: \"Please enter a Program\"\n  },\n  newPatientSuccess: {\n    id: \"app.care-coach.add-patient.newPatientSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Patient enrolled to the program and invite sent successfully\"\n  },\n  newPatientFailure: {\n    id: \"app.care-coach.add-patient.newPatientFailure\",\n    description: \"new patient not enrolled\",\n    defaultMessage: \"Unable to enroll new Patient, Please try again.\"\n  },\n  newDoctorSuccess: {\n    id: \"app.care-coach.add-patient.newDoctorSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Doctor enrolled to the program and invite sent successfully\"\n  },\n  newDoctorFailure: {\n    id: \"app.care-coach.add-patient.newDoctorFailure\",\n    description: \"new doctor not enrolled\",\n    defaultMessage: \"Unable to enroll new Doctor, Please try again.\"\n  },\n  licenseId: {\n    id: \"app.care-coach.add-doctor.licenseId\",\n    description: \"license id\",\n    defaultMessage: \"License ID\"\n  },\n  hospitalError: {\n    id: \"app.care-coach.add-patient.hospitalError\",\n    description: \"hospital error text\",\n    defaultMessage: \"Please enter a Hospital\"\n  },\n  relativeNumberError: {\n    id: \"app.edit-profile.relativeNumber error\",\n    description: \"relatvie number equal to personal number error\",\n    defaultMessage: \"Relative number and Personal Number cannot be same\"\n  },\n  emergencyNumberError: {\n    id: \"app.edit-profile.emergencyNumber error\",\n    description: \"emergency number equal to personal number error\",\n    defaultMessage: \"Emergency number and Personal Number cannot be same\"\n  }\n});\n\nexport default messages;\n","import React from \"react\";\nimport \"../style.less\";\nimport { Form, Select, Modal, Input } from \"antd\";\nimport { doRequest } from \"../../../../Helper/network\";\nimport { Auth } from \"../../../../Helper/urls\";\nimport { REQUEST_TYPE } from \"../../../../constant\";\nimport { injectIntl } from \"react-intl\";\nimport { MobileInput } from \"../../MobileInput\";\nimport CountryCity from \"../../../../Containers/countryCity\";\nimport messages from \"./message\";\nimport CommonMessage from \"../../CommonMessage\";\nimport CommonError from \"../../CommonError\";\n\nimport dropDown from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport searchIcon from \"../../../../Assets/images/ico-search.svg\";\nimport moment from \"moment\";\nconst dropdownIcon = <img alt=\"\" src={dropDown} />;\nconst SearchIcon = <img alt=\"\" src={searchIcon} />;\n\nconst DOCTOR_EMAIL = \"email\";\nconst DOCTOR_PROGRAM = \"programId\";\nconst DOCTOR_NAME = \"name\";\nconst DOCTOR_PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst DOCTOR_COUNTRY_CODE = \"contactNo.countryCode\";\nconst DOCTOR_COUNTRY = \"country\";\nconst DOCTOR_CITY = \"city\";\nconst DOCTOR_SPECIALITY = \"speciality\";\nconst DOCTOR_LICENSE = \"licenseNumber\";\nconst HOSPITAL = \"hospital\";\n\n//don't remove mobile no from here\n//to remove something from required, change the rule props of that field\nconst ERROR_PRONE_FIELDS = [\n  DOCTOR_EMAIL,\n  DOCTOR_PROGRAM,\n  DOCTOR_COUNTRY,\n  DOCTOR_CITY,\n  HOSPITAL,\n  DOCTOR_COUNTRY_CODE,\n  DOCTOR_PHONE_NUMBER\n];\n\nconst { Option } = Select;\nlet errMessage = {};\n\nclass AddDoctor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: true, is_link_send: false, is_error: false };\n    this.handleOk = this.handleOk.bind(this);\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    const { fetchProgramsData } = this.props;\n    fetchProgramsData();\n    const { validateFields } = this.props.form;\n    validateFields();\n  }\n\n  componentWillUnmount() {\n    const { resetFields } = this.props.form;\n    resetFields();\n  }\n\n  formatMessage = data => {\n    this.props.intl.formatMessage(data);\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  onChangeCity = (countryId, cityId) => {\n    const { resetFields, validateFields } = this.props.form;\n    resetFields(HOSPITAL);\n    validateFields();\n    this.props.fetchHospitals(countryId, cityId);\n  };\n\n  onChangeCountry = countryId => {\n    const { resetFields, validateFields } = this.props.form;\n    resetFields(HOSPITAL);\n    validateFields();\n  };\n\n  getHospitalsData = () => {\n    const {\n      form: { getFieldValue },\n      hospitals: hospitalsData\n    } = this.props;\n    let options = [];\n    for (const key in hospitalsData) {\n      const hospital = hospitalsData[key];\n      const countryId = getFieldValue(DOCTOR_COUNTRY);\n      const cityId = getFieldValue(DOCTOR_CITY);\n      if (hospital.cityId === cityId && hospital.countryId === countryId) {\n        options.push(\n          <Option key={`${hospital.id}`} value={hospital.id}>\n            {hospital.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  handleOk() {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let formData = {};\n        formData = values;\n        formData.userCategory = \"doctor\";\n        if (formData.city === \"\") {\n          formData.city = undefined;\n        }\n        const {\n          // form: { resetFields },\n          handleCancel\n        } = this.props;\n\n        // eslint-disable-next-line no-unused-vars\n        const response = doRequest({\n          method: REQUEST_TYPE.POST,\n          data: formData,\n          url: Auth.addDoctorURL()\n        }).then(response => {\n          errMessage = response.payload.error\n            ? response.payload.error.message\n            : \"\";\n          !response.status\n            ? this.setState({ visible: true, is_error: true })\n            : this.setState({ visible: false, is_link_send: true }, () => {\n                setTimeout(async () => {\n                  //await resetFields();\n                  await handleCancel();\n                }, 3000);\n              });\n        });\n      } else if (err) {\n        this.setState({\n          visible: true,\n          is_error: true\n        });\n      }\n    });\n  }\n\n  getProgramsData = () => {\n    const programsData = this.props.programs;\n    let options = [];\n\n    for (const key in programsData) {\n      const program = programsData[key];\n      if (program._id !== undefined && moment().isBefore(program.expiresOn)) {\n        options.push(\n          <Option key={`${program._id}`} value={program._id}>\n            {program.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n  handleCancel = () => {\n    const { close } = this.props;\n    close();\n  };\n\n  clearMsg = e => {\n    //e.preventDefault();\n    this.setState({\n      is_link_send: false,\n      is_error: false\n    });\n  };\n\n  isError = () => {\n    const { getFieldError } = this.props.form;\n    for (const k in ERROR_PRONE_FIELDS) {\n      const key = ERROR_PRONE_FIELDS[k];\n      if (getFieldError(key)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isText = (rule, value, callback) => {\n    if (value && value.length > 0 && value.match(\"^[A-Za-z ]+$\") === null) {\n      callback(\"Enter valid name\");\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage },\n      show: visible\n    } = this.props;\n\n    if (!visible) {\n      return null;\n    }\n\n    const {\n      getFieldDecorator,\n      isFieldTouched,\n      getFieldError\n    } = this.props.form;\n    const { isError } = this;\n    let fieldError = {};\n\n    ERROR_PRONE_FIELDS.forEach(field => {\n      fieldError[field] = isFieldTouched(field) && getFieldError(field);\n    });\n\n    // const { work = {} } = this.props.user_data;\n    // const { speciality, licenseNumber } = work;\n    const specialities = [\n      <Option key={1} value=\"Neurologist\">\n        Neurologist\n      </Option>,\n      <Option key={2} value=\"Heart Surgeon\">\n        Heart Surgeon\n      </Option>,\n      <Option key={3} value=\"Orthopaedic\">\n        Orthopaedic\n      </Option>\n    ];\n\n    return (\n      <div>\n        <div>\n          {this.state.is_link_send && (\n            <CommonMessage\n              msg={formatMessage(messages.newDoctorSuccess)}\n              className={\"carecoach-new-user-success-message top60\"}\n              close={this.clearMsg}\n            />\n          )}\n        </div>\n\n        <Modal\n          title={formatMessage(messages.newDoctor)}\n          visible={visible}\n          onOk={this.handleOk}\n          okButtonProps={{\n            disabled: isError()\n          }}\n          onCancel={this.handleCancel}\n          okText=\"Send Invite\"\n          wrapClassName={\"global-modal\"}\n          destroyOnClose={true}\n        >\n          <div className=\"end-padding \">\n            <Form className=\"full-width\">\n              <Form.Item\n                validateStatus={fieldError[DOCTOR_EMAIL] ? \"error\" : \"\"}\n                help={fieldError[DOCTOR_EMAIL] || \"\"}\n                label={formatMessage(messages.doctorEmail)}\n              >\n                {getFieldDecorator(DOCTOR_EMAIL, {\n                  rules: [\n                    {\n                      type: \"email\",\n                      required: true,\n                      message: formatMessage(messages.incorrectEmail)\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n\n              <Form.Item\n                validateStatus={fieldError[DOCTOR_PROGRAM] ? \"error\" : \"\"}\n                help={fieldError[DOCTOR_PROGRAM] || \"\"}\n                label={formatMessage(messages.program)}\n              >\n                {getFieldDecorator(DOCTOR_PROGRAM, {\n                  rules: [\n                    {\n                      required: true,\n                      message: formatMessage(messages.programError)\n                    }\n                  ]\n                })(\n                  <Select\n                    className={\"full-width iqvia-style-select fontsize14\"}\n                    suffixIcon={dropdownIcon}\n                    showSearch\n                    autoComplete=\"off\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                    //onChange={this.onChangeCity}\n                    getPopupContainer={this.getParentNode}\n                  >\n                    {this.getProgramsData()}\n                  </Select>\n                )}\n              </Form.Item>\n              <div className=\"optional\">Optional</div>\n              <Form.Item label={formatMessage(messages.fullName)}>\n                {getFieldDecorator(DOCTOR_NAME, {\n                  rules: [\n                    {\n                      validator: this.isText\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <div className=\"mobile-gender\">\n                {formatMessage(messages.mobile)}\n              </div>\n              <MobileInput\n                fieldError={fieldError}\n                phoneField={DOCTOR_PHONE_NUMBER}\n                countryCodeField={DOCTOR_COUNTRY_CODE}\n                {...this.props}\n              />\n              <div />\n\n              <div className=\"mt20 flex row align-items-center\">\n                <div className=\"full-width \">\n                  <Form.Item label={formatMessage(messages.licenseId)}>\n                    {getFieldDecorator(DOCTOR_LICENSE)(<Input />)}\n                  </Form.Item>\n                </div>\n              </div>\n\n              <div className=\"mt20\">\n                <Form.Item label={formatMessage(messages.speciality)}>\n                  {getFieldDecorator(DOCTOR_SPECIALITY, {})(\n                    <Select\n                      className={\"full-width iqvia-style-select fontsize14\"}\n                      suffixIcon={dropdownIcon}\n                      placeholder=\"\"\n                      getPopupContainer={this.getParentNode}\n                    >\n                      {specialities}\n                    </Select>\n                  )}\n                </Form.Item>\n              </div>\n\n              <CountryCity\n                form={this.props.form}\n                getFieldDecorator={getFieldDecorator}\n                cityLabel={formatMessage(messages.city)}\n                countryLabel={formatMessage(messages.country)}\n                cityField={DOCTOR_CITY}\n                countryField={DOCTOR_COUNTRY}\n                fieldError={fieldError}\n                cityRules={[\n                  {\n                    required: false,\n                    message: formatMessage(messages.cityRule)\n                  }\n                ]}\n                countryRules={[\n                  {\n                    required: false,\n                    message: formatMessage(messages.countryRule)\n                  }\n                ]}\n                onChangeCountry={this.onChangeCountry}\n                onChangeCity={this.onChangeCity}\n              />\n\n              <div className=\"end\">\n                <Form.Item\n                  label=\"Hospital(s) doctor work at\"\n                  help={fieldError[HOSPITAL] || \"\"}\n                  validateStatus={fieldError[HOSPITAL] ? \"error\" : \"\"}\n                >\n                  {getFieldDecorator(HOSPITAL, {})(\n                    <Select\n                      className={\"full-width iqvia-style-select fontsize14\"}\n                      suffixIcon={SearchIcon}\n                      showSearch\n                      autoComplete=\"off\"\n                      mode=\"multiple\"\n                      optionFilterProp=\"children\"\n                      filterOption={(input, option) =>\n                        option.props.children\n                          .toLowerCase()\n                          .indexOf(input.toLowerCase()) >= 0\n                      }\n                      getPopupContainer={this.getParentNode}\n                    >\n                      {this.getHospitalsData()}\n                    </Select>\n                  )}\n                </Form.Item>\n              </div>\n            </Form>\n            <div>\n              {this.state.is_error && (\n                <CommonError\n                  msg={errMessage}\n                  className={\"carecoach-new-user-failure-message\"}\n                  close={this.clearMsg}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default injectIntl(Form.create()(AddDoctor));\n","import { connect } from \"react-redux\";\nimport AddDoctor from \"../../Components/Modal/addDoctor/addDoctor\";\nimport { fetchProgramsData } from \"../../../modules/program\";\nimport { fetchHospitals } from \"../../../modules/hospital\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { close } from \"../../../modules/modals\";\n\nconst mapStateToProps = state => {\n  const {\n    programs,\n    hospitals,\n    modal: { show, modalType }\n  } = state;\n  return {\n    show: show && modalType === GLOBAL_MODALS.DOCTOR_MODAL,\n    programs,\n    hospitals\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchHospitals: (countryId, cityId) =>\n      dispatch(fetchHospitals(countryId, cityId)),\n    close: () => dispatch(close())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDoctor);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  adverseEvent: {\n    id: \"app.modal.adverseEvent\",\n    description: \"\",\n    defaultMessage: \"Report Adverse Event\"\n  },\n\n  cancel: {\n    id: \"app.modal.adverseEvent.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel\"\n  },\n\n  tagAPatient: {\n    id: \"app.modal.adverseEvent.tagAPatient\",\n    description: \"\",\n    defaultMessage: \"Tag a patient\"\n  },\n  whatHappen: {\n    id: \"app.modal.adverseEvent.whatHappen\",\n    description: \"\",\n    defaultMessage: \"Describe what happened\"\n  },\n\n  on: {\n    id: \"app.modal.adverseEvent.on\",\n    description: \"\",\n    defaultMessage: \"On\"\n  },\n  at: {\n    id: \"app.modal.adverseEvent.at\",\n    description: \"\",\n    defaultMessage: \"At\"\n  },\n\n  severity: {\n    id: \"app.modal.adverseEvent.severity\",\n    description: \"\",\n    defaultMessage: \"Severity\"\n  },\n\n  mild: {\n    id: \"app.modal.adverseEvent.mild\",\n    description: \"\",\n    defaultMessage: \"Mild\"\n  },\n\n  moderate: {\n    id: \"app.modal.adverseEvent.moderate\",\n    description: \"\",\n    defaultMessage: \"Moderate\"\n  },\n\n  severe: {\n    id: \"app.modal.adverseEvent.severe\",\n    description: \"\",\n    defaultMessage: \"Severe\"\n  },\n\n  verySevere: {\n    id: \"app.modal.adverseEvent.verySevere\",\n    description: \"\",\n    defaultMessage: \"Very Severe\"\n  },\n\n  fatal: {\n    id: \"app.modal.adverseEvent.fatal\",\n    description: \"\",\n    defaultMessage: \"Fatal\"\n  },\n  upload: {\n    id: \"app.modal.adverseEvent.upload\",\n    description: \"\",\n    defaultMessage: \"Upload photos or files\"\n  },\n  report: {\n    id: \"app.modal.adverseEvent.report\",\n    description: \"\",\n    defaultMessage: \"Report\"\n  },\n  medicationDetails: {\n    id: \"app.modal.adverseEvent.medicationDetails\",\n    description: \"\",\n    defaultMessage: \"Medication Details\"\n  },\n  lastMedicatedOn: {\n    id: \"app.modal.adverseEvent.lastMedicatedOn\",\n    description: \"\",\n    defaultMessage: \"Last medicated on\"\n  },\n  daysOfMedicationLeftTill: {\n    id: \"app.modal.adverseEvent.daysOfMedicationLeftTill\",\n    description: \"\",\n    defaultMessage: \"days of medication left till\"\n  }\n});\n","import React, { Component, Fragment } from \"react\";\nimport { Form, Select, Input, DatePicker, TimePicker, Radio } from \"antd\";\nimport moment from \"moment\";\nimport { injectIntl } from \"react-intl\";\nimport { doRequest } from \"../../../../Helper/network\";\nimport { User } from \"../../../../Helper/urls\";\nimport { USER_CATEGORY, SEVERITY } from \"../../../../constant\";\nimport messages from \"./message\";\nimport calendar from \"../../../../Assets/images/button-select-date.svg\";\nimport dropDownIcon from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport userPlaceHolder from \"../../../../Assets/images/ico-placeholder-userdp.svg\";\n\nconst { Item: FormItem } = Form;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst { Group: RadioGroup, Button: RadioButton } = Radio;\nconst DropDownIcon = <img src={dropDownIcon} alt=\"d\" className=\"w24 h24\" />;\n\nconst PATIENT = \"patient\";\nconst SEVERITY_FIELD = \"severity\";\nconst ON = \"on\";\nconst AT = \"at\";\nconst DESCRIPTION = \"description\";\n\nclass AdverseEventForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: [],\n      category: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    const { auth } = this.props;\n    let userCategory;\n    if (auth) {\n      const {\n        basicInfo: { category }\n      } = auth;\n      userCategory = category;\n      this.setState({ category: userCategory });\n    }\n    this.props.form.validateFields();\n    if (userCategory !== PATIENT) {\n      doRequest({\n        url: User.getRelatedMembersURL()\n      })\n        .then(res => {\n          const { payload: { data: { members = {} } = {} } = {} } = res;\n          const patients = members.filter(value => {\n            const { basicInfo: { category } = {} } = value;\n            return category === USER_CATEGORY.PATIENT;\n          });\n          this.setState({ patients: patients });\n        })\n        .catch(err => {});\n    }\n  }\n\n  getParentNode = t => t.parentNode;\n\n  getSeverityOption = () => {\n    const { formatMessage } = this;\n    const options = [\n      { label: formatMessage(messages.mild), value: SEVERITY.MILD },\n      { label: formatMessage(messages.moderate), value: SEVERITY.MODERATE },\n      { label: formatMessage(messages.severe), value: SEVERITY.SEVERE },\n      {\n        label: formatMessage(messages.verySevere),\n        value: SEVERITY.VERY_SEVERE\n      },\n      { label: formatMessage(messages.fatal), value: SEVERITY.FATAL }\n    ];\n    return options.map(option => {\n      return (\n        <RadioButton\n          key={option.value}\n          value={option.value}\n          className=\"full-width\"\n        >\n          {option.label}\n        </RadioButton>\n      );\n    });\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidUpdate() {}\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // const { handleSubmit } = this.props;\n    // const { selectedDays } = this.state;\n\n    // this.props.form.validateFields((err, values) => {\n    //\n    //   if (!err) {\n    //     handleSubmit({ ...values, [REPEAT_PARAM_WEEKLY]: selectedDays });\n    //   }\n    // });\n  };\n\n  getPatientOption = () => {\n    const { patients = [] } = this.state;\n\n    return patients.map(data => {\n      const {\n        basicInfo: { _id, name, profilePicLink = userPlaceHolder },\n        personalInfo: { dob, gender }\n      } = data;\n      const years = dob && moment().diff(dob, \"years\", false);\n      return (\n        <Option key={_id} value={_id} name={name}>\n          <div className=\"flex justify-content-start align-items-center iqvia-user-snippet\">\n            <img alt={\"user\"} src={profilePicLink} />\n            <div className=\"deep-sea-blue fontsize12 mr8\">{`${name}${\n              years ? ` (${years} ${gender})` : \"\"\n            }`}</div>\n          </div>\n        </Option>\n      );\n    });\n  };\n\n  openCalendar = e => {\n    e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[0]\n      .click();\n  };\n\n  getLatestMedication = () => {\n    const {\n      medications = {},\n      products,\n      form: { getFieldValue },\n      intl: { formatMessage }\n    } = this.props;\n    const {\n      auth: {\n        basicInfo: { _id: loggedInUser }\n      },\n      userId: creatingUser\n    } = this.props;\n    const userId =\n      loggedInUser === creatingUser ? loggedInUser : getFieldValue(PATIENT);\n    if (userId) {\n      const medication = medications[userId];\n      if (medication) {\n        const { medicine = {} } = medication;\n        const allKeys = Object.keys(medicine) || [];\n        const medicines = allKeys.filter(value => value !== \"updatedAt\");\n        const { updatedAt } = medicine;\n        const updatedOnDate = moment(updatedAt);\n        return (\n          <Fragment>\n            <div className=\"flex align-items-center mb12\">\n              <div className=\"fontsize14 dark bold\">\n                {formatMessage(messages.medicationDetails)}\n              </div>\n              {allKeys.length > 0 ? (\n                <div className=\"fontsize12 label-color ml8\">\n                  {`${formatMessage(\n                    messages.lastMedicatedOn\n                  )} ${updatedOnDate.format(\"DD/MM/YYYY hh:mm A\")}`}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            {medicines.map((value, index) => {\n              const { product_id, often, upto } = medicine[value];\n              const product_detail = products[product_id] || {};\n              const medicatedTill = moment(upto).format(\"L\");\n              const daysLeftForMedication =\n                moment().diff(upto, \"days\", false) * -1;\n              return (\n                <Fragment key={product_id}>\n                  <div className=\"dark fontsize14\">{product_detail.name}</div>\n                  <div className=\"mb20 dark fontsize14\">\n                    {`${often}, ${\n                      daysLeftForMedication > 0 ? daysLeftForMedication : 0\n                    } ${formatMessage(\n                      messages.daysOfMedicationLeftTill\n                    )} ${medicatedTill}`}\n                  </div>\n                </Fragment>\n              );\n            })}\n          </Fragment>\n        );\n      }\n    }\n    return null;\n  };\n\n  onChangePatient = value => {\n    const { fetchUserRecentMedication } = this.props;\n    fetchUserRecentMedication(value);\n  };\n\n  disabledDate = current => {\n    // Can not select days after today\n    return current && current >= moment();\n  };\n\n  validateTime = async (rule, current, cb) => {\n    if (current > moment()) {\n      cb(\"reporting event for future is not allowed\");\n    } else {\n      cb();\n    }\n  };\n\n  render() {\n    const { form, userId } = this.props;\n    const { getFieldDecorator, getFieldError, isFieldTouched } = form;\n    const {\n      formatMessage,\n      handleSubmit,\n      getSeverityOption,\n      getPatientOption,\n      openCalendar,\n      getLatestMedication,\n      onChangePatient,\n      validateTime\n    } = this;\n\n    const { category } = this.state;\n\n    const patientError = isFieldTouched(PATIENT) && getFieldError(PATIENT);\n    const descriptionError =\n      isFieldTouched(DESCRIPTION) && getFieldError(DESCRIPTION);\n\n    const timeError = isFieldTouched(AT) && getFieldError(AT);\n\n    return (\n      <Form className=\"event-form\" onSubmit={handleSubmit}>\n        {category !== PATIENT && (\n          <div ref={this.setParticipantRef} id={\"asasa\"}>\n            <FormItem\n              label={formatMessage(messages.tagAPatient)}\n              validateStatus={patientError ? \"error\" : \"\"}\n              help={patientError || \"\"}\n            >\n              {getFieldDecorator(PATIENT, {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Enter a patient\"\n                  }\n                ],\n                initialValue: userId\n              })(\n                <Select\n                  className=\"user-select\"\n                  onChange={onChangePatient}\n                  disabled={userId ? true : false}\n                  placeholder={formatMessage(messages.tagAPatient)}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"name\"\n                  suffixIcon={DropDownIcon}\n                  filterOption={(input, option) =>\n                    option.props.name\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  getPopupContainer={this.getParentNode}\n                >\n                  {getPatientOption()}\n                </Select>\n              )}\n            </FormItem>\n          </div>\n        )}\n\n        <FormItem\n          validateStatus={descriptionError ? \"error\" : \"\"}\n          help={descriptionError || \"\"}\n          label={formatMessage(messages.whatHappen)}\n        >\n          {getFieldDecorator(DESCRIPTION, {\n            rules: [\n              {\n                required: true,\n                message: \"Enter a description\"\n              }\n            ]\n          })(\n            <TextArea\n              //placeholder={formatMessage(messages.whatHappen)}\n              autosize={{ minRows: 1, maxRows: 6 }}\n            />\n          )}\n        </FormItem>\n\n        <div className=\"flex justify-content-space-between mb4\">\n          <div className=\"flex-1 flex row align-items-end iqvia-date-picker\">\n            <div className=\"full-width \" ref={this.setDatePickerRef}>\n              <FormItem\n                className=\"flex-1 date-picker\"\n                label={formatMessage(messages.on)}\n              >\n                {getFieldDecorator(ON, {\n                  rules: [],\n                  initialValue: moment()\n                })(\n                  <DatePicker\n                    format=\"DD/MM/YYYY, ddd\"\n                    disabledDate={this.disabledDate}\n                    showToday={false}\n                    className=\"full-width\"\n                    suffixIcon={null}\n                    getCalendarContainer={this.getParentNode}\n                  />\n                )}\n\n                <img\n                  alt=\"\"\n                  className=\"calendar\"\n                  onClick={openCalendar}\n                  src={calendar}\n                />\n              </FormItem>\n            </div>\n          </div>\n          <div ref={this.setTimePickerRef}>\n            <FormItem\n              label={formatMessage(messages.at)}\n              validateStatus={timeError ? \"error\" : \"\"}\n              help={timeError || \"\"}\n            >\n              {getFieldDecorator(AT, {\n                rules: [\n                  {\n                    validator: validateTime\n                  }\n                ],\n                initialValue: moment()\n              })(\n                <TimePicker\n                  use12Hours\n                  format=\"h:mm A\"\n                  style={{ width: \"100%\" }}\n                  suffixIcon={null}\n                  alowClear={false}\n                  clearIcon={null}\n                  getPopupContainer={this.getParentNode}\n                  // onChange={checkTime}\n                />\n              )}\n            </FormItem>\n          </div>\n        </div>\n\n        <FormItem label={formatMessage(messages.severity)}>\n          {getFieldDecorator(SEVERITY_FIELD, {\n            rules: [],\n            initialValue: SEVERITY.MILD\n          })(\n            <RadioGroup className=\"radio-group-tab \" buttonStyle=\"solid\">\n              {getSeverityOption()}\n            </RadioGroup>\n          )}\n        </FormItem>\n        <div>{getLatestMedication()}</div>\n      </Form>\n    );\n  }\n}\n\nexport default injectIntl(AdverseEventForm);\n","import React from \"react\";\n\nexport default ({ type, className, ...props }) => {\n  if (type.startsWith(\"image\")) {\n    return <img {...props} alt=\"\" className={className} />;\n  } else if (type.startsWith(\"video\")) {\n    return (\n      <video\n        controls\n        className={`${className} object-fill`}\n        preload=\"auto\"\n        {...props}\n      />\n    );\n  } else {\n    return (\n      <div\n        className={`${className} white fontsize22 medium other-docs flex align-items-center justify-content-center`}\n      >\n        PDF\n      </div>\n    );\n  }\n};\n","import React from \"react\";\nimport DocDisplayer from \"./previewDoc\";\nimport remove from \"../../../../Assets/images/ico-doc-remove.svg\";\nimport \"./style.less\";\n\nexport default function preview({ media, onRemove }) {\n  const renderedImages = [];\n  media.forEach((medium, index) => {\n    if (medium.mediaType !== \"WebLink\") {\n      renderedImages.push(\n        <div className=\"mr12 mb24\" key={index}>\n          <img\n            src={remove}\n            alt=\"\"\n            onClick={() => onRemove(medium.index)}\n            className=\"delete-attachment-badge clickable\"\n          />\n          <div className=\"case-image-background\">\n            <DocDisplayer\n              type={medium.mediaType}\n              className=\"caseImage\"\n              src={medium.url}\n            />\n          </div>\n        </div>\n      );\n    }\n  });\n  return <div className=\"mb5 mt10 flex flex-wrap\">{renderedImages}</div>;\n}\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, Upload } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"./message\";\nimport AdverseEventForm from \"./form\";\nimport { hasErrors } from \"../../../../Helper/validation\";\nimport { REQUEST_TYPE } from \"../../../../constant\";\nimport { Common } from \"../../../../Helper/urls\";\nimport { doRequest } from \"../../../../Helper/network\";\nimport config from \"../../../../config\";\nimport DocPreview from \"../../Common/docPreview\";\nimport CommonError from \"../../CommonError\";\n\nclass AdverseEvent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabledOk: true,\n      docs: [],\n      fileList: [],\n      errorMsg: \"\"\n    };\n    this.FormWrapper = Form.create({ onFieldsChange: this.onFormChanges })(\n      AdverseEventForm\n    );\n  }\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { close } = this.props;\n    this.setState(\n      { disabledOk: true, docs: [], fileList: [], errorMsg: \"\" },\n      close\n    );\n  };\n\n  handleReport = () => {\n    const {\n      report,\n      reFetchAdverseEvent,\n      medications = {},\n      authUser\n    } = this.props;\n    const { formRef = {} } = this;\n    const { docs } = this.state;\n    const {\n      props: {\n        form: { validateFields }\n      }\n    } = formRef;\n\n    let userId;\n    if (authUser) {\n      const {\n        basicInfo: { _id }\n      } = authUser;\n      userId = _id;\n    }\n    validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      let { patient } = values;\n      if (!patient) {\n        values.patient = userId;\n        patient = userId;\n      }\n\n      const medicationData = medications[patient] || {};\n      const { medicine = [] } = medicationData;\n      report({ ...values, docs, medications: [medicine] }).then(res => {\n        reFetchAdverseEvent(patient);\n        this.setState({\n          docs: [],\n          disabledOk: true,\n          fileList: [],\n          errorMsg: \"\"\n        });\n      });\n    });\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  onStart = file => {\n    this.setState({ filename: file.name, progress: 0 });\n  };\n\n  onSuccess = (ret, file) => {};\n\n  onError = err => {};\n\n  onProgress = ({ percent }, file) => {\n    this.setState({ progress: parseInt(percent) });\n  };\n  onAbort = args => {};\n\n  onUploadComplete = ({ files = [] }) => {\n    //\n    const { docs } = this.state;\n    this.setState({ docs: [...docs, ...files] }, () => {\n      // eslint-disable-next-line no-unused-vars\n      const { docs, fileList } = this.state;\n      // (\n      //   \"file count\",\n      //   docs,\n      //   fileList,\n      //   docs.length === fileList.length //true => i.e all files uploaded\n      // );\n    });\n  };\n\n  customRequest = ({ file, filename, onError, onProgress, onSuccess }) => {\n    const { onUploadComplete } = this;\n    const onUploadProgress = ({ total, loaded }) => {\n      onProgress(\n        { percent: Math.round((loaded / total) * 100).toFixed(2) },\n        file\n      );\n    };\n\n    let data = new FormData();\n    data.append(\"files\", file, file.name);\n\n    doRequest({\n      onUploadProgress: onUploadProgress,\n      method: REQUEST_TYPE.POST,\n      data: data,\n      url: Common.getUploadURL()\n    }).then(response => {\n      onUploadComplete(response.payload.data);\n    });\n\n    return {\n      abort() {}\n    };\n  };\n\n  removeAttachment = pos => {\n    const { docs, fileList } = this.state;\n    const newDocs = docs.filter((doc, index) => {\n      return index !== pos;\n    });\n    const newFileList = fileList.filter((file, index) => {\n      return index !== pos;\n    });\n\n    this.setState({ docs: newDocs, fileList: newFileList });\n    // const fileList\n  };\n\n  handleChange = info => {\n    const fileList = info.fileList;\n    this.setState({ fileList: fileList });\n  };\n\n  beforeUpload = file => {\n    const isValid = file.type.startsWith(\"image\") || file.type.endsWith(\"pdf\");\n    if (!isValid) {\n      this.setState({ errorMsg: \"please upload a valid image or pdf file!\" });\n    }\n    return isValid;\n  };\n\n  footer = () => {\n    const { requesting } = this.props;\n    const {\n      formatMessage,\n      handleChange,\n      handleCancel,\n      handleReport,\n      customRequest,\n      beforeUpload\n    } = this;\n    const { disabledOk, fileList } = this.state;\n\n    return (\n      <div className=\"flex align-items-center justify-content-space-between h72px mr24\">\n        <Upload\n          onChange={handleChange}\n          customRequest={customRequest}\n          multiple={true}\n          fileList={fileList}\n          showUploadList={false}\n          accept={\"image/*,.pdf\"}\n          beforeUpload={beforeUpload}\n        >\n          <Button className=\"iqvia-btn upload ml24\">\n            {formatMessage(messages.upload)}\n          </Button>\n        </Upload>\n\n        <div>\n          <Button className=\"iqvia-btn cancel mr8\" onClick={handleCancel}>\n            {formatMessage(messages.cancel)}\n          </Button>\n          <Button\n            className=\"iqvia-btn\"\n            disabled={disabledOk}\n            type=\"primary\"\n            loading={requesting}\n            onClick={handleReport}\n          >\n            {formatMessage(messages.report)}\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  setFormRef = formRef => {\n    this.formRef = formRef;\n    this.setState({ formRef: true });\n  };\n\n  onFormChanges = (props, allvalues) => {\n    const isError = hasErrors(props.form.getFieldsError());\n    const { disabledOk } = this.state;\n    if (disabledOk !== isError && props.form.isFieldsTouched()) {\n      this.setState({ disabledOk: isError });\n    }\n  };\n\n  docslist = () => {\n    const { docs, fileList } = this.state;\n    return docs.map((value, index) => {\n      const file = fileList[index];\n      const { name, type, uid } = file;\n      return {\n        name,\n        description: name,\n        mediaType: type,\n        index,\n        id: value,\n        uid: uid,\n        url: `${config.BASE_DOC_URL}${value}`\n      };\n    });\n  };\n\n  resetMsg = () => {\n    this.setState({ errorMsg: \"\" });\n  };\n\n  render() {\n    const {\n      show: visible,\n      isError,\n      intl: { formatMessage },\n      userId,\n      medications,\n      products,\n      fetchUserRecentMedication,\n      authUser\n    } = this.props;\n    //\n\n    const {\n      handleCancel,\n      docslist,\n      footer,\n      setFormRef,\n      FormWrapper,\n      removeAttachment,\n      resetMsg\n    } = this;\n\n    const { errorMsg } = this.state;\n\n    const modalProps = {\n      visible: visible || isError,\n      title: formatMessage(messages.adverseEvent),\n      okButtonProps: {},\n      onCancel: handleCancel,\n      wrapClassName: \"global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\", overflowY: \"scroll\" },\n      width: \"620px\",\n      footer: footer()\n    };\n\n    //\n    return (\n      <Modal {...modalProps}>\n        {visible && (\n          <div className=\"pl48 pr24\">\n            <FormWrapper\n              wrappedComponentRef={setFormRef}\n              userId={userId}\n              fetchUserRecentMedication={fetchUserRecentMedication}\n              medications={medications}\n              products={products}\n              show={visible}\n              auth={authUser}\n            />\n            <div className={\"doc-preview\"}>\n              <DocPreview media={docslist()} onRemove={removeAttachment} />\n            </div>\n          </div>\n        )}\n        {errorMsg.length > 0 && (\n          <CommonError\n            msg={errorMsg}\n            close={resetMsg}\n            className=\"adverse-event-error\"\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(AdverseEvent);\n","import { connect } from \"react-redux\";\nimport AdverseEvent from \"../../Components/Modal/adverseEvent\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { reportAdverseEvent } from \"../../../modules/modals\";\nimport { close } from \"../../../modules/modals\";\nimport { fetchAdverseEvent } from \"../../../modules/events\";\nimport { getRecentMedication } from \"../../../modules/medication\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\n\nconst mapStateToProps = state => {\n  const {\n    modal: { show, modalType, data: userId, requesting },\n    medications = {},\n    products = {},\n    auth = {},\n    users\n  } = state;\n  const getUser = makeGetUserById();\n  return {\n    show: show && modalType === GLOBAL_MODALS.ADVERSE_EVENTS,\n    userId: userId,\n    requesting: requesting,\n    medications,\n    products,\n    authUser: getUser(users, auth.authenticated_user)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    report: data => dispatch(reportAdverseEvent(data)),\n    reFetchAdverseEvent: userId => dispatch(fetchAdverseEvent(userId)),\n    close: () => dispatch(close()),\n    fetchUserRecentMedication: userId => dispatch(getRecentMedication(userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdverseEvent);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  cancel: {\n    id: \"app.modal.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel\"\n  },\n  changeButton: {\n    id: \"app.modal.changeButton\",\n    description: \"\",\n    defaultMessage: \"Change\"\n  }\n});\n\nexport default messages;\n","import React, { Component, Fragment } from \"react\";\nimport { Modal, Button, Form, Input } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport \"../style.less\";\nimport messages from \"./message\";\nimport hide from \"../../../../Assets/images/icon-flat-hide.svg\";\nimport show from \"../../../../Assets/images/icon-flat-show.svg\";\nimport icoError from \"../../../../Assets/images/ico-err.svg\";\nimport { hasErrors } from \"../../../../Helper/validation\";\n\nconst FormItem = Form.Item;\n\nconst CONFIRM_PASSWORD = \"confirmPassword\";\nconst CURRENT_PASSWORD = \"currentPassword\";\nconst NEW_PASSWORD = \"newPassword\";\nconst ERROR_PRONES_FIELD = [CONFIRM_PASSWORD, CURRENT_PASSWORD, NEW_PASSWORD];\n\nclass ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      currPass: null,\n      newPass: null,\n      confirmPass: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  componentDidUpdate(prevprops, prevstate) {\n    if (prevprops.show !== this.props.show) {\n      this.props.form.validateFields();\n    }\n  }\n\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { close } = this.props;\n    close();\n  };\n\n  //   handleSubmit = e => {\n  //     e.preventDefault();\n\n  //     this.props.form.validateFields((err, values) => {\n  //       //\n  //       if (!err) {\n\n  //       }\n  //     });\n\n  //     close();\n  //   };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  footer = (currPass, newPass, confirmPass) => {\n    const { formatMessage, handleCancel } = this;\n    const { getFieldsError } = this.props.form;\n\n    return (\n      <Fragment>\n        <div\n          className={`flex align-items-center justify-content-end h72px mr24 ml24`}\n        >\n          <div className=\"flex align-items-center justify-content-end\">\n            <Button className=\"iqvia-btn cancel mr8\" onClick={handleCancel}>\n              {formatMessage(messages.cancel)}\n            </Button>\n            <Button\n              type=\"primary iqvia-btn\"\n              htmlType=\"submit\"\n              onClick={this.handleSubmit}\n              disabled={hasErrors(getFieldsError())}\n            >\n              {formatMessage(messages.changeButton)}\n            </Button>\n          </div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  hideShowCurrentPass = e => {\n    e.preventDefault();\n    const current = this.state.showCurrentPass;\n    this.setState({ showCurrentPass: !current });\n  };\n\n  hideShowNewPass = e => {\n    e.preventDefault();\n    const current = this.state.showNewPass;\n    this.setState({ showNewPass: !current });\n  };\n\n  hideShowConfirmPass = e => {\n    e.preventDefault();\n    const current = this.state.showConfirmPass;\n    this.setState({ showConfirmPass: !current });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  handleChangePassword = async data => {\n    const { changePassword } = this.props;\n    changePassword(data);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { handleChangePassword } = this;\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        handleChangePassword(values);\n      }\n    });\n\n    // const { is_password_changed, close } = this.props;\n    //\n    // if (is_password_changed) {\n    //   close();\n    // }\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(NEW_PASSWORD)) {\n      callback(\"Please ensure if password entered is correct & matching\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([CONFIRM_PASSWORD], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const {\n      show: visible,\n      isError,\n      change_password_error,\n      is_changing_password_error = false\n    } = this.props;\n\n    if (!visible) {\n      return null;\n    }\n\n    const { handleCancel, footer } = this;\n    const title = \"ChangePassword\";\n\n    const modalProps = {\n      visible: visible || isError,\n      title: title,\n      onCancel: handleCancel,\n      wrapClassName: \"global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\" },\n      width: \"480px\",\n      footer: footer(\n        this.state.currPass,\n        this.state.newPass,\n        this.state.confirmPass\n      )\n    };\n\n    let fieldError = {};\n    ERROR_PRONES_FIELD.forEach(field => {\n      const error = isFieldTouched(field) && getFieldError(field);\n      fieldError = { ...fieldError, [field]: error };\n    });\n\n    return (\n      <Modal {...modalProps}>\n        <div className=\"pl48 pr24\">\n          <Form className=\"event-form\">\n            <FormItem\n              label=\"Current Password\"\n              validateStatus={fieldError[CURRENT_PASSWORD] ? \"error\" : \"\"}\n              help={fieldError[CURRENT_PASSWORD] || \"\"}\n            >\n              {getFieldDecorator(CURRENT_PASSWORD, {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input current password!\"\n                  }\n                ]\n              })(\n                <Input\n                  type={this.state.showCurrentPass ? \"plain\" : \"password\"}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({ currPass: e.target.value });\n                    if (this.state.showCurrentPass === undefined) {\n                      this.setState({\n                        showCurrentPass: false\n                      });\n                    }\n                  }}\n                  placeholder=\"\"\n                  suffix={\n                    <img\n                      alt=\"\"\n                      onClick={this.hideShowCurrentPass}\n                      className={`clickable ${\n                        this.state.showCurrentPass === undefined ? \"hidden\" : \"\"\n                      }`}\n                      src={this.state.showCurrentPass === true ? hide : show}\n                    />\n                  }\n                />\n              )}\n            </FormItem>\n            <FormItem\n              label=\"New Password\"\n              validateStatus={fieldError[NEW_PASSWORD] ? \"error\" : \"\"}\n              help={fieldError[NEW_PASSWORD] || \"\"}\n            >\n              {getFieldDecorator(NEW_PASSWORD, {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please enter your password!\"\n                  },\n                  {\n                    min: 6,\n                    message: \"Password must be at least 6 characters\"\n                  },\n                  {\n                    validator: this.validateToNextPassword\n                  }\n                ]\n              })(\n                <Input\n                  type={this.state.showNewPass ? \"plain\" : \"password\"}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({ newPass: e.target.value });\n                    if (this.state.showNewPass === undefined) {\n                      this.setState({\n                        showNewPass: false\n                      });\n                    }\n                  }}\n                  placeholder=\"\"\n                  suffix={\n                    <img\n                      alt=\"\"\n                      onClick={this.hideShowNewPass}\n                      className={`clickable ${\n                        this.state.showNewPass === undefined ? \"hidden\" : \"\"\n                      }`}\n                      src={this.state.showNewPass === true ? hide : show}\n                    />\n                  }\n                />\n              )}\n            </FormItem>\n            <FormItem\n              label=\"Confirm Password\"\n              validateStatus={fieldError[CONFIRM_PASSWORD] ? \"error\" : \"\"}\n              help={fieldError[CONFIRM_PASSWORD] || \"\"}\n            >\n              {getFieldDecorator(CONFIRM_PASSWORD, {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please confirm your password!\"\n                  },\n                  {\n                    validator: this.compareToFirstPassword\n                  }\n                ]\n              })(\n                <Input\n                  onBlur={this.handleConfirmBlur}\n                  type={this.state.showConfirmPass ? \"plain\" : \"password\"}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({ confirmPass: e.target.value });\n                    if (this.state.showConfirmPass === undefined) {\n                      this.setState({\n                        showConfirmPass: false\n                      });\n                    }\n                  }}\n                  placeholder=\"\"\n                  suffix={\n                    <img\n                      alt=\"\"\n                      onClick={this.hideShowConfirmPass}\n                      className={\n                        this.state.showConfirmPass === undefined ? \"hidden\" : \"\"\n                      }\n                      src={this.state.showConfirmPass === true ? hide : show}\n                    />\n                  }\n                />\n              )}\n            </FormItem>\n          </Form>\n          {is_changing_password_error && (\n            <div\n              className={\n                \"w100 absolute flex row align-items-center justify-content-start\"\n              }\n              style={{\n                backgroundColor: \"#fff8f5\",\n                bottom: \"70px\",\n                height: \"40px\",\n                marginLeft: \"-48px\"\n              }}\n            >\n              <div\n                style={{\n                  display: \"block\",\n                  width: \"13px\",\n                  marginLeft: \"24px\",\n                  textAlign: \"center\"\n                }}\n              >\n                <img\n                  alt=\"\"\n                  src={icoError}\n                  className={\"w100\"}\n                  style={{ display: \"block\" }}\n                />\n              </div>\n              <div className={\"fontsize12 medium warning-color ml8\"}>\n                {change_password_error.message}\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default Form.create()(injectIntl(ChangePassword));\n","import { connect } from \"react-redux\";\nimport ChangePassword from \"../../Components/Modal/changePassword\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { close } from \"../../../modules/modals\";\nimport { changePassword } from \"../../../modules/page/changePassword\";\n\nconst mapStateToProps = state => {\n  const {\n    modal: { show, modalType },\n    page: { changePassword }\n  } = state;\n  return {\n    show: show && modalType === GLOBAL_MODALS.CHANGE_PASSWORD,\n    is_password_changing: changePassword.is_password_changing,\n    is_password_changed: changePassword.is_password_changed,\n    is_changing_password_error: changePassword.is_changing_password_error,\n    change_password_error: changePassword.change_password_error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(close()),\n    changePassword: data => dispatch(changePassword(data))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChangePassword);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  endSurvey: {\n    id: \"app.modal.endSurvey\",\n    description: \"\",\n    defaultMessage: \"End Survey for\"\n  },\n\n  cancel: {\n    id: \"app.modal.cancel\",\n    description: \"\",\n    defaultMessage: \"Go Back\"\n  },\n\n  content: {\n    id: \"app.modal.content\",\n    description: \"\",\n    defaultMessage:\n      \"Please note that the patients who have not taken survey will not be able to complete the survey.\"\n  },\n  message: {\n    id: \"app.modal.message\",\n    description: \"\",\n    defaultMessage: \"Do you still want to End Survey? \"\n  },\n\n  alert: {\n    id: \"app.modal.alert\",\n    description: \"\",\n    defaultMessage:\n      \"This action cannot be undone. For help, contact program admin\"\n  },\n\n  endSurveyButton: {\n    id: \"app.modal.endSurveyButton\",\n    description: \"\",\n    defaultMessage: \"End Survey\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport messages from \"./message\";\nimport alertIcon from \"../../../../Assets/images/round-warning-24-px.svg\";\n\nclass EndSurvey extends Component {\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { close } = this.props;\n    close();\n  };\n\n  handleEndSurvey = async e => {\n    const { surveyId, endSurveys } = this.props;\n    try {\n      await endSurveys(surveyId);\n      window.location.href = \"/surveys/Completed\";\n    } catch (err) {}\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  footer = () => {\n    const { requesting } = this.props;\n    const { formatMessage, handleCancel, handleEndSurvey } = this;\n    return (\n      <div className=\"flex align-items-center justify-content-end h72px mr24\">\n        <Button className=\"iqvia-btn cancel mr8\" onClick={handleCancel}>\n          {formatMessage(messages.cancel)}\n        </Button>\n        <Button\n          className=\"iqvia-btn warning\"\n          type=\"primary\"\n          loading={requesting}\n          onClick={handleEndSurvey}\n        >\n          {formatMessage(messages.endSurveyButton)}\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      show: visible,\n      isError,\n      intl: { formatMessage },\n      programId,\n      programs_data = {}\n    } = this.props;\n\n    if (visible === false) {\n      return null;\n    }\n\n    let progrmaName = \"\";\n    if (!isEmpty(programs_data)) {\n      const { name } = programs_data[programId] || {};\n      progrmaName = name;\n    }\n\n    const { handleCancel, footer } = this;\n\n    const modalProps = {\n      visible: visible || isError,\n      title: `${formatMessage(messages.endSurvey)} ${progrmaName}`,\n      okButtonProps: {},\n      onCancel: handleCancel,\n      wrapClassName: \"global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\" },\n      width: \"480px\",\n      footer: footer()\n    };\n    return (\n      <Modal {...modalProps}>\n        <div className=\"black fontsize16 pl48 pr24 mt8\">\n          {formatMessage(messages.content)}\n        </div>\n        <div className=\"black fontsize16 pl48 pr24 mt16\">\n          {formatMessage(messages.message)}\n        </div>\n        <div className=\"flex align-items-center alert w100 pl24\">\n          <img alt=\"alert\" src={alertIcon} className=\"mr16\" />\n          <div className=\"steel-grey fontsize12\">\n            {formatMessage(messages.alert)}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(EndSurvey);\n","import { connect } from \"react-redux\";\nimport EndSurveyModal from \"../../Components/Modal/endSurvey\";\nimport { close } from \"../../../modules/modals\";\n\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { endSurveys } from \"../../../modules/survey\";\n\nconst mapStateToProps = state => {\n  const { modal, programs } = state;\n  return {\n    show: modal.show && modal.modalType === GLOBAL_MODALS.END_SURVEY,\n    requesting: modal.requesting,\n    surveyId: modal.entityId,\n    programId: modal.data,\n    programs_data: programs\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(close()),\n    endSurveys: surveyId => dispatch(endSurveys(surveyId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EndSurveyModal);\n","import React, { Component } from \"react\";\nimport { Modal, Button, Input } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\nimport \"../../style.less\";\nimport alertIcon from \"../../../../../Assets/images/round-warning-24-px.svg\";\nimport CalendarCard from \"../../../../Containers/Cards/appointment\";\nimport ReminderCard from \"../../../../Containers/Cards/reminder\";\nimport { REPEAT_TYPE, EVENT_TYPE } from \"../../../../../constant\";\n\nconst { TextArea } = Input;\n\nclass CancelAppointment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reasonForCancel: \"\"\n    };\n  }\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {}\n\n  handleOnTextChange = e => {\n    this.setState({ reasonForCancel: e.target.value });\n  };\n\n  handleOk = e => {\n    const {\n      eventDetails: { id: eventId, eventType },\n      cancelAppointment,\n      cancelReminder\n    } = this.props;\n    const { reasonForCancel } = this.state;\n    if (eventType === EVENT_TYPE.APPOINTMENT) {\n      const reason = { reason: reasonForCancel };\n      cancelAppointment(eventId, true, reason);\n    } else if (eventType === EVENT_TYPE.REMINDER) {\n      cancelReminder(eventId, true);\n    }\n  };\n\n  handleCancelAll = () => {\n    console.log(\"this.props ----\", this.props);\n    const {\n      eventDetails: { id: eventId, eventType },\n      cancelAppointment,\n      cancelReminder\n    } = this.props;\n    if (eventType === EVENT_TYPE.APPOINTMENT) {\n      cancelAppointment(eventId, false);\n    } else if (eventType === EVENT_TYPE.REMINDER) {\n      cancelReminder(eventId, false);\n    }\n  };\n\n  handleCancel = () => {\n    const { close } = this.props;\n    close();\n  };\n\n  footer = () => {\n    const { formatMessage, handleCancelAll, handleOk, handleCancel } = this;\n    const {\n      eventDetails: { eventType, data: { repeat } = {} } = {}\n    } = this.props;\n\n    return (\n      <div className=\"flex align-items-center justify-content-space-between\">\n        <Button className=\"iqvia-btn cancel ml8 mr8\" onClick={handleCancel}>\n          {formatMessage(messages.goback)}\n        </Button>\n\n        <div className=\"flex align-items-center justify-content-end h72px mr24\">\n          {repeat !== REPEAT_TYPE.NONE && (\n            <Button\n              className=\"iqvia-btn warning-all-button mr8\"\n              onClick={handleCancelAll}\n            >\n              {formatMessage(messages.buttonCancelAll)}\n            </Button>\n          )}\n          <Button\n            className=\"iqvia-btn warning\"\n            type=\"primary\"\n            loading={this.props.requesting}\n            onClick={handleOk}\n          >\n            {formatMessage(\n              repeat === REPEAT_TYPE.NONE\n                ? eventType === EVENT_TYPE.APPOINTMENT\n                  ? messages.cancelAppointment\n                  : messages.cancelReminder\n                : messages.buttonCancelThisOnly\n            )}\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { formatMessage, handleCancel, footer, handleOnTextChange } = this;\n    const {\n      show: visible,\n      currentUserId,\n      eventDetails: { eventType, id } = {}\n    } = this.props;\n    const modalProps = {\n      visible: visible,\n      title: `${\n        eventType === EVENT_TYPE.APPOINTMENT\n          ? formatMessage(messages.cancelAppointment)\n          : formatMessage(messages.cancelReminder)\n      }`,\n      okButtonProps: {},\n      onCancel: handleCancel,\n      wrapClassName: \"global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\" },\n      width: \"480px\",\n      footer: footer()\n    };\n    return (\n      <Modal {...modalProps}>\n        <div className=\"black fontsize16 pl48 pr24 mt8\">\n          {`${\n            eventType === EVENT_TYPE.APPOINTMENT\n              ? formatMessage(messages.contentAppt)\n              : formatMessage(messages.contentRem)\n          }`}\n        </div>\n        <div className=\"black fontsize16 pl48 pr24 mt16\">\n          {`${\n            eventType === EVENT_TYPE.APPOINTMENT\n              ? formatMessage(messages.messageAppt)\n              : formatMessage(messages.messageRem)\n          }`}\n        </div>\n        <div className=\" pl48 pr24 mt16\">\n          {eventType === EVENT_TYPE.APPOINTMENT && (\n            <TextArea\n              placeholder={formatMessage(messages.reason)}\n              onChange={handleOnTextChange}\n            />\n          )}\n        </div>\n        <div className=\"black fontsize16 pl48 pr24 mt16\">\n          {eventType === EVENT_TYPE.APPOINTMENT && (\n            <CalendarCard\n              id={id}\n              calendarUserId={currentUserId}\n              hideAction={true}\n              modal={true}\n            />\n          )}\n          {eventType === EVENT_TYPE.REMINDER && (\n            <ReminderCard\n              id={id}\n              calendarUserId={currentUserId}\n              hideAction={true}\n              modal={true}\n            />\n          )}\n        </div>\n        <div className=\"flex align-items-center alert w100 pl24\">\n          <img alt=\"alert\" src={alertIcon} className=\"mr16\" />\n          <div className=\"steel-grey fontsize12\">\n            {formatMessage(messages.alert)}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(CancelAppointment);\n","import { connect } from \"react-redux\";\nimport CancelModal from \"../../Components/Modal/event/cancel\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport {\n  cancelAppointment,\n  fetchEventsData,\n  cancelReminder\n} from \"../../../modules/events\";\nimport { close } from \"../../../modules/modals\";\n\nconst mapStateToProps = state => {\n  const {\n    modal: { show, modalType, entityId: eventId, requesting, subentity },\n    events: { events = {} } = {},\n    auth: { authenticated_user: currentUserId },\n    users\n  } = state;\n  return {\n    show:\n      (show && modalType === GLOBAL_MODALS.CANCEL_APPOINTMENT) ||\n      modalType === GLOBAL_MODALS.CANCEL_REMINDER,\n    eventDetails: events[eventId],\n    requesting: requesting,\n    currentUserId: currentUserId,\n    users: users,\n    subentity: subentity\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    cancelAppointment: (event, all, reason) =>\n      dispatch(cancelAppointment(event, all, reason)),\n    cancelReminder: (event, all) => dispatch(cancelReminder(event, all)),\n    close: () => dispatch(close()),\n    fetchEventsData: (userId, startDate, endDate) =>\n      dispatch(fetchEventsData(userId, startDate, endDate))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CancelModal);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  discharge: {\n    id: \"app.modal.discharge\",\n    description: \"\",\n    defaultMessage: \"Discharge patient(s) from the program\"\n  },\n\n  cancel: {\n    id: \"app.modal.cancel\",\n    description: \"\",\n    defaultMessage: \"Go Back\"\n  },\n\n  content: {\n    id: \"app.modal.content\",\n    description: \"\",\n    defaultMessage:\n      \"Please note that the patients you have selected will be discharged from the program.\"\n  },\n  message: {\n    id: \"app.modal.message\",\n    description: \"\",\n    defaultMessage: \"Do you still want to discharge?\"\n  },\n\n  alert: {\n    id: \"app.modal.alert\",\n    description: \"\",\n    defaultMessage:\n      \"This action cannot be undone. For help, contact program admin\"\n  },\n\n  dischargeButton: {\n    id: \"app.modal.dischargeButton\",\n    description: \"\",\n    defaultMessage: \"Discharge\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"./message\";\nimport alertIcon from \"../../../../Assets/images/round-warning-24-px.svg\";\n\nclass DischargePatient extends Component {\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { close } = this.props;\n    close();\n  };\n\n  handleDischarge = e => {\n    e.preventDefault();\n    const { patientId, dischargePatient } = this.props;\n    dischargePatient(patientId);\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  footer = () => {\n    const { requesting } = this.props;\n    const { formatMessage, handleCancel, handleDischarge } = this;\n    return (\n      <div className=\"flex align-items-center justify-content-end h72px mr24\">\n        <Button className=\"iqvia-btn cancel mr8\" onClick={handleCancel}>\n          {formatMessage(messages.cancel)}\n        </Button>\n        <Button\n          className=\"iqvia-btn warning\"\n          type=\"primary\"\n          loading={requesting}\n          onClick={handleDischarge}\n        >\n          {formatMessage(messages.dischargeButton)}\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      show: visible,\n      isError,\n      intl: { formatMessage }\n    } = this.props;\n\n    const { handleCancel, footer } = this;\n\n    const modalProps = {\n      visible: visible || isError,\n      title: formatMessage(messages.discharge),\n      okButtonProps: {},\n      onCancel: handleCancel,\n      wrapClassName: \"global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\" },\n      width: \"480px\",\n      footer: footer()\n    };\n    return (\n      <Modal {...modalProps}>\n        <div className=\"black fontsize16 pl48 pr24 mt8\">\n          {formatMessage(messages.content)}\n        </div>\n        <div className=\"black fontsize16 pl48 pr24 mt16\">\n          {formatMessage(messages.message)}\n        </div>\n        <div className=\"flex align-items-center alert w100 pl24\">\n          <img alt=\"alert\" src={alertIcon} className=\"mr16\" />\n          <div className=\"steel-grey fontsize12\">\n            {formatMessage(messages.alert)}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(DischargePatient);\n","import { connect } from \"react-redux\";\nimport DischargePatientModal from \"../../Components/Modal/dischargePatient\";\nimport { close } from \"../../../modules/modals\";\n\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { discharge } from \"../../../modules/user\";\n\nconst mapStateToProps = state => {\n  const { modal } = state;\n  return {\n    show: modal.show && modal.modalType === GLOBAL_MODALS.DISCHARGE_PATIENT,\n    requesting: modal.requesting,\n    patientId: modal.entityId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(close()),\n    dischargePatient: id => dispatch(discharge(id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DischargePatientModal);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  verifyButton: {\n    id: \"app.modal.verifyButton\",\n    description: \"\",\n    defaultMessage: \"Verify\"\n  },\n  reUploadButton: {\n    id: \"app.modal.reUploadButton\",\n    description: \"\",\n    defaultMessage: \"Re-upload (JPG,PDF)\"\n  },\n  consentFormCheckbox: {\n    id: \"app.modal.consentFormCheckbox\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  idProofCheckbox: {\n    id: \"app.modal.idProofCheckbox\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  }\n});\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport messages from \"./message\";\nimport \"./style.less\";\n\nclass DocumentViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.imageViewer = \"\";\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.renderImage();\n  }\n\n  renderImage = () => {\n    const element = document.getElementsByClassName(\"document-container\");\n    this.imageViewer = window.ImageViewer(element);\n    this.showImage();\n  };\n\n  onClickImage = e => {\n    e.preventDefault();\n  };\n\n  showImage = () => {\n    const { baseUrl } = this.props;\n    const { doc } = this.props;\n    if (doc !== undefined) {\n      this.imageViewer.load(\n        `${baseUrl}${doc.file}`\n        //`${baseUrl}${doc.file}`\n      );\n    }\n  };\n\n  componentWillUnmount() {}\n\n  render() {\n    const { doc = [] } = this.props;\n    if (doc !== undefined) {\n      this.renderImage();\n    }\n\n    return (\n      <Fragment>\n        <div id=\"document-gallery\">\n          <div className=\"document-container\" />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(DocumentViewer);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  uploadedOn: {\n    id: \"app.doc_viewer.upload\",\n    description: \"\",\n    defaultMessage: \"Uploaded on\"\n  }\n});\n\nexport default messages;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport \"./style.less\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${\n  pdfjs.version\n}/pdf.worker.js`;\n\nclass PdfViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numPages: null,\n      pageNumber: 1\n    };\n  }\n\n  componentDidMount() {\n    let pdfUrl = this.props.doc ? this.props.baseUrl + this.props.doc.file : \"\";\n    this.setState({ pdfUrl: pdfUrl });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.doc !== prevProps.doc) {\n      let pdfUrl = this.props.doc\n        ? this.props.baseUrl + this.props.doc.file\n        : \"\";\n      this.setState({ pdfUrl: pdfUrl });\n    }\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n\n  renderPages = () => {\n    let pages = [];\n    const totalPages = this.state.numPages;\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(<Page key={i} pageNumber={i} />);\n    }\n    return pages;\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"pdf-viewer\">\n          <Document\n            file={this.state.pdfUrl}\n            onLoadSuccess={this.onDocumentLoadSuccess}\n          >\n            {this.renderPages()}\n          </Document>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(PdfViewer);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  myProfile: {\n    id: \"app.idproof.myprofile\",\n    description: \"\",\n    defaultMessage: \"My Profile / Settings\"\n  },\n  idProof: {\n    id: \"app.idproof.idproof\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  },\n  replaceWarning: {\n    id: \"app.idproof.replaceWarning\",\n    description: \"\",\n    defaultMessage: \"Re-uploading will replace the existing image files\"\n  },\n  reUploadText: {\n    id: \"app.idproof.reUploadText\",\n    description: \"\",\n    defaultMessage: \"Re-upload (JPG, PDF)\"\n  },\n  nextButton: {\n    id: \"app.idproof.nextButton\",\n    description: \"\",\n    defaultMessage: \"Next\"\n  },\n  prevButton: {\n    id: \"app.idproof.prevButton\",\n    description: \"\",\n    defaultMessage: \"Prev\"\n  },\n  uploadedOn: {\n    id: \"app.idproof.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded On\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { Button, Upload, message } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { REQUEST_TYPE } from \"../../../../constant\";\nimport { Common } from \"../../../../Helper/urls\";\nimport { doRequest } from \"../../../../Helper/network\";\n\nconst IMAGEFORMAT = \"image/jpeg\";\nconst PDFFORMAT = \"application/pdf\";\n\nclass CommonUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: [],\n      docs: []\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  onStart = file => {\n    this.setState({ filename: file.name, progress: 0 });\n  };\n\n  onSuccess = (ret, file) => {};\n\n  onError = err => {};\n\n  onProgress = ({ percent }, file) => {\n    this.setState({ progress: parseInt(percent) });\n  };\n  onAbort = args => {};\n\n  onUploadComplete = ({ files = [] }) => {\n    const { handleComplete } = this.props;\n    const { docs } = this.state;\n    this.setState({ docs: [...docs, ...files] }, () => {\n      const { docs, fileList } = this.state;\n      if (docs.length === fileList.length) {\n        this.setState({\n          fileList: [],\n          docs: []\n        });\n        handleComplete(docs);\n      }\n    });\n  };\n\n  handleChange = info => {\n    const fileList = info.fileList;\n    this.setState({ fileList: fileList });\n  };\n\n  beforeUpload = file => {\n    const isJPG = file.type === IMAGEFORMAT;\n    const isPdf = file.type === PDFFORMAT;\n\n    if (!isJPG && !isPdf) {\n      message.error(\"You can only upload JPG or PDF file!\");\n    }\n    return isJPG || isPdf;\n  };\n\n  customRequest = ({ file, filename, onError, onProgress, onSuccess }) => {\n    const { onUploadComplete } = this;\n    const onUploadProgress = ({ total, loaded }) => {\n      onProgress(\n        { percent: Math.round((loaded / total) * 100).toFixed(2) },\n        file\n      );\n    };\n\n    let data = new FormData();\n    data.append(\"files\", file, file.name);\n\n    doRequest({\n      onUploadProgress: onUploadProgress,\n      method: REQUEST_TYPE.POST,\n      data: data,\n      url: Common.getUploadURL()\n    }).then(response => {\n      onUploadComplete(response.payload.data);\n    });\n\n    return {\n      abort() {}\n    };\n  };\n\n  render() {\n    const { uploadProps, label = \"UPLOAD\" } = this.props;\n    const { handleChange, customRequest } = this;\n    const { fileList } = this.state;\n\n    return (\n      <Upload\n        {...uploadProps}\n        multiple={true}\n        customRequest={customRequest}\n        showUploadList={false}\n        fileList={fileList}\n        onChange={handleChange}\n      >\n        <Button type=\"ant-btn iqvia-btn mr16 ant-btn-primary ant-btn-background-ghost\">\n          {label}\n        </Button>\n      </Upload>\n    );\n  }\n}\n\nexport default injectIntl(CommonUpload);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Button } from \"antd\";\nimport AppHeader from \"../../Header\";\nimport DocumentViewer from \"../../DocumentViewer\";\nimport PdfViewer from \"../../PdfViewer\";\nimport backIcon from \"../../../../Assets/images/ico-back.svg\";\nimport \"./style.less\";\nimport messages from \"./messages\";\nimport CommonUpload from \"../../Common/upload\";\n\nclass IdProofViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPdf: false,\n      currentIndex: 0,\n      totalSize: 0\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.isPdf();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.modal &&\n      this.props.user_data.documents !== prevProps.user_data.documents\n    ) {\n      this.setState(\n        {\n          currentIndex: 0\n        },\n        this.isPdf\n      );\n    }\n  }\n\n  isPdf = () => {\n    const {\n      user_data: {\n        documents: { idProof: consentDocs = [] },\n        isIdProofUploaded\n      }\n    } = this.props;\n    if (\n      isIdProofUploaded &&\n      consentDocs[this.state.currentIndex].file.includes(\".pdf\")\n    ) {\n      this.setState({ isPdf: true, totalSize: consentDocs.length });\n    } else {\n      this.setState({ isPdf: false, totalSize: consentDocs.length });\n    }\n  };\n\n  nextDocument = () => {\n    if (this.state.currentIndex + 1 < this.state.totalSize) {\n      const index = this.state.currentIndex + 1;\n      this.setState(\n        {\n          currentIndex: index\n        },\n        this.isPdf\n      );\n    }\n  };\n\n  previousDocument = () => {\n    if (this.state.currentIndex - 1 >= 0) {\n      const index = this.state.currentIndex - 1;\n      this.setState(\n        {\n          currentIndex: index\n        },\n        this.isPdf\n      );\n    }\n  };\n\n  handleReUpload = fileList => {\n    const {\n      reUploadIdProofs,\n      user_data: { basicInfo: { _id: userId } } = {}\n    } = this.props;\n    reUploadIdProofs(userId, fileList).then(value => {\n      this.setState(\n        {\n          isPdf: false,\n          currentIndex: 0,\n          totalSize: 0\n        },\n        this.isPdf\n      );\n    });\n  };\n\n  render() {\n    const {\n      user_data: {\n        documents: { idProof: idProof = [] },\n        baseDocUrl\n      },\n      modal = false\n    } = this.props;\n    console.log(\"id props\", this.props);\n    let showIndex = idProof.length < 1 ? 0 : this.state.currentIndex + 1;\n    const { isPdf, currentIndex, totalSize } = this.state;\n    const uploadProps = { accept: \"image/*,.pdf\" };\n    console.log(\n      \"this.props.user_data\",\n      this.props.user_data.documents,\n      currentIndex\n    );\n\n    const { handleReUpload, formatMessage } = this;\n    return (\n      <Fragment>\n        <div className=\"consent-document-viewer\">\n          <div className=\" text-align-l flex column align-items-start justify-content-center w100 mt32 \">\n            <p className=\"text\">\n              {showIndex}/{this.state.totalSize}\n            </p>\n            {isPdf && (\n              <div className=\"full-width full-height\">\n                <PdfViewer doc={idProof[currentIndex]} baseUrl={baseDocUrl} />\n              </div>\n            )}\n            {!this.state.isPdf && (\n              <div className=\"full-width\">\n                <DocumentViewer\n                  doc={idProof[currentIndex]}\n                  baseUrl={baseDocUrl}\n                />\n              </div>\n            )}\n            <div className=\"pdf-viewer flex align-items-center justify-content-space-between\">\n              <div>\n                {!this.state.isPdf ? (\n                  <div className=\"fontsize12 cool-grey\">\n                    Use Scroll to Zoom in/out\n                  </div>\n                ) : (\n                  \"\"\n                )}\n\n                <div className=\"fontsize12 cool-grey\">\n                  Re-uploading will replace the existing files\n                </div>\n              </div>\n              <div className=\"page-number\">\n                <div className=\"padding-10\">\n                  <Button\n                    disabled={currentIndex - 1 < 0}\n                    onClick={this.previousDocument}\n                    className={\"prev iqvia-btn\"}\n                  >\n                    {formatMessage(messages.prevButton)}\n                  </Button>\n                </div>\n                <div className=\"padding-10\">\n                  <Button\n                    disabled={currentIndex + 1 >= totalSize}\n                    onClick={this.nextDocument}\n                    className={\"next iqvia-btn\"}\n                  >\n                    {formatMessage(messages.nextButton)}\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            {!modal && (\n              <div className=\"footer hide-desktop\">\n                <div className=\"flex justify-content-space-between  align-items-center m0 ml16\">\n                  <div className=\"fontsize12 cool-grey mr16 ml16\">\n                    {formatMessage(messages.replaceWarning)}\n                  </div>\n                  <div className=\"mr16 ml16 mt10\">\n                    <CommonUpload\n                      label={formatMessage(messages.reUploadText)}\n                      uploadProps={uploadProps}\n                      handleComplete={handleReUpload}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(IdProofViewer);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  myProfile: {\n    id: \"app.consentDocs.myprofile\",\n    description: \"\",\n    defaultMessage: \"My Profile / Settings\"\n  },\n  consentDocs: {\n    id: \"app.consentDocs.consentDocs\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  replaceWarning: {\n    id: \"app.consentDocs.replaceWarning\",\n    description: \"\",\n    defaultMessage: \"Re-uploading will replace the existing image files\"\n  },\n  reUploadText: {\n    id: \"app.consentDocs.reUploadText\",\n    description: \"\",\n    defaultMessage: \"Re-upload (JPG, PDF)\"\n  },\n  nextButton: {\n    id: \"app.consentDocs.nextButton\",\n    description: \"\",\n    defaultMessage: \"Next\"\n  },\n  prevButton: {\n    id: \"app.consentDocs.prevButton\",\n    description: \"\",\n    defaultMessage: \"Prev\"\n  },\n  uploadedOn: {\n    id: \"app.consentDocs.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded On\"\n  }\n});\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Button, Icon } from \"antd\";\nimport AppHeader from \"../../Header\";\nimport DocumentViewer from \"../../DocumentViewer\";\nimport PdfViewer from \"../../PdfViewer\";\nimport backIcon from \"../../../../Assets/images/ico-back.svg\";\nimport \"./style.less\";\nimport messages from \"./messages\";\nimport moment from \"moment\";\nimport CommonUpload from \"../../Common/upload\";\nimport PreviewDoc from \"../../../../Components/Common/docPreview/previewDoc\";\n\nclass ConsentDocumentView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPdf: false,\n      currentIndex: 0,\n      totalSize: 0\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.isPdf();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.modal &&\n      this.props.user_data.documents !== prevProps.user_data.documents\n    ) {\n      this.setState(\n        {\n          currentIndex: 0\n        },\n        this.isPdf\n      );\n    }\n  }\n\n  isPdf = () => {\n    const {\n      user_data: {\n        documents: { consentForm: consentDocs = [] },\n        isConsentFormUploaded\n      }\n    } = this.props;\n    if (\n      isConsentFormUploaded &&\n      consentDocs[this.state.currentIndex].file.includes(\".pdf\")\n    ) {\n      this.setState({ isPdf: true, totalSize: consentDocs.length });\n    } else {\n      this.setState({ isPdf: false, totalSize: consentDocs.length });\n    }\n  };\n\n  nextDocument = () => {\n    if (this.state.currentIndex + 1 < this.state.totalSize) {\n      const index = this.state.currentIndex + 1;\n      this.setState(\n        {\n          currentIndex: index\n        },\n        this.isPdf\n      );\n    }\n  };\n\n  previousDocument = () => {\n    if (this.state.currentIndex - 1 >= 0) {\n      const index = this.state.currentIndex - 1;\n      this.setState(\n        {\n          currentIndex: index\n        },\n        this.isPdf\n      );\n    }\n  };\n\n  getScroll = () => {\n    let options = [];\n    const { currentIndex } = this.state;\n    const {\n      user_data: {\n        documents: { consentForm: docs = [] },\n        baseDocUrl: baseUrl\n      }\n    } = this.props;\n    if (docs.length > 0) {\n      for (let i = 0; i < docs.length; i++) {\n        const doc = docs[i].file;\n        options.push(\n          <div\n            key={doc}\n            className=\"preview-block\"\n            onClick={() => this.setState({ currentIndex: i })}\n          >\n            <PreviewDoc\n              key={doc}\n              id={doc}\n              type={doc.includes(\"pdf\") ? \"pdf\" : \"image\"}\n              className={\n                currentIndex === i ? \"case-image outline\" : \"case-image\"\n              }\n              src={baseUrl + doc}\n            />\n          </div>\n        );\n      }\n    }\n    return options;\n  };\n\n  render() {\n    const {\n      user_data: {\n        documents: { consentForm: consentDocs = [] },\n        baseDocUrl\n      }\n    } = this.props;\n    let showIndex = consentDocs.length < 1 ? 0 : this.state.currentIndex + 1;\n    const { isPdf, currentIndex, totalSize } = this.state;\n    const doc = consentDocs[currentIndex];\n    const { uploadedOn: savedOn = [] } = doc;\n    console.log(\"doc ----\", doc);\n    const uploadDate = new moment(savedOn).format(\"DD/MM/YYYY hh:mm A\");\n    console.log(\n      \"---- 111111111111111111111111 ----\",\n      `${baseDocUrl}${doc.file}`\n    );\n    const { formatMessage } = this;\n    return (\n      <Fragment>\n        <div className=\"consent-document-viewer\">\n          <div className=\"consent-header\">\n            <div className=\"consent-header-left\">\n              {showIndex}/{totalSize}\n            </div>\n            <div className=\"consent-header-right\">\n              <div className=\"fontsize12 cool-grey\">{`${formatMessage(\n                messages.uploadedOn\n              )} ${uploadDate}`}</div>\n            </div>\n          </div>\n          <div className=\"consent-body\">\n            {isPdf && (\n              <div className=\"full-width full-height\">\n                <PdfViewer\n                  doc={consentDocs[currentIndex]}\n                  baseUrl={baseDocUrl}\n                />\n              </div>\n            )}\n            {!isPdf && (\n              <div className=\"full-width\">\n                <img\n                  alt=\"curr-docs\"\n                  style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n                  src={`${baseDocUrl}${doc.file}`}\n                />\n                {/*<Viewer*/}\n                {/*  visible={true}*/}\n                {/*  onClose={() => {*/}\n                {/*    this.setState({ visible: false });*/}\n                {/*  }}*/}\n                {/*  images={[{src: `${baseDocUrl}${doc.file}`, alt: ''}]}*/}\n                {/*  //images={[`${baseDocUrl}${consentDocs[currentIndex]}`]}*/}\n                {/*  noNavbar={true}*/}\n                {/*  noToolbar={true}*/}\n                {/*  noImgDetails={true}*/}\n                {/*  noFooter={true}*/}\n                {/*/>*/}\n                {/*<DocumentViewer*/}\n                {/*  doc={consentDocs[currentIndex]}*/}\n                {/*  baseUrl={baseDocUrl}*/}\n                {/*/>*/}\n              </div>\n            )}\n          </div>\n          <div className=\"consent-footer\">\n            <div className=\"consent-instructions\">\n              <div className=\"top-text fontsize12 cool-grey\">\n                Use Two finger pinch for Zoom in/out\n              </div>\n              <div className=\"bottom-text fontsize12 cool-grey\">\n                Re-uploading will replace the existing files\n              </div>\n            </div>\n            <div className=\"doc-changer\">\n              <div className=\"nav-container\">\n                {/*<Icon*/}\n                {/*  className={currentIndex - 1 < 0 ? \"icons disabled\" : \"icons\"}*/}\n                {/*  onClick={this.previousDocument}*/}\n                {/*  type=\"left\"*/}\n                {/*/>*/}\n                <div className=\"image-navigation-wrapper flex-1\">\n                  <div className=\"image-navigation hide-scroll\">\n                    {consentDocs.length > 0 && this.getScroll()}\n                  </div>\n                </div>\n                {/*<Icon*/}\n                {/*  className={*/}\n                {/*    currentIndex + 1 >= totalSize ? \"icons disabled\" : \"icons\"*/}\n                {/*  }*/}\n                {/*  onClick={this.nextDocument}*/}\n                {/*  type=\"right\"*/}\n                {/*/>*/}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(ConsentDocumentView);\n","import React, { Component, Fragment } from \"react\";\nimport { Modal, Button, Checkbox, Menu } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"./message\";\nimport \"../style.less\";\nimport IdProofViewer from \"../../page/idProof\";\nimport ConsentDocumentView from \"../../page/consentDocument\";\nimport CommonUpload from \"../../Common/upload\";\nimport verified from \"../../../../Assets/images/ico-verified.svg\";\nimport notVerified from \"../../../../Assets/images/ico-err.svg\";\nimport { USER_CATEGORY } from \"../../../../constant\";\n\nconst ID_PROOF = \"IdProof\";\nconst CONSENT_FORM = \"ConsentForm\";\nclass DocumentVerification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openConsent: true,\n      isConsentVerified: false,\n      isIdProofVerified: false,\n      fileList: [],\n      currentField: CONSENT_FORM\n    };\n  }\n\n  componentDidMount() {\n    const { patientId, users, purpose } = this.props;\n    const currentUser = users[patientId] || {};\n    const { documents = {} } = currentUser;\n    const consentFormVerified =\n      currentUser !== undefined ? documents.consentFormVerified : false;\n    const idProofVerified =\n      currentUser !== undefined ? documents.idProofVerified : false;\n    this.setState({\n      isConsentVerified: consentFormVerified\n    });\n    this.setState({\n      isIdProofVerified: idProofVerified\n    });\n    if (purpose) {\n      if (purpose === ID_PROOF) {\n        this.setState({ currentField: ID_PROOF });\n      } else {\n        this.setState({ currentField: CONSENT_FORM });\n      }\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.purpose !== prevProps.purpose) {\n      const { purpose } = this.props;\n\n      if (purpose) {\n        if (purpose === ID_PROOF) {\n          this.setState({ currentField: ID_PROOF });\n        } else {\n          this.setState({ currentField: CONSENT_FORM });\n        }\n      } else {\n        this.setState({ currentField: CONSENT_FORM });\n      }\n    }\n\n    if (this.props.patientId !== prevProps.patientId) {\n      const { patientId, users } = this.props;\n      const currentUser = users[patientId];\n      const {\n        documents: { consentFormVerified = false, idProofVerified = false } = {}\n      } = currentUser || {};\n      this.setState({\n        isConsentVerified: consentFormVerified,\n        isIdProofVerified: idProofVerified\n      });\n    }\n  }\n\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      openConsent: true,\n      isConsentVerified: false,\n      isIdProofVerified: false\n    });\n    if (!this.props.purpose) {\n      this.setState({ currentField: CONSENT_FORM });\n    }\n    const { close } = this.props;\n    close();\n  };\n\n  handleVerify = e => {\n    e.preventDefault();\n    const { patientId, verifyDocuments } = this.props;\n    const { isConsentVerified, isIdProofVerified } = this.state;\n\n    if (isConsentVerified && isIdProofVerified) {\n      const proofs = { verifyConsentForm: true, verifyIdProof: true };\n      verifyDocuments(patientId, proofs);\n    } else if (isConsentVerified) {\n      const proofs = { verifyConsentForm: true, verifyIdProof: false };\n      verifyDocuments(patientId, proofs);\n    } else if (isIdProofVerified) {\n      const proofs = { verifyConsentForm: false, verifyIdProof: true };\n      verifyDocuments(patientId, proofs);\n    }\n    this.handleCancel();\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  handleMenu = e => {\n    if (e.key === \"1\") {\n      this.setState({ currentField: CONSENT_FORM });\n    } else if (e.key === \"2\") {\n      this.setState({ currentField: ID_PROOF });\n    }\n    this.setState({\n      openConsent: !this.state.openConsent\n    });\n  };\n\n  handleConsentClick = value => {\n    this.setState({\n      isConsentVerified: value.target.checked\n    });\n  };\n\n  handleIdClick = value => {\n    this.setState({\n      isIdProofVerified: value.target.checked\n    });\n  };\n\n  handleDisable = () => {\n    const { patientId, users } = this.props;\n    const currentUser = users[patientId];\n    const {\n      documents: { consentFormVerified = false, idProofVerified = false } = {}\n    } = currentUser || {};\n\n    const { isConsentVerified, isIdProofVerified } = this.state;\n\n    return !(\n      consentFormVerified !== isConsentVerified ||\n      idProofVerified !== isIdProofVerified\n    );\n  };\n\n  handleReUpload = fileList => {\n    const { openConsent } = this.state;\n    const { reUploadConsentDocs, reUploadIdProofs, patientId } = this.props;\n    if (openConsent) {\n      reUploadConsentDocs(patientId, fileList);\n      this.setState({ isConsentVerified: false });\n    } else if (!openConsent) {\n      reUploadIdProofs(patientId, fileList);\n      this.setState({ isIdProofVerified: false });\n    }\n  };\n\n  footer = () => {\n    const {\n      requesting,\n      patientId,\n      users,\n      purpose,\n      currentUser: { basicInfo: { category } = {} } = {}\n    } = this.props;\n    if (category === USER_CATEGORY.DOCTOR) return null;\n    const { formatMessage, handleVerify, handleDisable, handleReUpload } = this;\n    const currentUser = users[patientId];\n\n    const {\n      documents: {\n        consentForm = [],\n        consentFormVerified = false,\n        idProof = [],\n        idProofVerified = false\n      } = {}\n    } = currentUser || {};\n\n    const { isConsentVerified, isIdProofVerified } = this.state;\n\n    const uploadMessage = formatMessage(messages.reUploadButton);\n    const uploadProps = { accept: \"image/*,.pdf\" };\n    return (\n      <div className=\"document-footer\">\n        {!purpose && (\n          <Fragment>\n            <div className=\"footer-top\">\n              <Checkbox\n                defaultChecked={isConsentVerified}\n                checked={isConsentVerified}\n                disabled={consentFormVerified || consentForm.length < 1}\n                onChange={this.handleConsentClick}\n              >\n                <span className=\"fontsize14 dark mr16\">\n                  {formatMessage(messages.consentFormCheckbox)}\n                </span>\n              </Checkbox>\n              <Checkbox\n                defaultChecked={isIdProofVerified}\n                checked={isIdProofVerified}\n                disabled={idProofVerified || idProof.length < 1}\n                onChange={this.handleIdClick}\n              >\n                <span className=\"fontsize14 dark mr24\">\n                  {formatMessage(messages.idProofCheckbox)}\n                </span>\n              </Checkbox>\n            </div>\n          </Fragment>\n        )}\n        <div className=\"footer-bottom\">\n          <CommonUpload\n            uploadProps={uploadProps}\n            label={uploadMessage}\n            handleComplete={handleReUpload}\n          />\n          {!purpose && (\n            <Button\n              type=\"primary iqvia-btn\"\n              onClick={handleVerify}\n              loading={requesting}\n              disabled={handleDisable()}\n            >\n              {formatMessage(messages.verifyButton)}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      show: visible,\n      intl: { formatMessage },\n      users,\n      patientId,\n      currentUser: LoggedInUser,\n      purpose\n    } = this.props;\n\n    if (visible === false || !patientId) {\n      return null;\n    }\n\n    const { currentField } = this.state;\n    let currentUser = users[patientId] || {};\n\n    const { documents = {} } = currentUser;\n\n    const { basicInfo: { category } = {} } = LoggedInUser;\n    const patientName =\n      currentUser !== undefined ? currentUser.basicInfo.name : null;\n\n    const consentFormVerified =\n      currentUser !== undefined ? documents.consentFormVerified : false;\n    const idProofVerified =\n      currentUser !== undefined ? documents.idProofVerified : false;\n\n    const { handleCancel, footer, handleMenu } = this;\n\n    const modalProps = {\n      visible: visible,\n      title:\n        category === USER_CATEGORY.PATIENT\n          ? \"My Documents\"\n          : patientName + \"'s Details\",\n      okButtonProps: {},\n      onCancel: handleCancel,\n      wrapClassName: \"m global-modal full-height\",\n      destroyOnClose: true,\n      footer: footer(),\n      className: \"document-verification-modal\"\n    };\n    let selectedKey = \"1\";\n    if (purpose === ID_PROOF) {\n      selectedKey = \"2\";\n    }\n    return (\n      <Modal {...modalProps}>\n        <div className=\"document-modal\">\n          <div className=\"document-menu menu-black\">\n            <Menu mode=\"horizontal\" defaultSelectedKeys={[selectedKey]}>\n              <Menu.Item key=\"1\" onClick={handleMenu}>\n                {formatMessage(messages.consentFormCheckbox)}\n                <img\n                  className=\"ml10 mb4\"\n                  alt=\"\"\n                  src={consentFormVerified ? verified : notVerified}\n                />\n              </Menu.Item>\n              <Menu.Item key=\"2\" onClick={handleMenu}>\n                {formatMessage(messages.idProofCheckbox)}\n                <img\n                  className=\"ml10 mb4\"\n                  alt=\"\"\n                  src={idProofVerified ? verified : notVerified}\n                />\n              </Menu.Item>\n            </Menu>\n          </div>\n          {currentField === ID_PROOF && visible && (\n            <IdProofViewer modal user_data={currentUser} />\n          )}\n          {currentField === CONSENT_FORM && visible && (\n            <ConsentDocumentView modal user_data={currentUser} />\n          )}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(DocumentVerification);\n","import { connect } from \"react-redux\";\nimport DocumentVerificationModal from \"../../Components/Modal/documentVerification\";\nimport { close } from \"../../../modules/modals\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport {\n  verify,\n  reUploadIdProofs,\n  reUploadConsentDocs\n} from \"../../../modules/user\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\n\nconst mapStateToProps = state => {\n  const { modal, users, auth } = state;\n  const getUserById = makeGetUserById();\n  return {\n    show: modal.show && modal.modalType === GLOBAL_MODALS.DOCUMENTS_MODAL,\n    requesting: modal.requesting,\n    purpose: modal.purpose,\n    patientId: modal.entityId,\n    users: users,\n    currentUser: getUserById(users, auth.authenticated_user)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(close()),\n    verifyDocuments: (id, proofs) => dispatch(verify(id, proofs)),\n    reUploadIdProofs: (id, fileList) =>\n      dispatch(reUploadIdProofs(id, fileList)),\n    reUploadConsentDocs: (id, fileList) =>\n      dispatch(reUploadConsentDocs(id, fileList))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DocumentVerificationModal);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport BrowserRouter from \"react-router-dom/es/BrowserRouter\";\n\nimport Routes from \"./Containers/Routes\";\nimport EventModal from \"./Containers/Modal/event\";\nimport AddPatients from \"./Containers/Modal/addPatient\";\nimport AddDoctor from \"./Containers/Modal/addDoctor\";\nimport AdverseEventsModal from \"./Containers/Modal/adverseEvent\";\nimport ChangePasswordModal from \"./Containers/Modal/changePassword\";\nimport EndSurvey from \"./Containers/Modal/endSurvey\";\nimport CancelModal from \"./Containers/Modal/cancelEvent\";\nimport DischargePatient from \"./Containers/Modal/dischargePatient\";\nimport \"./style.less\";\nimport DocumentVerificationModal from \"./Containers/Modal/documentVerification\";\nclass MobileAppWrapper extends Component {\n  render() {\n    // const { isModalVisible } = this.props;\n    console.log(\"mobileAppWrapper\");\n    return (\n      <BrowserRouter>\n        <Fragment>\n          <div className=\"m\">\n            <Routes />\n            <EventModal />\n            <AddPatients />\n            <AddDoctor />\n            <AdverseEventsModal />\n            <ChangePasswordModal />\n            <EndSurvey />\n            <CancelModal />\n            <DischargePatient />\n            <DocumentVerificationModal />\n          </div>\n        </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default injectIntl(MobileAppWrapper);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./style.less\";\nimport icoError from \"../../../Assets/images/ico-err.svg\";\n\nconst ErrorComponent = ({ msg, close, className }) => {\n  if (close) {\n    setTimeout(close, 4000);\n  }\n  if (!msg) {\n    return null;\n  }\n  return (\n    <div className={`iqvia-error ${className}`}>\n      <div className=\"flex  pr8 pl8 pt16 pb16\">\n        <Row className=\"w100\">\n          <Col xs={12} sm={12} md={10} lg={10} xl={10} xxl={10}>\n            <div>\n              <img alt=\"\" src={icoError} className=\"mr8 inline\" />\n              <div className=\"fontsize12 medium warning-color inline\">\n                {msg}\n              </div>\n            </div>\n          </Col>\n          {/* <Col xs={12} sm={12} md={2} lg={2} xl={2} xxl={2}>\n            <Button className=\"got-it-btn\" onClick={close}>\n              <div className=\"flex align-items-center justify-content-center\">\n                <img alt=\"\" src={checkMark} />\n                <div className=\"dark fontsize14 medium \">Got It</div>\n              </div>\n            </Button>\n          </Col> */}\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorComponent;\n","import React, { Component } from \"react\";\nimport { Form, Select, Input } from \"antd\";\nimport debounce from \"lodash-es/debounce\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport callingCountries from \"country-data\";\nimport clone from \"lodash-es/cloneDeep\";\nimport isEqual from \"lodash-es/isEqual\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nfunction getParsedCountryCode() {\n  const a = [];\n  for (let countryCode in callingCountries.callingCountries.all) {\n    const cc = callingCountries.callingCountries.all[countryCode];\n\n    if (cc.countryCallingCodes.length > 0) {\n      cc.code = cc.countryCallingCodes[0];\n      a.push(cc);\n    }\n  }\n\n  return a;\n}\n\nconst ParsedCountryCodes = getParsedCountryCode();\n\nconst getCountryAlpha = (code = \"+91\") => {\n  let country_alpha = \"\";\n\n  for (let index in ParsedCountryCodes) {\n    const country = ParsedCountryCodes[index];\n    if (country.code === code) {\n      country_alpha = country.alpha2;\n      break;\n    }\n  }\n  return country_alpha;\n};\n\nexport class MobileLabel extends Component {\n  render() {\n    const { countryCode = \"\", phoneNumber = \"\" } = this.props;\n    if (\n      countryCode !== null &&\n      phoneNumber !== null &&\n      countryCode.length > 0 &&\n      phoneNumber.length > 0\n    ) {\n      return (\n        <div className=\"flex  align-items-center\">\n          <ReactCountryFlag code={getCountryAlpha(countryCode)} svg />\n          <div className=\"ml8\">{countryCode + \"-\" + phoneNumber}</div>\n        </div>\n      );\n    } else return null;\n  }\n}\n\nexport class MobileInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestedCountryCodes: [],\n      showDropDown: false\n    };\n\n    this.searchCountryCode = debounce(this.searchCountryCode, 300);\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    const { countryCode = \"+91\" } = this.props;\n    this.setInitialCountryCode(countryCode);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentProps = clone(this.props);\n    if (!isEqual(nextProps, currentProps)) {\n      const { countryCode } = nextProps;\n      this.setInitialCountryCode(countryCode);\n    }\n  }\n\n  selectedCountryCode = val => {\n    if (val.length === 0) {\n      this.setState({\n        showDropDown: false,\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        showDropDown: false,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  setInitialCountryCode = (countryCode = \"+91\") => {\n    //Sometimes country code comes as null and .length fails that's why this condition\n    if (countryCode ? countryCode.length === 0 : false) {\n      this.setState({\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        countryCode: countryCode,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(countryCode) > -1;\n        })\n      });\n    }\n  };\n\n  searchCountryCode = val => {\n    if (val.length === 0) {\n      this.setState({\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        showDropDown: true,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  isNumber = (rule, value, callback) => {\n    if (value && value.length > 0 && value.match(\"^[0-9]+$\") === null) {\n      callback(\"Enter valid phone number\");\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      phoneNumber,\n      phoneField,\n      countryCodeField,\n      disabled,\n      fieldError = {},\n      countryCode,\n      rulesPhoneNumber = []\n    } = this.props;\n\n    const { getFieldDecorator } = this.props.form;\n    const { showDropDown, suggestedCountryCodes } = this.state;\n\n    return (\n      <div className=\"flex content-space-between align-items-start\">\n        <div className=\"flex flex-1\">\n          <FormItem\n            className=\"show-no-error\"\n            style={{ width: \"120px\", margin: \"0 10px 0 0\" }}\n            validateStatus={fieldError[countryCodeField] ? \"error\" : \"\"}\n            help={fieldError[countryCodeField] || \"\"}\n          >\n            {getFieldDecorator(countryCodeField, {\n              validateTrigger: [\"onChange\", \"onBlur\"],\n              rules: this.props.rulesCountryCode,\n              initialValue: countryCode,\n              type: \"string\"\n            })(\n              <Select\n                className=\"country_code_value_placeholder\"\n                showSearch\n                placeholder={\n                  <div\n                    className={\n                      \"country_code_value flex row align-items-center justify-content-start w100\"\n                    }\n                  >\n                    <ReactCountryFlag code={\"IN\"} svg />\n                    <div className={\"pl5\"}>+91</div>\n                  </div>\n                }\n                notFoundContent={null}\n                filterOption={false}\n                onSearch={this.searchCountryCode}\n                style={{ width: \"100%\" }}\n                onSelect={this.selectedCountryCode}\n                showArrow={false}\n                dropdownStyle={{ width: \"200px\" }}\n                dropdownClassName={\n                  \"select_country_code_dropdown\" +\n                  (showDropDown ? \"  \" : \" hide_drop_down\")\n                }\n                optionLabelProp={\"children\"}\n                disabled={disabled}\n                getPopupContainer={this.getParentNode}\n              >\n                {suggestedCountryCodes.map(d => {\n                  return (\n                    <Option\n                      value={d.code}\n                      key={d.alpha2 + d.code}\n                      title={d.code}\n                    >\n                      <div\n                        className={\n                          \"flex row align-items-start justify-content-center\"\n                        }\n                      >\n                        <div\n                          className={\n                            \"country_code_select flex row align-items-center justify-content-start w100\"\n                          }\n                        >\n                          <ReactCountryFlag code={d.alpha2} svg />\n                          <div className={\"pl5\"}>\n                            {\" \"}\n                            {d.code} {d.name}\n                          </div>\n                        </div>\n                        <div\n                          className={\n                            \"country_code_value flex row align-items-center justify-content-start w100\"\n                          }\n                        >\n                          <ReactCountryFlag code={d.alpha2} svg />\n                          <div className={\"pl5\"}>{d.code}</div>\n                        </div>\n                      </div>\n                    </Option>\n                  );\n                })}\n              </Select>\n            )}\n          </FormItem>\n          <FormItem\n            className={\"w100\"}\n            style={{ marginBottom: \"0\" }}\n            validateStatus={\n              fieldError[phoneField] || fieldError[countryCodeField]\n                ? \"error\"\n                : \"\"\n            }\n            help={fieldError[phoneField] || fieldError[countryCodeField] || \"\"}\n          >\n            {getFieldDecorator(phoneField, {\n              initialValue: phoneNumber,\n              rules: [\n                {\n                  validator: this.isNumber\n                },\n                ...rulesPhoneNumber\n              ]\n            })(\n              <Input\n                placeholder=\"\"\n                className={\"phone_number_main mb0 pb0\"}\n                disabled={disabled}\n              />\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n  }\n}\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  dashboard: {\n    id: \"app.header.dashboard\",\n    description: \"dashboard in header\",\n    defaultMessage: \"Dashboard\"\n  },\n  mycalender: {\n    id: \"app.header.mycalender\",\n    description: \"mycalender in header\",\n    defaultMessage: \"My Calendar\"\n  },\n  program: {\n    id: \"app.header.program\",\n    description: \"program in hearder\",\n    defaultMessage: \"Programs\"\n  },\n  surveys: {\n    id: \"app.header.surveys\",\n    description: \"surveys in header\",\n    defaultMessage: \"Surveys\"\n  },\n  newAppointment: {\n    id: \"app.header.newAppointment\",\n    description: \"newAppointment in add button\",\n    defaultMessage: \"New Appointment/ Reminder\"\n  },\n  newPatient: {\n    id: \"app.header.newPatient\",\n    description: \"newPatient in add button\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.header.newDoctor\",\n    description: \"newDoctor in add button\",\n    defaultMessage: \"New Doctor\"\n  },\n  reportAdverseEvent: {\n    id: \"app.header.reportAdverseEvent\",\n    description: \"reportAdverseEvent in add\",\n    defaultMessage: \"Report Adverse Event\"\n  },\n  myProfile: {\n    id: \"app.header.my-profile\",\n    description: \"myprofile in header\",\n    defaultMessage: \"My Profile\"\n  },\n  headerlogo: {\n    id: \"app.header.header-logo  \",\n    description: \"header logo in header\",\n    defaultMessage: \"P E P\"\n  },\n  signUp: {\n    id: \"app.header.signUp\",\n    description: \"Sign up in header\",\n    defaultMessage: \"Sign Up\"\n  },\n  signIn: {\n    id: \"app.header.signIn\",\n    description: \"Sign in in header\",\n    defaultMessage: \"Sign In\"\n  },\n  MyMedicalDetails: {\n    id: \"app.header.MyMedicalDetails\",\n    description: \"My Medical Details in header\",\n    defaultMessage: \"My Medical Details\"\n  },\n  signOut: {\n    id: \"app.signout\",\n    description: \"signout button\",\n    defaultMessage: \"Sign Out\"\n  }\n});\n\nexport default messages;\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Menu, Dropdown, Button } from \"antd\";\nimport \"./style.less\";\nimport search from \"../../../Assets/images/ico-search-flat-white.svg\";\nimport chat from \"../../../Assets/images/ico-chat-flat-white.svg\";\nimport alert from \"../../../Assets/images/icon-bell-flat-white.svg\";\nimport messages from \"./message\";\nimport { GLOBAL_MODALS, USER_CATEGORY } from \"../../../constant\";\n\nconst HeaderIcons = props => {\n  const {\n    intl: { formatMessage },\n    category,\n    showSearchbar,\n    userId,\n    reportAdverseEvent,\n    showSearch,\n    showAddButton\n  } = props;\n  const CareCoachAddmenu = (\n    <Menu className=\"addButtonmenu\">\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          props.openModal(GLOBAL_MODALS.EVENT_MODAL);\n        }}\n      >\n        {formatMessage(messages.newAppointment)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={props.openAddPatientModal}\n      >\n        {formatMessage(messages.newPatient)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={props.openAddDoctorModal}\n      >\n        {formatMessage(messages.newDoctor)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          props.openModal(GLOBAL_MODALS.ADVERSE_EVENTS);\n        }}\n      >\n        {formatMessage(messages.reportAdverseEvent)}\n      </Menu.Item>\n    </Menu>\n  );\n\n  const PatientAddmenu = (\n    <Menu className=\"addButtonmenu\">\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          props.openModal(GLOBAL_MODALS.EVENT_MODAL);\n        }}\n      >\n        {formatMessage(messages.newAppointment)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          reportAdverseEvent(userId);\n        }}\n      >\n        {formatMessage(messages.reportAdverseEvent)}\n      </Menu.Item>\n    </Menu>\n  );\n\n  let currentAddMenu;\n  switch (category) {\n    case USER_CATEGORY.CARE_COACH:\n      currentAddMenu = CareCoachAddmenu;\n      break;\n    case USER_CATEGORY.PATIENT:\n      currentAddMenu = PatientAddmenu;\n      break;\n    case USER_CATEGORY.DOCTOR:\n      currentAddMenu = PatientAddmenu;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"flex align-items-center justify-content-space-evenly\">\n      <div className=\"flex align-items-center justify-content-space-evenly \">\n        {category && category !== USER_CATEGORY.PATIENT && showSearch && (\n          <div onClick={showSearchbar} className=\"ico-search-desktop\">\n            <img alt=\"\" src={search} className=\"icons\" />\n          </div>\n        )}\n        <div className=\"chat\">\n          <img alt=\"\" src={chat} className=\"icons\" />\n        </div>\n        <div className=\"alert\">\n          <img alt=\"\" src={alert} className=\"icons\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(HeaderIcons);\n","import moment from \"moment\";\nimport UserDpPlaceholder from \"../../../Assets/images/ico-placeholder-userdp.svg\";\nimport { VALIDITY, ENTITY } from \"../../../constant\";\n\nexport const getProgramChildren = programs => {\n  let programChildred = [];\n  let programIds = Object.keys(programs);\n  programIds.forEach(id => {\n    // if (count > 4) {\n    //   return (programChildred);\n    // }\n    const program = programs[id] || {};\n    let obj = {};\n    obj.id = program._id;\n    const checkIfExpired = moment().diff(program.expiresOn, \"years\", true);\n    if (checkIfExpired < 0) {\n      obj.title = program.name;\n      obj.validity = VALIDITY.ACTIVE;\n      programChildred.push(obj);\n    } else {\n      obj.title = program.name;\n      obj.validity = VALIDITY.EXPIRE;\n      programChildred.push(obj);\n    }\n  });\n\n  //\n  //\n  return programChildred;\n};\n\nexport const getPatientChildren = patients => {\n  let patientChildred = [];\n  patients.forEach(patient => {\n    const {\n      _id,\n      name,\n      gender,\n      dob,\n      homeAddress = {},\n      profilePicLink = UserDpPlaceholder,\n      category,\n      city,\n      disease,\n      country\n    } = patient;\n    const years = moment().diff(dob, \"years\", false);\n    if (category === ENTITY.PATIENT) {\n      patientChildred.push({\n        id: _id,\n        title: name,\n        age: years,\n        gender: gender,\n        disease: disease,\n        addressLine1: homeAddress.addressLine2,\n        city: city,\n        country: country,\n        profilePicLink: profilePicLink\n      });\n    }\n  });\n\n  return patientChildred;\n};\n\nexport const getDoctorChildren = doctors => {\n  const doctorChildred = [];\n  doctors.forEach(doctor => {\n    const { _id, name, speciality, category } = doctor;\n    if (category === ENTITY.DOCTOR) {\n      doctorChildred.push({\n        id: _id,\n        title: name,\n        Speciality: speciality\n      });\n    }\n  });\n  return doctorChildred;\n};\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  program: {\n    id: \"app.searchbox.program\",\n    description: \"program in dropdown\",\n    defaultMessage: \"Program\"\n  },\n  patient: {\n    id: \"app.searchbox.patient\",\n    description: \"patient in dropdown\",\n    defaultMessage: \"Patient\"\n  },\n  doctor: {\n    id: \"app.searchbox.doctor\",\n    description: \"doctor in dropdown\",\n    defaultMessage: \"Doctor\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport { Input, AutoComplete, Button } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport { doRequest } from \"../../../Helper/network\";\nimport { REQUEST_TYPE, path, ENTITY, USER_CATEGORY } from \"../../../constant\";\nimport throttle from \"lodash-es/throttle\";\nimport { injectIntl } from \"react-intl\";\nimport {\n  getProgramChildren,\n  getPatientChildren,\n  getDoctorChildren\n} from \"./getChildrens\";\nimport Cross from \"../../../Assets/images/ico-remove.svg\";\nimport messages from \"./message\";\nimport \"./style.less\";\nconst Option = AutoComplete.Option;\nconst OptGroup = AutoComplete.OptGroup;\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n      Program: [],\n      Patient: [],\n      Doctor: [],\n      query: \"\",\n      isLoading: false\n    };\n    this.getoptions = throttle(this.getoptions.bind(this), 3000);\n  }\n\n  componentWillUnmount() {\n    this.getoptions = null;\n  }\n\n  gotToSearchResult = e => {\n    e.preventDefault();\n    const targetValue = e.target.value;\n    this.setState({ dataSource: [] }, () => {\n      this.props.history.push(\n        `${path.SEARCH}/?key=${targetValue}&?query=${this.state.query}`\n      );\n    });\n  };\n\n  handleOnClick = (entity, id) => {\n    this.props.history.push(`/${entity}/${id}`);\n  };\n\n  showoptions = e => {\n    const { getoptions } = this;\n    if (getoptions !== null) {\n      this.setState({ query: e });\n      this.setState({ isLoading: true });\n      getoptions(e);\n    }\n  };\n\n  async getoptions(e) {\n    const {\n      intl: { formatMessage },\n      category\n    } = this.props;\n\n    const value = e.trim();\n\n    if (!(value === \"\" || value === \"$\")) {\n      const data = await doRequest({\n        params: { query: value },\n        url: path.SEARCH,\n        method: REQUEST_TYPE.GET\n      });\n      //\n      let program = [];\n      let patient = [];\n      let doctor = [];\n      if (data.payload.data !== undefined) {\n        program = getProgramChildren(data.payload.data.programs);\n        patient = await getPatientChildren(data.payload.data.users.result);\n        if (category === USER_CATEGORY.CARE_COACH) {\n          doctor = await getDoctorChildren(data.payload.data.users.result);\n        }\n      }\n\n      this.setState(\n        prevState => ({\n          Program: program,\n          Patient: patient,\n          Doctor: doctor\n        }),\n        () => {\n          if (category === USER_CATEGORY.CARE_COACH) {\n            this.setState({\n              dataSource: [\n                {\n                  title: formatMessage(messages.program),\n                  children: this.state.Program\n                },\n                {\n                  title: formatMessage(messages.patient),\n                  children: this.state.Patient\n                },\n                {\n                  title: formatMessage(messages.doctor),\n                  children: this.state.Doctor\n                }\n              ],\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              dataSource: [\n                {\n                  title: formatMessage(messages.program),\n                  children: this.state.Program\n                },\n                {\n                  title: formatMessage(messages.patient),\n                  children: this.state.Patient\n                }\n              ],\n              isLoading: false\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const { dataSource, query, isLoading } = this.state;\n    const { handleOnClick } = this;\n    const validGroups = dataSource.filter(group => {\n      return group.children.length > 0;\n    });\n\n    let placeholder = `Search programs, patients${\n      this.props.category !== \"doctor\" ? \", doctors\" : \"\"\n    }`;\n\n    let searchresultAvialable = true;\n    if (query !== \"\" && validGroups.length <= 0) {\n      searchresultAvialable = false;\n    }\n\n    const options = searchresultAvialable\n      ? validGroups.map((group, index) => {\n          return (\n            <OptGroup\n              className=\"title\"\n              key={index}\n              label={\n                <div\n                  className=\"flex justify-content-space-between align-items-center\"\n                  style={{\n                    height: \"40px\",\n                    marginTop: \"16px\",\n                    paddingBottom: \"16px\"\n                  }}\n                >\n                  <span className=\"title fontsize14\">\n                    {group.title}({group.children.length})\n                  </span>\n                  {group.children.length > 1 && (\n                    <div>\n                      <Button\n                        className=\"viewall\"\n                        size=\"small\"\n                        onClick={this.gotToSearchResult}\n                        value={group.title}\n                      >\n                        View All\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              }\n            >\n              {group.title === \"Patient\"\n                ? group.children.map((opt, i) => (\n                    <Option\n                      key={opt.title + i}\n                      value={opt.title}\n                      className=\"searchoptions\"\n                    >\n                      <div\n                        className=\"flex align-items-center\"\n                        onClick={() => {\n                          handleOnClick(ENTITY.PATIENT, opt.id);\n                        }}\n                      >\n                        <div className=\"fontsize16 pr10\">\n                          {opt.title} ({opt.age} {opt.gender})\n                        </div>\n                        <div className=\"fontsize12 info\">{opt.disease} </div>{\" \"}\n                        <div className=\"dot steel-grey ml2 mr2\" />\n                        <div className=\"fontsize12 info\">\n                          {opt.addressLine1 && opt.addressLine1 + \",\"}\n                          {opt.city.length > 0 && opt.city + \",\"}\n                          {opt.country}\n                        </div>\n                      </div>\n                    </Option>\n                  ))\n                : group.children.map((opt, i) => (\n                    <Option\n                      key={opt.title + i}\n                      value={opt.title}\n                      className=\"searchoptions\"\n                    >\n                      {group.title === \"Program\" ? (\n                        <div\n                          className=\"flex align-items-center mb0\"\n                          onClick={() => {\n                            handleOnClick(ENTITY.PROGRAM, opt.id);\n                          }}\n                        >\n                          <div className=\"programtitle\">{opt.title} </div>\n                          <div className=\"validity flex align-items-center justify-content-center\">\n                            {opt.validity}\n                          </div>\n                        </div>\n                      ) : (\n                        <div\n                          className=\"flex align-items-center mb0  \"\n                          onClick={() => {\n                            handleOnClick(ENTITY.DOCTOR, opt.id);\n                          }}\n                        >\n                          <div className=\"programtitle\">{opt.title}</div>{\" \"}\n                          <span className=\"fontsize12 info pl20\">\n                            {opt.Speciality}\n                          </span>\n                        </div>\n                      )}\n                    </Option>\n                  ))}\n            </OptGroup>\n          );\n        })\n      : [\n          <Option key=\"no_result\">\n            {\" \"}\n            {isLoading ? \"Loading\" : \"No Result Found\"}\n          </Option>\n        ];\n    return (\n      <div\n        className=\"certain-category-search-wrapper searchbox\"\n        style={{ width: \"100%\" }}\n      >\n        <AutoComplete\n          className=\"certain-category-search\"\n          dropdownClassName=\"certain-category-search-dropdown searchbox\"\n          dropdownMatchSelectWidth={false}\n          dropdownStyle={{ width: \"50px\", position: \"fixed\" }}\n          size=\"small\"\n          style={{ width: \"100%\", border: \"none\" }}\n          dataSource={options}\n          placeholder={placeholder}\n          optionLabelProp=\"value\"\n          onChange={this.showoptions}\n          autoFocus=\"true\"\n          // defaultValue={this.props.searchedText}\n        >\n          <Input\n            prefix={\n              <img\n                alt=\"\"\n                src={Cross}\n                className=\"cross\"\n                onClick={this.props.hideSearchbar}\n              />\n            }\n          />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(SearchBox));\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport querystring from \"querystring\";\nimport HeaderIcons from \"./headersIcon\";\nimport placeHolder from \"../../../Assets/images/ico-placeholder-userdp.svg\";\nimport logo from \"../../../Assets/images/iqvia_logo_white.png\";\nimport \"./style.less\";\nimport messages from \"./message\";\nimport SearchBox from \"../SearchBox/index\";\nimport { USER_CATEGORY, path } from \"../../../constant\";\n\nclass AppHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchBar: false,\n      query: \"\"\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { location: { pathname, search } = {} } = this.props;\n    if (pathname === `${path.SEARCH}/`) {\n      const query = querystring.parse(search);\n      this.setState({ showSearchBar: true, query: query[\"?query\"] });\n    }\n  }\n\n  gotoMyProfile = () => {\n    this.props.history.push(path.MY_PROFILE);\n  };\n\n  showSearchBar = () => {\n    this.setState({\n      showSearchBar: true\n    });\n  };\n\n  hideSearchBar = () => {\n    this.setState({\n      showSearchBar: false\n    });\n  };\n\n  onClick() {\n    const { openModal } = this.props;\n    openModal();\n  }\n\n  signOut = () => {\n    const { signOut } = this.props;\n    signOut();\n  };\n\n  render() {\n    const {\n      intl: { formatMessage },\n      openModal,\n      user_data: {\n        basicInfo: { _id, category, profilePicLink = placeHolder } = {},\n        isProfileCompleted = false\n      } = {},\n      showmenu,\n      reportAdverseEvent,\n      showSearch,\n      showAddButton,\n      currentTab\n    } = this.props;\n    const { openAddDoctorModal, openAddPatientModal } = this;\n    const { showSearchBar } = this.state;\n\n    const menu = (\n      <Menu>\n        <Menu.Item onClick={this.gotoMyProfile}>\n          {formatMessage(messages.myProfile)}\n        </Menu.Item>\n        <Menu.Item onClick={this.signOut}>\n          {formatMessage(messages.signOut)}\n        </Menu.Item>\n      </Menu>\n    );\n    if (!this.props.authenticated) {\n      return (\n        <div\n          className={\n            \"fixed_header header flex align-items-center justify-content-space-between pl20 pr20\"\n          }\n        >\n          <div className={\"flex align-items-center\"}>\n            <a href={\"/\"}>\n              <div className=\"logo\">\n                <img alt=\"\" src={logo} />\n              </div>\n            </a>\n            <div className={\"pl10 bold\"} style={{ color: \"#fff\" }}>\n              {formatMessage(messages.headerlogo)}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        <div\n          className={\n            \"fixed_header header flex align-items-center justify-content-space-between pl20 pr20\"\n          }\n        >\n          <div className={\"flex align-items-center\"}>\n            <a href={\"/\"}>\n              <div className=\"logo\">\n                <img alt=\"\" src={logo} />\n              </div>\n            </a>\n          </div>\n          {this.props.signup ? (\n            <div className=\"signup-header padding-rl-10\">\n              <Button type=\"primary\" className=\"signup-btn margin-rl-10\">\n                {formatMessage(messages.signUp)}\n              </Button>\n              <Button className=\"signin-btn\">\n                {formatMessage(messages.signIn)}\n              </Button>\n            </div>\n          ) : (\n            <div className=\"flex align-items-center\">\n              {!showmenu && isProfileCompleted && (\n                <HeaderIcons\n                  category={category}\n                  openModal={openModal}\n                  showSearchbar={this.showSearchBar}\n                  reportAdverseEvent={reportAdverseEvent}\n                  userId={_id}\n                  showSearch={showSearch}\n                  showAddButton={showAddButton}\n                />\n              )}\n\n              <div>\n                <Dropdown\n                  overlay={menu}\n                  placement=\"bottomRight\"\n                  trigger={[\"click\"]}\n                >\n                  <div className=\"user-logo-container clickable\">\n                    <img\n                      alt=\"\"\n                      className=\"user-logo clickable\"\n                      src={profilePicLink}\n                    />\n                  </div>\n                </Dropdown>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className={showSearchBar ? \"searchbar\" : \"nosearchbar\"}>\n          {showSearchBar && (\n            <div>\n              <SearchBox\n                hideSearchbar={this.hideSearchBar}\n                searchedText={this.state.query}\n                category={category}\n              />\n            </div>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(AppHeader);\n","import React, { Component } from \"react\";\nimport { Select, Form } from \"antd\";\nimport isBlank from \"lodash-es/isEmpty\";\nimport clone from \"lodash-es/cloneDeep\";\nimport isEqual from \"lodash-es/isEqual\";\nimport filter from \"lodash-es/filter\";\nimport dropdown from \"../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport searchIcon from \"../../../Assets/images/ico-search.svg\";\n\nconst dropdownIcon = <img alt=\"\" src={dropdown} />;\nconst SearchIcon = <img alt=\"\" className=\"icons\" src={searchIcon} />;\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nexport default class CountryCityInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries_list: this.props.countries_list,\n      data: this.props.data,\n      is_loading: this.props.is_loading,\n      currentCountry: this.props.country || \"\"\n    };\n    this.countries = {};\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    if (isBlank(this.state.countries_list)) {\n      this.props.getCountries();\n    }\n    if (this.state.currentCountry !== \"\") {\n      this.props.getCities(this.state.currentCountry);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  componentWillReceiveProps(nextProps) {\n    const currentState = clone(this.state);\n    if (!isEqual(nextProps, currentState)) {\n      const { countries_list = [], data, is_loading } = nextProps;\n      this.setState(\n        {\n          countries_list: countries_list,\n          data: data,\n          is_loading: is_loading\n        },\n        () => {\n          this.updateCountries(countries_list);\n        }\n      );\n    }\n  }\n\n  updateCountries = data => {\n    if (data.length > 0) {\n      data.forEach(element => {\n        this.countries[element._id] = element.name;\n      });\n    }\n  };\n\n  onChangeCountry = value => {\n    const { validateFields, setFieldsValue } = this.props.form;\n    const { cityField, onChangeCountry } = this.props;\n    this.props.getCities(value);\n    // const countryName = this.countries[value];\n    setFieldsValue({ [cityField]: \"\" });\n    // setFieldsValue({ [countryNameField]: countryName });\n    validateFields([cityField]);\n    this.setState({ currentCountry: value });\n    if (onChangeCountry) {\n      onChangeCountry();\n    }\n  };\n\n  changeCityOptions = cityInput => {\n    this.setState({ cityInput: cityInput }, this.getCitiesOption);\n  };\n\n  getCitiesOption = () => {\n    const { currentCountry = \"\", data = {}, cityInput = \"\" } = this.state;\n    const { city: defaultCity = \"\" } = this.props;\n    if (currentCountry.length === 0) {\n      return (\n        <Option value=\"null\" disabled>\n          Please select Country first\n        </Option>\n      );\n    } else if (cityInput.length > 0) {\n      const countriesData = data[currentCountry];\n      if (countriesData) {\n        let { cities = {} } = countriesData;\n        cities = filter(cities, city => {\n          const cityName = JSON.stringify(city.name).toLowerCase();\n          if (cityName.includes(cityInput.toLowerCase())) {\n            return city;\n          }\n        });\n        let citiesList = [];\n        let index = -1;\n        for (let id in cities) {\n          if (index > 50) {\n            break;\n          }\n          const value = cities[id];\n\n          citiesList.push(\n            <Option value={value._id} key={value._id + ++index}>\n              {value.name}\n            </Option>\n          );\n        }\n        return citiesList;\n      } else {\n        return null;\n      }\n    } else {\n      const countriesData = data[currentCountry];\n      const { cities = {} } = countriesData || {};\n      let citiesList = [];\n      const defaultSelectedCity = cities[defaultCity];\n      if (defaultSelectedCity && defaultCity.length > 0) {\n        citiesList.push(\n          <Option value={defaultCity} key={defaultCity}>\n            {defaultSelectedCity.name}\n          </Option>\n        );\n      }\n      return citiesList;\n    }\n  };\n\n  getCountriesOption = () => {\n    const countries_list = this.props.countries_list;\n\n    let countryOptions = [];\n\n    if (Object.keys(countries_list).length > 0) {\n      let index = -1;\n      let value;\n      for (let id in countries_list) {\n        value = countries_list[id];\n\n        countryOptions.push(\n          <Option value={value._id} key={value._id + ++index}>\n            {value.name}\n          </Option>\n        );\n      }\n      return countryOptions;\n    } else {\n      return null;\n    }\n  };\n\n  getFieldsValue = value => {\n    const { onChangeCity } = this.props;\n    const { currentCountry } = this.state;\n    const countryId = currentCountry;\n    const cityId = value;\n    onChangeCity(countryId, cityId);\n  };\n\n  render() {\n    const { getCountriesOption, getCitiesOption } = this;\n    const cities = getCitiesOption();\n    const countries = getCountriesOption();\n    const {\n      fieldError = {},\n      cityLabel,\n      countryLabel,\n      cityField,\n      countryField,\n      city,\n      country,\n      cityRules = [],\n      countryRules = [],\n      getFieldDecorator\n    } = this.props;\n\n    return (\n      <div>\n        <div className={\"mt20\"}>\n          <FormItem\n            label={countryLabel}\n            validateStatus={fieldError[countryField] ? \"error\" : \"\"}\n            help={fieldError[countryField] || \"\"}\n          >\n            {getFieldDecorator(countryField, {\n              rules: countryRules,\n              initialValue: country,\n              onChange: this.onChangeCountry\n            })(\n              <Select\n                className={\"full-width iqvia-style-select fontsize14\"}\n                suffixIcon={dropdownIcon}\n                placeholder=\"\"\n                showSearch\n                autoComplete=\"off\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n                getPopupContainer={this.getParentNode}\n              >\n                {countries}\n              </Select>\n            )}\n          </FormItem>\n        </div>\n        <div className={\"mt20\"}>\n          <FormItem\n            label={cityLabel}\n            validateStatus={fieldError[cityField] ? \"error\" : \"\"}\n            help={fieldError[cityField] || \"\"}\n          >\n            {getFieldDecorator(cityField, {\n              rules: cityRules,\n              initialValue: city\n            })(\n              <Select\n                className={\"full-width iqvia-style-select fontsize14\"}\n                suffixIcon={SearchIcon}\n                placeholder=\"Search City\"\n                showSearch\n                autoComplete=\"off\"\n                optionFilterProp=\"children\"\n                notFoundContent={null}\n                filterOption={false}\n                // filterOption={(input, option) =>\n                //   option.props.children\n                //     .toLowerCase()\n                //     .indexOf(input.toLowerCase()) >= 0\n                // }\n                onSearch={this.changeCityOptions}\n                onChange={this.props.onChangeCity ? this.getFieldsValue : null}\n                getPopupContainer={this.getParentNode}\n              >\n                {cities}\n              </Select>\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n  }\n}\n","import CountryCity from \"../../Components/countryCityInput\";\nimport { connect } from \"react-redux\";\n\nimport { getCities, getCountries } from \"../../../modules/countryCity\";\n\nconst mapStateToProps = state => {\n  const { countryCities } = state;\n  return {\n    countries_list: countryCities.countries,\n    data: countryCities.cities,\n    is_loading: countryCities.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: data => dispatch(getCities(data)),\n    getCountries: () => dispatch(getCountries())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CountryCity);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./style.less\";\nimport verified from \"../../../Assets/images/ico-verified.svg\";\n\nconst CommonMessage = ({ msg, close, className }) => {\n  if (msg) {\n    if (close) {\n      setTimeout(close, 10000);\n    }\n    return (\n      <div className={`iqvia-successful-msg ${className}`}>\n        <div className=\"flex  pr8 pl24 pt12 pb12\">\n          <Row className=\"w100\">\n            <Col xs={12} sm={12} md={10} lg={10} xl={10} xxl={10}>\n              <div>\n                <img alt=\"\" src={verified} className=\"mr8 inline\" />\n                <div className=\"fontsize12 medium successfull-color inline\">\n                  {msg}\n                </div>\n              </div>\n            </Col>\n            {/* {close && (\n              <Col xs={12} sm={12} md={2} lg={2} xl={2} xxl={2}>\n                <Button className=\"got-it-btn\" onClick={close}>\n                  <div className=\"flex align-items-center justify-content-center\">\n                    <img alt=\"\" src={checkMark} />\n                    <div className=\"dark fontsize14 medium \">Got It</div>\n                  </div>\n                </Button>\n              </Col>\n            )} */}\n          </Row>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default CommonMessage;\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  cancel: {\n    id: \"calendarCard.appointment.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel Appointment\"\n  },\n  reschedule: {\n    id: \"calendarCard.appointment.reschedule\",\n    description: \"\",\n    defaultMessage: \"Reschedule appointment\"\n  },\n  rescheduleAll: {\n    id: \"calendarCard.appointment.rescheduleAll\",\n    description: \"\",\n    defaultMessage: \"Reschedule all Appointments\"\n  },\n  rescheduleThis: {\n    id: \"calendarCard.appointment.rescheduleThis\",\n    description: \"\",\n    defaultMessage: \"Reschedule this Appointment\"\n  },\n  editNotes: {\n    id: \"calendarCard.appointment.editNotes\",\n    description: \"\",\n    defaultMessage: \"Edit Notes\"\n  },\n  updateVitals: {\n    id: \"calendarCard.appointment.updateVitals\",\n    description: \"\",\n    defaultMessage: \"Update Vitals\"\n  },\n  updateMedication: {\n    id: \"calendarCard.appointment.updateMedication\",\n    description: \"\",\n    defaultMessage: \"Update Medication\"\n  },\n  updateClinicalReadings: {\n    id: \"calendarCard.appointment.updateClinicalReadings\",\n    description: \"\",\n    defaultMessage: \"Update Clinical Readings\"\n  },\n  doneButton: {\n    id: \"calendarCard.appointment.doneButton\",\n    description: \"\",\n    defaultMessage: \"Mark as done\"\n  },\n  undoButton: {\n    id: \"calendarCard.appointment.undoButton\",\n    description: \"\",\n    defaultMessage: \"Undo\"\n  },\n  joinCallButton: {\n    id: \"calendarCard.appointment.joinCallButton\",\n    description: \"\",\n    defaultMessage: \"Join Call\"\n  },\n  scheduledBy: {\n    id: \"calendarCard.appointment.scheduledBy\",\n    description: \"\",\n    defaultMessage: \"Scheduled by\"\n  },\n  markAsDoneBy: {\n    id: \"calendarCard.appointment.markAsDoneBy\",\n    description: \"\",\n    defaultMessage: \"Mark as done by\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport { ACTIONS } from \"../../../../Helper/event/appointment/constant\";\nimport messages from \"./message\";\n//import { EVENT } from \"../../../constant\";\n\nclass ActionsButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  handleMarkAsDone = () => {\n    const { handleMarkAsDone } = this.props;\n    handleMarkAsDone();\n  };\n\n  handleUndo = () => {\n    const { handleUndo } = this.props;\n    handleUndo();\n  };\n\n  render() {\n    const { formatMessage, handleUndo, handleMarkAsDone } = this;\n    const { data: { type, disabled } = {}, event: { id } = {} } = this.props;\n    switch (type) {\n      case ACTIONS.JOIN_CALL: {\n        return (\n          <div className=\"calendar-card-button\">\n            <Link to={`/remoteConsulting/${id}`} target=\"_blank\">\n              <Button className=\"done-button\" disabled={disabled}>\n                {formatMessage(messages.joinCallButton)}\n              </Button>\n            </Link>\n          </div>\n        );\n      }\n      case ACTIONS.MARK_AS_DONE: {\n        return (\n          <div className=\"calendar-card-button\">\n            <Button\n              disabled={disabled}\n              onClick={handleMarkAsDone}\n              className={\"done-button\"}\n            >\n              {formatMessage(messages.doneButton)}\n            </Button>\n          </div>\n        );\n      }\n      case ACTIONS.UNDO: {\n        return (\n          <div className=\"calendar-card-button\">\n            <Button\n              disabled={disabled}\n              onClick={handleUndo}\n              className={\"undo-button\"}\n            >\n              {formatMessage(messages.undoButton)}\n            </Button>\n          </div>\n        );\n      }\n      default:\n        return null;\n    }\n  }\n}\n\nexport default injectIntl(ActionsButton);\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { ACTIONS } from \"../../../../Helper/event/appointment/constant\";\nimport messages from \"./message\";\n\nclass MoreOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  handleEditNotes = () => {\n    const { editNotes } = this.props;\n    editNotes();\n  };\n\n  handleCancel = () => {\n    const { handleCancel } = this.props;\n    handleCancel();\n  };\n\n  handleRescheduleThis = () => {\n    const { handleRescheduleThis } = this.props;\n    handleRescheduleThis();\n  };\n\n  handleRescheduleAll = () => {\n    const { handleRescheduleAll } = this.props;\n    handleRescheduleAll();\n  };\n\n  handleUpdateVitals = () => {\n    const { handleUpdateVitals } = this.props;\n    handleUpdateVitals();\n  };\n\n  handleUpdateMedication = () => {\n    const { handleUpdateMedication } = this.props;\n    handleUpdateMedication();\n  };\n\n  handleUpdateClinicalReading = () => {\n    const { handleUpdateClinicalReading } = this.props;\n    handleUpdateClinicalReading();\n  };\n\n  moreOptions = key => {\n    const {\n      formatMessage,\n      handleUpdateClinicalReading,\n      handleUpdateMedication,\n      handleUpdateVitals,\n      handleRescheduleAll,\n      handleRescheduleThis,\n      handleEditNotes,\n      handleCancel\n    } = this;\n    switch (key) {\n      case ACTIONS.EDIT_NOTES_OF_APPOINTMENT: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleEditNotes}>\n            {formatMessage(messages.editNotes)}{\" \"}\n          </div>\n        );\n      }\n      case ACTIONS.CANCEL_APPOINTMENT: {\n        return (\n          <div key={key} className=\"drop-down cancel\" onClick={handleCancel}>\n            {formatMessage(messages.cancel)}\n          </div>\n        );\n      }\n      case ACTIONS.RESCHEDULE_APPOINTMENT: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleRescheduleThis}>\n            {formatMessage(messages.reschedule)}\n          </div>\n        );\n      }\n      case ACTIONS.RESCHEDULE_THIS_APPOINTMENT: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleRescheduleThis}>\n            {formatMessage(messages.rescheduleThis)}\n          </div>\n        );\n      }\n      case ACTIONS.RESCHEDULE_ALL_APPOINTMENT: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleRescheduleAll}>\n            {formatMessage(messages.rescheduleAll)}\n          </div>\n        );\n      }\n      case ACTIONS.UPADTE_VITALS: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleUpdateVitals}>\n            {formatMessage(messages.updateVitals)}\n          </div>\n        );\n      }\n      case ACTIONS.UPDATE_CLINICAL_READING: {\n        return (\n          <div\n            key={key}\n            className=\"drop-down\"\n            onClick={handleUpdateClinicalReading}\n          >\n            {formatMessage(messages.updateClinicalReadings)}\n          </div>\n        );\n      }\n      case ACTIONS.UPDATE_MEDICATION: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleUpdateMedication}>\n            {formatMessage(messages.updateMedication)}\n          </div>\n        );\n      }\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { actions = [] } = this.props;\n    return actions.map(val => this.moreOptions(val));\n  }\n}\n\nexport default injectIntl(MoreOptions);\n","import React from \"react\";\n\nimport { APPOINTMENT_TYPE } from \"../../../../constant\";\n\nimport medic from \"../../../../Assets/images/calendar/ico-apt-type-line.png\";\nimport followup from \"../../../../Assets/images/calendar/ico-apt-type-line.png\";\nimport material from \"../../../../Assets/images/calendar/ico-apt-type-line.png\";\n\nconst medicationIcon = (\n  <img className=\"icon-activity-modes\" alt=\"\" src={medic} />\n);\n\nconst followupIcon = (\n  <img className=\"icon-activity-modes\" alt=\"\" src={followup} />\n);\n\nconst materialIcon = (\n  <img className=\"icon-activity-modes\" alt=\"\" src={material} />\n);\n\nexport default props => {\n  const { event: { data: { activityType: type } = {} } = {} } = props;\n\n  switch (type) {\n    case APPOINTMENT_TYPE.MEDICATION:\n      return medicationIcon;\n    case APPOINTMENT_TYPE.MATERIAL_DELIVERY:\n      return materialIcon;\n    case APPOINTMENT_TYPE.FOLLOWUP:\n      return followupIcon;\n    default:\n      return null;\n  }\n};\n","import React from \"react\";\n\nimport { EVENT } from \"../../../../constant\";\n\nimport cardVisit from \"../../../../Assets/images/calendar/ico-visit-activity-flat-clr.png\";\nimport cardVisitMissed from \"../../../../Assets/images/calendar/ico-visit-activity-missed-flat-clr.svg\";\nimport cardCall from \"../../../../Assets/images/calendar/ico-mobile-activity-flat-clr.svg\";\nimport cardCallMissed from \"../../../../Assets/images/calendar/ico-mobile-activity-missed-flat-clr.svg\";\nimport cardVideoCall from \"../../../../Assets/images/calendar/ico-call-activity-flat-clr.svg\";\nimport cardVideoCallMissed from \"../../../../Assets/images/calendar/ico-video-activity-missed-flat-clr.svg\";\n\nconst cardVisitIcon = <img className=\"icons\" alt=\"\" src={cardVisit} />;\nconst cardVisitIconMissed = (\n  <img className=\"icons\" alt=\"\" src={cardVisitMissed} />\n);\nconst cardCallIcon = <img className=\"icons\" alt=\"\" src={cardCall} />;\nconst cardCallIconMissed = (\n  <img className=\"icons\" alt=\"\" src={cardCallMissed} />\n);\nconst cardVideoCallIcon = <img className=\"icons\" alt=\"\" src={cardVideoCall} />;\nconst cardVideoCallIconMissed = (\n  <img className=\"icons\" alt=\"\" src={cardVideoCallMissed} />\n);\n\nexport default props => {\n  const { event: { status, data: { activityMode: mode } = {} } = {} } = props;\n  switch (mode) {\n    case EVENT.ACTIVITY_MODE.CALL:\n      return status === EVENT.STATUS.PASSED ? cardCallIconMissed : cardCallIcon;\n    case EVENT.ACTIVITY_MODE.VISIT:\n      return status === EVENT.STATUS.PASSED\n        ? cardVisitIconMissed\n        : cardVisitIcon;\n    case EVENT.ACTIVITY_MODE.CHAT:\n      return status === EVENT.STATUS.PASSED\n        ? cardVideoCallIconMissed\n        : cardVideoCallIcon;\n    default:\n      return null;\n  }\n};\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport withRouter from \"react-router/es/withRouter\";\nimport { Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport messages from \"./message\";\nimport ActionButton from \"./actionButton\";\nimport MoreOptions from \"./moreoptions\";\nimport ActivityIcon from \"./activityIcon\";\nimport AppointmentIcon from \"./appointmentTypeIcon\";\nimport AppointmentHelper from \"../../../../Helper/event/appointment\";\nimport profilePicPlaceHolder from \"../../../../Assets/images/ico-placeholder-userdp.svg\";\nimport { USER_CATEGORY, EVENT } from \"../../../../constant\";\nimport \"../style.less\";\n\nconst { Meta } = Card;\n\nclass AppointmentCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      cardClicked: false,\n      modalOpen: false\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  handleClick = () => {\n    this.setState({\n      visible: !this.state.visible\n    });\n  };\n\n  handleCardClick = () => {\n    this.setState({\n      cardClicked: true\n    });\n  };\n\n  handleLeave = () => {\n    this.setState({\n      visible: false,\n      cardClicked: false\n    });\n  };\n\n  handleEditNotes = () => {\n    const { editNotes } = this.props;\n    editNotes();\n  };\n\n  handleCancel = () => {\n    const { openCancelModal } = this.props;\n    openCancelModal();\n  };\n\n  handleMarkAsDone = () => {\n    const { setAppointmentStatus } = this.props;\n    setAppointmentStatus(EVENT.STATUS.COMPLETED);\n  };\n\n  handleUndo = () => {\n    const {\n      setAppointmentStatus,\n      event: { startTime, endTime }\n    } = this.props;\n    const current = moment();\n    console.log(current, moment(endTime));\n    if (moment(endTime).isBefore(current)) {\n      setAppointmentStatus(EVENT.STATUS.PASSED);\n    } else if (moment(startTime).isAfter(current)) {\n      setAppointmentStatus(EVENT.STATUS.PENDING);\n    } else if (\n      moment(startTime).isBefore(current) &&\n      moment(endTime).isAfter(current)\n    ) {\n      setAppointmentStatus(EVENT.STATUS.STARTED);\n    }\n  };\n\n  handleRescheduleThis = () => {\n    const { rescheduleEvent } = this.props;\n    rescheduleEvent(false);\n  };\n\n  handleRescheduleAll = () => {\n    const { rescheduleEvent } = this.props;\n    rescheduleEvent(true);\n  };\n\n  getPatientId = () => {\n    const {\n      participantOne: {\n        basicInfo: {\n          category: participantOneCategory,\n          _id: participantOneId\n        } = {}\n      } = {},\n      participantTwo: { basicInfo: { _id: participantTwoId } = {} } = {}\n    } = this.props;\n\n    return participantOneCategory === USER_CATEGORY.PATIENT\n      ? participantOneId\n      : participantTwoId;\n  };\n\n  handleUpdateVitals = () => {\n    const { viewer: { basicInfo: { category = {} } = {} } = {} } = this.props;\n    const id = this.getPatientId();\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Vital\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Vital\");\n    }\n  };\n\n  handleUpdateMedication = () => {\n    const { viewer: { basicInfo: { category = {} } = {} } = {} } = this.props;\n    const id = this.getPatientId();\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Medication\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Medication\");\n    }\n  };\n\n  handleUpdateClinicalReading = () => {\n    const { viewer: { basicInfo: { category = {} } = {} } = {} } = this.props;\n    const id = this.getPatientId();\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Clinical-Reading\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Clinical-Reading\");\n    }\n  };\n\n  getAppointmentWithCategoryText = user => {\n    const {\n      basicInfo: { category }\n    } = user;\n    switch (category) {\n      case USER_CATEGORY.CARE_COACH:\n        return \"Coach\";\n      case USER_CATEGORY.DOCTOR:\n        return \"Doctor\";\n      case USER_CATEGORY.PATIENT:\n        return \"Patient\";\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { event = {}, modal = false, hideAction = false } = this.props;\n    const { id, status } = event;\n    const appointmentHelper = new AppointmentHelper(this.props);\n\n    const {\n      handleCancel,\n      handleUpdateClinicalReading,\n      handleUpdateMedication,\n      handleUpdateVitals,\n      handleRescheduleThis,\n      handleRescheduleAll,\n      handleEditNotes,\n      handleClick,\n      handleLeave,\n      handleCardClick,\n      formatMessage\n    } = this;\n\n    const startTime = appointmentHelper.getStartTime();\n    const isDisabled = appointmentHelper.isCardEnable();\n    const notes = appointmentHelper.getNotes();\n    const statusName = appointmentHelper.getStatus();\n    const activityName = appointmentHelper.getActivityName();\n    const activityTypeName = appointmentHelper.getActivityTypeName();\n    const eventDuration = appointmentHelper.getEventDuration();\n\n    const lastActedUserName = appointmentHelper.getLastActedUser();\n\n    const appointmentWith = appointmentHelper.getAppointmentWithTag();\n\n    const {\n      basicInfo: {\n        name: appointmentWithUserName,\n        profilePicLink: appointmentWithProfilePic = profilePicPlaceHolder\n      } = {}\n    } = appointmentWith;\n\n    const categoryName = this.getAppointmentWithCategoryText(appointmentWith);\n\n    const { match: { params: { entity } = {} } = {} } = this.props;\n\n    const cardStatusCompletedBy =\n      status === EVENT.STATUS.COMPLETED\n        ? formatMessage(messages.markAsDoneBy)\n        : formatMessage(messages.scheduledBy);\n\n    const { visible } = this.state;\n    return (\n      <Fragment>\n        <Card\n          onMouseLeave={modal ? null : handleLeave}\n          onClick={handleCardClick}\n          className=\"calender-card\"\n          hoverable={!hideAction}\n          title={[\n            <div key={id}>\n              <div className=\"card-top\">\n                {cardStatusCompletedBy} {lastActedUserName}\n              </div>\n              <div className=\"card-title\">\n                <div className=\"card-title-left\">\n                  <div className=\"time-icon\">\n                    <AppointmentIcon event={event} />\n                    <span className=\"time-text\">\n                      {startTime}, {eventDuration}\n                    </span>\n                  </div>\n                  <div\n                    className={`status ${\n                      status === EVENT.STATUS.COMPLETED ||\n                      status === EVENT.STATUS.STARTED\n                        ? \"status-completed\"\n                        : status === EVENT.STATUS.PASSED\n                        ? \"status-overdue\"\n                        : \"status-upcoming\"\n                    }`}\n                  >\n                    {statusName}\n                  </div>\n                </div>\n                {!hideAction && (\n                  <ActionButton\n                    event={event}\n                    data={appointmentHelper.getAction()}\n                    handleMarkAsDone={this.handleMarkAsDone}\n                    handleUndo={this.handleUndo}\n                  />\n                )}\n              </div>\n              <div className=\"card-cover\">\n                <span className=\"coach-activity\">\n                  {categoryName} {activityName}\n                </span>\n                <span className=\"coach-avatar\">\n                  <Avatar src={appointmentWithProfilePic} />\n                  {appointmentWithUserName}\n                </span>\n                <div className=\"card-modal-options mt8\">\n                  <div className=\"card-activity\">\n                    <ActivityIcon event={event} />\n                    <span>{activityTypeName}</span>\n                  </div>\n                  {hideAction !== true && (\n                    <div className=\"more-options\">\n                      <div className=\"mr25\" onClick={handleClick}>\n                        <span>{visible ? \"\" : \"More Options\"}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ]}\n        >\n          {!hideAction && (\n            <Meta\n              description={\n                notes\n                  ? [\n                      <div\n                        key={id}\n                        className=\"card-meta text-overflow break-word\"\n                      >\n                        <div className={visible ? \"visible\" : \"invisible\"}>\n                          {notes}\n                        </div>\n                      </div>\n                    ]\n                  : []\n              }\n            />\n          )}\n          {!hideAction && (\n            <Fragment>\n              <div key={id} className=\"options\">\n                <div className=\"more-options\">\n                  {visible ? <hr /> : \"\"}\n                  <div onClick={handleClick}>\n                    <span>{visible ? \"Less Options\" : \"\"}</span>\n                  </div>\n                </div>\n                {visible && (\n                  <MoreOptions\n                    actions={appointmentHelper.getMoreOption()}\n                    {...this.props}\n                    editNotes={handleEditNotes}\n                    handleCancel={handleCancel}\n                    handleRescheduleThis={handleRescheduleThis}\n                    handleRescheduleAll={handleRescheduleAll}\n                    handleUpdateVitals={handleUpdateVitals}\n                    handleUpdateMedication={handleUpdateMedication}\n                    handleUpdateClinicalReading={handleUpdateClinicalReading}\n                  />\n                )}\n              </div>\n            </Fragment>\n          )}\n        </Card>\n      </Fragment>\n    );\n  }\n}\n//export default CalendarCard;\nexport default withRouter(injectIntl(AppointmentCard));\n","import { connect } from \"react-redux\";\nimport AppointmentCard from \"../../Components/Cards/appointment\";\nimport { setAppointmentStatus } from \"../../../modules/events\";\nimport { open } from \"../../../modules/modals\";\nimport { GLOBAL_MODALS, EVENT_ACTION } from \"../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    events: { events } = {},\n    users,\n    auth: { authenticated_user } = {}\n  } = state;\n  return {\n    events,\n    users,\n    viewerId: authenticated_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openCancelModal: (eventId, calendarUserId) => () =>\n      dispatch(\n        open(GLOBAL_MODALS.CANCEL_APPOINTMENT, eventId, null, calendarUserId)\n      ),\n    rescheduleEvent: eventId => series =>\n      dispatch(\n        open(GLOBAL_MODALS.EVENT_MODAL, eventId, EVENT_ACTION.RESCHEDULE, {\n          series\n        })\n      ),\n    editNotes: eventId => () =>\n      dispatch(\n        open(GLOBAL_MODALS.EVENT_MODAL, eventId, EVENT_ACTION.EDIT_NOTES)\n      ),\n    setAppointmentStatus: eventId => status =>\n      dispatch(setAppointmentStatus({ eventId: eventId, status: status }))\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { id, calendarUserId, hideAction, modal } = ownProps;\n  const { users, events, viewerId } = stateProps;\n  const event = events[id] || {};\n  const {\n    editNotes: editNotesDispatch,\n    openCancelModal: openCancelModalDispatch,\n    setAppointmentStatus: setAppointmentStatusDispatch,\n    rescheduleEvent: rescheduleEventDispatch\n  } = dispatchProps;\n  const {\n    data: {\n      participantOne: participantOneId,\n      participantTwo: participantTwoId\n    } = {}\n  } = event;\n  const viewer = users[viewerId] || {};\n  const participantOne = users[participantOneId] || {};\n  const participantTwo = users[participantTwoId] || {};\n  const calendarUser = users[calendarUserId] || {};\n  const editNotes = editNotesDispatch(id);\n  const openCancelModal = openCancelModalDispatch(id, calendarUserId);\n  const setAppointmentStatus = setAppointmentStatusDispatch(id);\n  const rescheduleEvent = rescheduleEventDispatch(id);\n\n  return {\n    viewer,\n    participantOne,\n    participantTwo,\n    calendarUser,\n    hideAction,\n    modal,\n    event,\n    editNotes,\n    openCancelModal,\n    setAppointmentStatus,\n    rescheduleEvent\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergePropsToState\n)(AppointmentCard);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  cancel: {\n    id: \"calendarCard.reminder.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel Reminder\"\n  },\n  reschedule: {\n    id: \"calendarCard.reminder.reschedule\",\n    description: \"\",\n    defaultMessage: \"Reschedule reminder\"\n  },\n  rescheduleThis: {\n    id: \"calendarCard.reminder.rescheduleThis\",\n    description: \"\",\n    defaultMessage: \"Reschedule this reminder\"\n  },\n  rescheduleAll: {\n    id: \"calendarCard.reminder.rescheduleAll\",\n    description: \"\",\n    defaultMessage: \"Reschedule All Reminder\"\n  },\n  editNotes: {\n    id: \"calendarCard.reminder.editNotes\",\n    description: \"\",\n    defaultMessage: \"Edit Notes\"\n  },\n  addNotes: {\n    id: \"calendarCard.reminder.addNotes\",\n    description: \"\",\n    defaultMessage: \"Add Notes\"\n  },\n  editReminder: {\n    id: \"calendarCard.reminder.editReminder\",\n    description: \"\",\n    defaultMessage: \"Edit Reminder\"\n  },\n  deleteReminder: {\n    id: \"calendarCard.reminder.deleteReminder\",\n    description: \"\",\n    defaultMessage: \"Delete Reminder\"\n  },\n  scheduledBy: {\n    id: \"calendarCard.reminder.scheduledBy\",\n    description: \"\",\n    defaultMessage: \"Scheduled by\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\n\nimport { ACTIONS } from \"../../../../Helper/event/reminder/constant\";\n\nimport messages from \"./message\";\n\nclass MoreOptions extends Component {\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  handleEditNotes = e => {\n    e.preventDefault();\n    const { editNotes } = this.props;\n    editNotes();\n  };\n\n  handleReschedule = e => {\n    e.preventDefault();\n    const { rescheduleEvent } = this.props;\n    rescheduleEvent(false);\n  };\n\n  handleRescheduleAll = e => {\n    e.preventDefault();\n    const { rescheduleEvent } = this.props;\n    rescheduleEvent(true);\n  };\n\n  handleCancel = e => {\n    e.preventDefault();\n    const { openCancelModal } = this.props;\n    openCancelModal();\n  };\n\n  moreOptions = key => {\n    const {\n      formatMessage,\n      handleReschedule,\n      handleRescheduleAll,\n      handleEditNotes,\n      handleCancel\n    } = this;\n    switch (key) {\n      case ACTIONS.EDIT_NOTES_OF_REMINDER: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleEditNotes}>\n            {formatMessage(messages.editNotes)}{\" \"}\n          </div>\n        );\n      }\n      case ACTIONS.CANCEL_REMINDER: {\n        return (\n          <div key={key} className=\"drop-down cancel\" onClick={handleCancel}>\n            {formatMessage(messages.cancel)}\n          </div>\n        );\n      }\n      case ACTIONS.RESCHEDULE_REMINDER: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleReschedule}>\n            {formatMessage(messages.reschedule)}\n          </div>\n        );\n      }\n      case ACTIONS.RESCHEDULE_THIS_REMINDER: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleReschedule}>\n            {formatMessage(messages.rescheduleThis)}\n          </div>\n        );\n      }\n      case ACTIONS.RESCHEDULE_ALL_REMINDER: {\n        return (\n          <div key={key} className=\"drop-down\" onClick={handleRescheduleAll}>\n            {formatMessage(messages.rescheduleAll)}\n          </div>\n        );\n      }\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { actions = [] } = this.props;\n\n    return actions.map(val => this.moreOptions(val));\n  }\n}\n\nexport default injectIntl(MoreOptions);\n","import React, { Component, Fragment } from \"react\";\nimport withRouter from \"react-router/es/withRouter\";\nimport { Avatar, Card } from \"antd\";\nimport messages from \"./message\";\nimport { injectIntl } from \"react-intl\";\nimport { USER_CATEGORY } from \"../../../../constant\";\nimport cardReminder from \"../../../../Assets/images/calendar/ico-reminder-flat-clr.svg\";\nimport profilePicPlaceHolder from \"../../../../Assets/images/ico-placeholder-userdp.svg\";\nimport ReminderHelper from \"../../../../Helper/event/reminder\";\nimport MoreOptions from \"./moreoptions\";\n//import \"../style.less\";\n\nconst cardReminderIcon = <img className=\"icons\" alt=\"\" src={cardReminder} />;\nconst { Meta } = Card;\n\nclass ReminderCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      cardClicked: false,\n      modalOpen: false\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  handleClick = () => {\n    this.setState({\n      visible: !this.state.visible\n    });\n  };\n\n  handleCardClick = () => {\n    this.setState({\n      cardClicked: true\n    });\n  };\n\n  handleLeave = () => {\n    this.setState({\n      visible: false,\n      cardClicked: false\n    });\n  };\n\n  /*  handleDelete = e => {\n    e.preventDefault();\n    const {\n      deleteReminder,\n      eventDetails: { id },\n      openedUserId\n    } = this.props;\n    deleteReminder(id, openedUserId);\n  };\n\n  handleEditReminder = e => {\n    e.preventDefault();\n    const {\n      editReminder,\n      eventDetails: { id, data: { repeat } = {} }\n    } = this.props;\n    const series = repeat && repeat !== REPEAT_TYPE.NONE;\n    editReminder(id, series);\n  };\n\n  handleAddNotes = e => {\n    e.preventDefault();\n    const {\n      addNotes,\n      eventDetails: { id }\n    } = this.props;\n    addNotes(id);\n  };*/\n\n  getReminderWithCategoryText(user = {}) {\n    const { basicInfo: { category } = {} } = user;\n    switch (category) {\n      case USER_CATEGORY.CARE_COACH:\n        return \"Coach\";\n      case USER_CATEGORY.DOCTOR:\n        return \"Doctor\";\n      case USER_CATEGORY.PATIENT:\n        return \"Patient\";\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { event = {}, hideAction = false, modal = false } = this.props;\n    const { handleClick, handleLeave, handleCardClick, formatMessage } = this;\n\n    const { id } = event;\n\n    const reminderHelper = new ReminderHelper(this.props);\n\n    const startTime = reminderHelper.getStartTime();\n    const startDate = reminderHelper.getStartDate();\n    // const isDisabled = reminderHelper.isCardEnable();\n    const notes = reminderHelper.getNotes();\n\n    const lastActedUserName = reminderHelper.getLastActedUser();\n\n    const reminderWith = reminderHelper.getReminderWithTag();\n\n    const title = reminderHelper.getReminderTitle();\n\n    const {\n      basicInfo: {\n        name: reminderWithUserName,\n        profilePicLink: reminderWithProfilePic = profilePicPlaceHolder\n      } = {}\n    } = reminderWith || {}; //some time reminder have only one participant\n\n    const categoryName = this.getReminderWithCategoryText(reminderWith);\n\n    const { visible } = this.state;\n    return (\n      <Fragment>\n        <Card\n          onMouseLeave={modal ? null : handleLeave}\n          onClick={handleCardClick}\n          className=\"calender-card\"\n          hoverable={!hideAction}\n          title={[\n            <div key={id}>\n              <div className=\"card-top\">\n                {formatMessage(messages.scheduledBy)} {lastActedUserName}\n              </div>\n              <div className=\"card-title\">\n                <div className=\"reminder-card-title\">\n                  {cardReminderIcon}\n                  <span className=\"time-text\">\n                    {startTime}, {startDate}\n                  </span>\n                </div>\n              </div>\n              <div className=\"card-modal-options\">\n                <div className=\"card-cover\">\n                  <div className=\"coach-activity-reminder mb8\">\n                    {title\n                      ? title.length < 30\n                        ? title\n                        : title.substr(0, 30) + \"...\"\n                      : null}\n                  </div>\n                  {reminderWith && (\n                    <Fragment>\n                      <span className=\"coach-activity\">{categoryName}</span>\n                      <span className=\"coach-avatar\">\n                        <Avatar src={reminderWithProfilePic} />\n                        {reminderWithUserName}\n                      </span>\n                    </Fragment>\n                  )}\n                </div>\n              </div>\n            </div>\n          ]}\n        >\n          {!hideAction && (\n            <Meta\n              description={\n                notes\n                  ? [\n                      <div\n                        key={id}\n                        className=\"card-meta text-overflow break-word\"\n                      >\n                        <div className={visible ? \"visible\" : \"invisible\"}>\n                          {notes}\n                        </div>\n                      </div>\n                    ]\n                  : []\n              }\n            />\n          )}\n          {hideAction !== true && (\n            <div className=\"reminder-more-options\">\n              <div className=\"right\" onClick={handleClick}>\n                <span>{visible ? \"\" : \"More Options\"}</span>\n              </div>\n            </div>\n          )}\n          {!hideAction && (\n            <Fragment>\n              <div key={id} className=\"options\">\n                <div className=\"more-options\">\n                  {visible ? <hr /> : \"\"}\n                  <div onClick={handleClick}>\n                    <span>{visible ? \"Less Options\" : \"\"}</span>\n                  </div>\n                </div>\n                {visible && (\n                  <MoreOptions\n                    actions={reminderHelper.getMoreOption()}\n                    {...this.props}\n                  />\n                )}\n              </div>\n            </Fragment>\n          )}\n        </Card>\n      </Fragment>\n    );\n  }\n}\nexport default withRouter(injectIntl(ReminderCard));\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ReminderCard from \"../../Components/Cards/reminder\";\nimport { open } from \"../../../modules/modals\";\nimport { GLOBAL_MODALS, EVENT_ACTION } from \"../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    events: { events } = {},\n    users,\n    auth: { authenticated_user } = {}\n  } = state;\n  return {\n    events,\n    users,\n    viewer_id: authenticated_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openCancelModal: (eventId, calendarUserId) => () =>\n      dispatch(\n        open(GLOBAL_MODALS.CANCEL_APPOINTMENT, eventId, null, calendarUserId)\n      ),\n    rescheduleEvent: eventId => series =>\n      dispatch(\n        open(GLOBAL_MODALS.EVENT_MODAL, eventId, EVENT_ACTION.RESCHEDULE, {\n          series\n        })\n      ),\n    editNotes: eventId => () =>\n      dispatch(\n        open(GLOBAL_MODALS.EVENT_MODAL, eventId, EVENT_ACTION.EDIT_NOTES)\n      )\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { id, calendarUserId, hideAction, modal } = ownProps;\n  const { users, events, viewer_id } = stateProps;\n  const event = events[id] || {};\n  const {\n    data: {\n      participantOne: participantOneId,\n      participantTwo: participantTwoId\n    } = {}\n  } = event;\n  const viewer = users[viewer_id] || {};\n  const participantOne = users[participantOneId] || {};\n  const participantTwo = users[participantTwoId] || {};\n  const calendarUser = users[calendarUserId] || {};\n\n  const {\n    editNotes: editNotesDispatch,\n    openCancelModal: openCancelModalDispatch,\n    rescheduleEvent: rescheduleEventDispatch\n  } = dispatchProps;\n\n  const editNotes = editNotesDispatch(id);\n  const openCancelModal = openCancelModalDispatch(id, calendarUserId);\n  const rescheduleEvent = rescheduleEventDispatch(id);\n\n  return {\n    viewer,\n    participantOne,\n    participantTwo,\n    calendarUser,\n    hideAction,\n    modal,\n    event,\n    openCancelModal,\n    rescheduleEvent,\n    editNotes\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergePropsToState\n  )(ReminderCard)\n);\n"],"sourceRoot":""}