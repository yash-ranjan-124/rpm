{"version":3,"sources":["Components/page/EditProfile/message.js","Components/Header/message.js","Components/Header/careCoachMenu.js","Components/Header/patientsMenu.js","Components/Header/doctorsMenu.js","Components/Header/headersIcon.js","Components/Searchbox/getChildrens.js","Components/Searchbox/message.js","Components/Searchbox/index.js","Components/Header/index.js","Components/CommonError/index.js","Components/MobileInput/index.js","Components/page/EditProfile/careCoach/addPatient/addPatient.js","Containers/AddPatient/addPatient.js","Components/page/EditProfile/careCoach/addDoctor/addDoctor.js","Containers/AddDoctor/addDoctor.js"],"names":["react_intl__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","messages","defineMessages","myProfile","id","defaultMessage","personal","contacts","medical","settings","insurance","insuranceProvider","insurancePolicy","insuranceExpiresOn","hospital","work","hospitalName","speciality","specialityRule","licenseNumber","bio","addressLine1","addressLine2","zipcode","cityLabel","countryLabel","organisationName","services","notBlank","nursingTitle","physicalTherapyTitle","occupationalTherapyTitle","speechAndLanguagePathologyTitle","medicalCounsellingTitle","healthAideTitle","nursing","physicalTherapy","occupationalTherapy","speechAndLanguagePathology","medicalCounselling","healthAide","cardiacCareTitle","diabetesCareTitle","smokingCessationTitle","respiteCareTitle","homemakingTitle","cardiacCare","diabetesCare","smokingCessation","respiteCare","homemaking","medicalServices","homeHealthCare","specialCare","nonMedicalServices","basic","chiefComplaint","allergies","useComma","surgeriesFracture","otherConditions","vital","vitalSubtitle","bodyTemperature","respirationRate","breathePerMinute","pulseRate","bpm","bloodPressure","bpUnit","clinicalReadings","clinicalReadingsSubtitle","notBeBlank","caseDoctor","notAssigned","careCoach","relativeName","parent","spouse","guardian","relativeMobile","contactRelative","emergencyContactMobile","emergencyContactName","emergencyContactRule","phoneNumberRule","careCoachphoneNumberRule","changePassword","calendarSynced","smsAlerts","smsWillBeSent","emailAlerts","emailWillBeSent","pushAlerts","pushWillBeSent","reminderAlerts","reminderWillBeSent","account","notifications","selectPhotoTitle","photoOKText","cropImage","photoVisibleInfo","verified","notVerified","mobile","nameRule","dobRule","genderRule","localityRule","zipcodeRule","cityRule","countryRule","sendOTP","fullName","dateOfBirth","email","male","female","city","country","consentForm","idProof","uploadedOn","newPatient","newDoctor","patientEmail","doctorEmail","incorrectEmail","program","programError","newPatientSuccess","newPatientFailure","newDoctorSuccess","newDoctorFailure","licenseId","hospitalError","relativeNumberError","emergencyNumberError","dashboard","mycalender","surveys","newAppointment","reportAdverseEvent","headerlogo","signUp","signIn","MyMedicalDetails","signOut","injectIntl","props","formatMessage","intl","redirectToTab","tabValue","history","push","pathname","concat","react_default","a","createElement","es_menu","mode","className","selectedKeys","currentTab","Item","key","DASHBOARD_MENU","HOME","onClick","CALENDAR","PROGRAMS","SURVEYS","MEDICALS","currentAddMenu","category","showSearchbar","userId","showSearch","showAddButton","CareCoachAddmenu","e","openModal","GLOBAL_MODALS","EVENT_MODAL","openAddPatientModal","openAddDoctorModal","ADVERSE_EVENTS","PatientAddmenu","USER_CATEGORY","CARE_COACH","PATIENT","DOCTOR","dropdown","overlay","trigger","overlayStyle","paddingTop","paddingRight","position","es_button","icon","alt","src","search","chat","alert","getProgramChildren","programs","programChildred","Object","keys","forEach","obj","_id","moment","diff","expiresOn","title","name","validity","VALIDITY","ACTIVE","EXPIRE","getPatientChildren","patients","patientChildred","patient","gender","dob","_patient$homeAddress","homeAddress","_patient$profilePicLi","profilePicLink","UserDpPlaceholder","disease","years","ENTITY","age","getDoctorChildren","doctors","doctorChildred","doctor","Speciality","Option","auto_complete","OptGroup","Searchbox","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gotToSearchResult","preventDefault","targetValue","target","value","setState","dataSource","path","SEARCH","state","query","handleOnClick","entity","showoptions","getoptions","assertThisInitialized","isLoading","Program","Patient","Doctor","throttle","bind","trim","doRequest","params","url","method","REQUEST_TYPE","GET","data","undefined","payload","users","result","prevState","_this2","children","_this3","_this$state","validGroups","filter","group","length","placeholder","searchresultAvialable","options","map","index","label","style","height","marginTop","paddingBottom","size","opt","i","PROGRAM","width","dropdownClassName","dropdownMatchSelectWidth","dropdownStyle","border","optionLabelProp","onChange","autoFocus","input","prefix","Cross","hideSearchbar","Component","withRouter","AppHeader","openAddPatient","openAddDoctor","gotoMyProfile","MY_PROFILE","_this$props$location","location","querystring","parse","event","_this$props","_this$props$user_data","user_data","_this$props$user_data2","basicInfo","_this$props$user_data3","placeHolder","_this$props$user_data4","isProfileCompleted","showmenu","menu","authenticated","react","addPatient","handleCancel","visible","addDoctor","assign","href","logo","signup","careCoachMenu","setTabDashboard","patientsMenu","doctorsMenu","type","headersIcon","placement","Components_Searchbox","searchedText","color","ErrorComponent","_ref","msg","close","setTimeout","react__WEBPACK_IMPORTED_MODULE_2___default","antd_es_row__WEBPACK_IMPORTED_MODULE_0__","antd_es_col__WEBPACK_IMPORTED_MODULE_1__","xs","sm","md","lg","xl","xxl","icoError","FormItem","antd_es_form__WEBPACK_IMPORTED_MODULE_8__","antd_es_select__WEBPACK_IMPORTED_MODULE_7__","ParsedCountryCodes","countryCode","callingCountries","all","cc","countryCallingCodes","code","getParsedCountryCode","getCountryAlpha","arguments","country_alpha","alpha2","MobileLabel","_Component","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","apply","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_this$props$countryCo","_this$props$phoneNumb","phoneNumber","react__WEBPACK_IMPORTED_MODULE_9___default","react_country_flag__WEBPACK_IMPORTED_MODULE_11__","svg","MobileInput","_Component2","getParentNode","t","parentNode","selectedCountryCode","val","showDropDown","suggestedCountryCodes","indexOf","setInitialCountryCode","searchCountryCode","isNumber","rule","callback","match","debounce","_this$props$countryCo2","nextProps","currentProps","clone","isEqual","_this$props2","phoneField","countryCodeField","disabled","_this$props2$fieldErr","fieldError","_this$props2$rulesPho","rulesPhoneNumber","getFieldDecorator","form","margin","validateStatus","help","validateTrigger","rules","rulesCountryCode","initialValue","notFoundContent","filterOption","onSearch","onSelect","showArrow","getPopupContainer","d","marginBottom","validator","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","antd_es_input__WEBPACK_IMPORTED_MODULE_0__","SearchIcon","searchIcon","dropdownIcon","dropDown","PATIENT_PROGRAM","HOSPITAL","ERROR_PRONE_FIELDS","errMessage","disabledDate","current","endOf","AddPatient","showModal","getProgramsData","programsData","isBefore","getDoctorsData","programId","getFieldValue","console","log","_ref$doctors","doctorsData","doctorId","getHospitalsData","_this$props2$hospital","hospitals","_this$props2$users","hospitalsData","selectedDoctor","visitingHospitals","includes","without","resetFields","clearMsg","is_link_send","is_error","openCalendar","window","document","getElementsByClassName","click","isError","getFieldError","k","onChangeProgram","_this$props3","fetchProgramDoctors","_this$props3$form","validateFields","onChangeDoctor","_this$props4","_this$props4$form","fetchDoctorHospitals","isText","toggleAddPatient","handleOk","fetchProgramsData","err","values","formData","userCategory","POST","Auth","addPatientURL","then","response","error","message","status","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_this$props$form","isFieldTouched","field","modal","onOk","okButtonProps","onCancel","okText","wrapClassName","destroyOnClose","es_form","required","es_select","suffixIcon","autoComplete","optionFilterProp","option","toLowerCase","open","date_picker","showToday","getCalendarContainer","calendar","es_radio","Group","Button","display","justifyContent","countryCity","cityField","countryField","cityRules","countryRules","CommonError","React","create","connect","dispatch","fetchProgramDoctorsForModal","DOCTOR_COUNTRY","DOCTOR_CITY","AddDoctor","onChangeCity","countryId","cityId","fetchHospitals","onChangeCountry","_this$props$form2","addDoctorURL","_this$props$form3","specialities"],"mappings":"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","file":"static/js/3.97a0e463.chunk.js","sourcesContent":["import { defineMessages } from \"react-intl\";\nconst messages = defineMessages({\n  myProfile: {\n    id: \"app.edit-profile-main.my-profile\",\n    description: \"heading\",\n    defaultMessage: \"My Profile\"\n  },\n  personal: {\n    id: \"app.edit-profile.menubar.personal\",\n    description: \"personal menu text\",\n    defaultMessage: \"Personal\"\n  },\n  contacts: {\n    id: \"app.edit-profile.menubar.contacts\",\n    description: \"contacts menu text\",\n    defaultMessage: \"Contacts\"\n  },\n  medical: {\n    id: \"app.edit-profile.menubar.medical\",\n    description: \"medical menu text\",\n    defaultMessage: \"Medical\"\n  },\n  settings: {\n    id: \"app.edit-profile.menubar.settings\",\n    description: \"settings menu text\",\n    defaultMessage: \"Settings\"\n  },\n  insurance: {\n    id: \"app.edit-profile.menubar.insurance\",\n    description: \"insurance menu text\",\n    defaultMessage: \"Insurance\"\n  },\n  insuranceProvider: {\n    id: \"app.edit-profile.insuranceSection.insuranceProvider\",\n    description: \"insurance provider input label text\",\n    defaultMessage: \"Medical Insurance Provider\"\n  },\n  insurancePolicy: {\n    id: \"app.edit-profile.insuranceSection.insurancePolicy\",\n    description: \"insurance policy input label text\",\n    defaultMessage: \"Insurance Policy\"\n  },\n  insuranceExpiresOn: {\n    id: \"app.edit-profile.insuranceSection.insuranceExpiresOn\",\n    description: \"insurance expires input label text\",\n    defaultMessage: \"Valid Till\"\n  },\n\n  hospital: {\n    id: \"app.edit-profile.contact-sections.hospital\",\n    description: \"Hospital label text\",\n    defaultMessage: \"Hospital\"\n  },\n\n  work: {\n    id: \"app.edit-profile.menubar.work\",\n    description: \"work menu text\",\n    defaultMessage: \"Work\"\n  },\n  hospitalName: {\n    id: \"app.edit-profile.work-section.hospital-name\",\n    description: \"hospital name\",\n    defaultMessage: \"Hospital Name\"\n  },\n  speciality: {\n    id: \"app.edit-profile.work-section.speciality\",\n    description: \"speciality\",\n    defaultMessage: \"Speciality\"\n  },\n  specialityRule: {\n    id: \"app.edit-profile.work-section.speciality-rule\",\n    description: \"speciality rule\",\n    defaultMessage: \"Please provide speciality\"\n  },\n  licenseNumber: {\n    id: \"app.edit-profile.work-section.license-number\",\n    description: \"license number\",\n    defaultMessage: \"License Number\"\n  },\n  bio: {\n    id: \"app.edit-profile.work-section.bio\",\n    description: \"bio\",\n    defaultMessage: \"Bio\"\n  },\n  addressLine1: {\n    id: \"app.edit-profile.work-section.address-line1\",\n    description: \"address line 1\",\n    defaultMessage: \"Flat / House / Floor / Building\"\n  },\n  addressLine2: {\n    id: \"app.edit-profile.work-section.address-line2\",\n    description: \"address line 2\",\n    defaultMessage: \"Street / Locality / Area\"\n  },\n  zipcode: {\n    id: \"app.edit-profile.work-section.zipcode\",\n    description: \"zip code\",\n    defaultMessage: \"PO box / Zipcode\"\n  },\n  cityLabel: {\n    id: \"app.edit-profile.work-section.city\",\n    description: \"city label\",\n    defaultMessage: \"Region or State\"\n  },\n  countryLabel: {\n    id: \"app.edit-profile.work-section.country\",\n    description: \"country label\",\n    defaultMessage: \"Country\"\n  },\n  organisationName: {\n    id: \"app.edit-profile.work-section.organisation-name\",\n    description: \"organization name\",\n    defaultMessage: \"Organisation Name\"\n  },\n  services: {\n    id: \"app.edit-profile.work-section.services\",\n    description: \"services\",\n    defaultMessage: \"Services\"\n  },\n  notBlank: {\n    id: \"app.edit-profile.not-blank\",\n    description: \"not be blank\",\n    defaultMessage: \"not be blank\"\n  },\n  nursingTitle: {\n    id: \"app.edit-profile.service-section.nursing-title\",\n    description: \"nursing title\",\n    defaultMessage: \"Nursing\"\n  },\n  physicalTherapyTitle: {\n    id: \"app.edit-profile.service-section.physical-therapy-title\",\n    description: \"physical therapy title\",\n    defaultMessage: \"Physical Therapy\"\n  },\n  occupationalTherapyTitle: {\n    id: \"app.edit-profile.service-section.occupational-therapy-title\",\n    description: \"occupational therapy title\",\n    defaultMessage: \"Occupational Therapy\"\n  },\n  speechAndLanguagePathologyTitle: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology-title\",\n    description: \"speech and language pathology title\",\n    defaultMessage: \"Speech and Language Pathology\"\n  },\n  medicalCounsellingTitle: {\n    id: \"app.edit-profile.service-section.medical-counselling-title\",\n    description: \"medical counselling title\",\n    defaultMessage: \"Medical Counselling\"\n  },\n  healthAideTitle: {\n    id: \"app.edit-profile.service-section.health-aide-title\",\n    description: \"health aide title\",\n    defaultMessage: \"Health Aide\"\n  },\n  nursing: {\n    id: \"app.edit-profile.service-section.nursing\",\n    description: \"nursing\",\n    defaultMessage:\n      \"Physical assessments, which include monitoring of vital signs, administer oral and intravenous medications as well as monitoring of cardiac and respiratory status\"\n  },\n  physicalTherapy: {\n    id: \"app.edit-profile.service-section.physical-therapy\",\n    description: \"physical therapy\",\n    defaultMessage: \"Assist patients to condition muscles and regain strength\"\n  },\n  occupationalTherapy: {\n    id: \"app.edit-profile.service-section.occupational-therapy\",\n    description: \"occupational therapy\",\n    defaultMessage:\n      \"Assist patients to perform functional skills such as bathing, eating, cooking, and many other skills\"\n  },\n  speechAndLanguagePathology: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology\",\n    description: \"speech and language pathology\",\n    defaultMessage:\n      \"Assist patients to regain their ability to speak, swallow, and eat after a stroke or other neurological injuries\"\n  },\n  medicalCounselling: {\n    id: \"app.edit-profile.service-section.medical-counselling\",\n    description: \"medical counselling\",\n    defaultMessage:\n      \"Assistance with medications, provision of counseling, assistance with financial matters, transportation, and in accessing educational and treatment resources\"\n  },\n  healthAide: {\n    id: \"app.edit-profile.service-section.health-aide\",\n    description: \"health aide\",\n    defaultMessage:\n      \"Assist patients with their activities of daily living while patients are limited in mobility and strength which includes tasks such as bathing, grooming, and preparing meals\"\n  },\n  cardiacCareTitle: {\n    id: \"app.edit-profile.service-section.cardiac-care-title\",\n    description: \"cardiac care title\",\n    defaultMessage: \"Cardiac Care\"\n  },\n  diabetesCareTitle: {\n    id: \"app.edit-profile.service-section.diabetes-care-title\",\n    description: \"diabetes care title\",\n    defaultMessage: \"Diabetes Care\"\n  },\n  smokingCessationTitle: {\n    id: \"app.edit-profile.service-section.smoking-cessation-title\",\n    description: \"smoking cessation title\",\n    defaultMessage: \"Smoking Cessation\"\n  },\n  respiteCareTitle: {\n    id: \"app.edit-profile.service-section.respite-care-title\",\n    description: \"respite care title\",\n    defaultMessage: \"Respite Care\"\n  },\n  homemakingTitle: {\n    id: \"app.edit-profile.service-section.homemaking-title\",\n    description: \"homemaking title\",\n    defaultMessage: \"Homemaking\"\n  },\n  cardiacCare: {\n    id: \"app.edit-profile.service-section.cardiac-care\",\n    description: \"Cardiac Care\",\n    defaultMessage:\n      \"Assist patients with cardiac disease to manage their disease and to help slow down progression of their disease, monitor the cardiac status, prompt efficient treatment that will prevent re- hospitalization\"\n  },\n  diabetesCare: {\n    id: \"app.edit-profile.service-section.diabetes-care\",\n    description: \"Diabetes Care\",\n    defaultMessage:\n      \"Assist patient with diabetes and their families in learning to manage their diabetes, educate diet, exercise, self- blood glucose monitoring, and about complications of uncontrolled diabetes\"\n  },\n  smokingCessation: {\n    id: \"app.edit-profile.service-section.smoking-cessation\",\n    description: \"Smoking Cessation\",\n    defaultMessage: \"Provide nicotine replacement therapy\"\n  },\n  respiteCare: {\n    id: \"app.edit-profile.service-section.respite-care\",\n    description: \"Respite Care\",\n    defaultMessage:\n      \"Assist patients with Adult Care, Alzheimer’s Care, Hospital Support\"\n  },\n  homemaking: {\n    id: \"app.edit-profile.service-section.homemaking\",\n    description: \"Homemaking\",\n    defaultMessage:\n      \"Provide patients with daily assistance including meal preparation, housekeeping, laundary & maintaining chores\"\n  },\n  medicalServices: {\n    id: \"app.myprofile.medical-services\",\n    description: \"medical services\",\n    defaultMessage: \"Medical Services\"\n  },\n  homeHealthCare: {\n    id: \"app.myprofile.home-health-care\",\n    description: \"home health care\",\n    defaultMessage: \"Home Health Care\"\n  },\n  specialCare: {\n    id: \"app.myprofile.special-care\",\n    description: \"special care\",\n    defaultMessage: \"Special Care\"\n  },\n  nonMedicalServices: {\n    id: \"app.myprofile.non-medical-services\",\n    description: \"non medical services\",\n    defaultMessage: \"Non-medical Services\"\n  },\n  basic: {\n    id: \"app.medical-section.basic\",\n    description: \"basic\",\n    defaultMessage: \"Basic\"\n  },\n  chiefComplaint: {\n    id: \"app.medical-section.chief-complaint\",\n    description: \"chief complaint\",\n    defaultMessage: \"Chief Complaint\"\n  },\n  allergies: {\n    id: \"app.medical-section.allergies\",\n    description: \"allergies\",\n    defaultMessage: \"Allergies\"\n  },\n  useComma: {\n    id: \"app.medical-section.use-comma\",\n    description: \"use comma tip\",\n    defaultMessage: \"Use , (comma) to add more\"\n  },\n  surgeriesFracture: {\n    id: \"app.medical-section.surgeries-fracture\",\n    description: \"surgeries fracture label\",\n    defaultMessage: \"Surgeries/Fracture\"\n  },\n  otherConditions: {\n    id: \"app.medical-section.other-conditions\",\n    description: \"other conditions label\",\n    defaultMessage: \"Other Conditions\"\n  },\n  vital: {\n    id: \"app.medical-section.vital\",\n    description: \"vital label\",\n    defaultMessage: \"Vital\"\n  },\n  vitalSubtitle: {\n    id: \"app.medical-section.vital-subtitle\",\n    description: \"vital subtitle\",\n    defaultMessage: \"Add most recent vital readings\"\n  },\n  bodyTemperature: {\n    id: \"app.medical-section.body-temperature\",\n    description: \"body temperature\",\n    defaultMessage: \"Body Temperature\"\n  },\n  respirationRate: {\n    id: \"app.medical-section.respiration-rate\",\n    description: \"respiration rate\",\n    defaultMessage: \"Respiration Rate\"\n  },\n  breathePerMinute: {\n    id: \"app.medical-section.breathe-per-minute\",\n    description: \"breathe per minute\",\n    defaultMessage: \"breathe per minute\"\n  },\n  pulseRate: {\n    id: \"app.medical-section.pulse-rate\",\n    description: \"pulse rate\",\n    defaultMessage: \"Pulse Rate\"\n  },\n  bpm: {\n    id: \"app.medical-section.bpm\",\n    description: \"bpm\",\n    defaultMessage: \"bpm\"\n  },\n  bloodPressure: {\n    id: \"app.medical-section.blood-pressure\",\n    description: \"blood pressure\",\n    defaultMessage: \"Blood Pressure\"\n  },\n  bpUnit: {\n    id: \"app.medical-section.bp-unit\",\n    description: \"blood pressure unit\",\n    defaultMessage: \"systolic/diastolic in mmHG\"\n  },\n  clinicalReadings: {\n    id: \"app.medical-section.clinical-readings\",\n    description: \"clinical readings\",\n    defaultMessage: \"Clinical Readings\"\n  },\n  clinicalReadingsSubtitle: {\n    id: \"app.medical-section.clinical-readings-subtitle\",\n    description: \"clinical readings subtitle\",\n    defaultMessage:\n      \"Choose a diagnosis method & add clinical readings respectively. You can add multiple readings\"\n  },\n  notBeBlank: {\n    id: \"app.contacts-section.not-be-blank\",\n    description: \"Cannot be blank\",\n    defaultMessage: \"Cannot be blank\"\n  },\n  caseDoctor: {\n    id: \"app.contacts-section.case-doctor\",\n    description: \"case doctor\",\n    defaultMessage: \"Case Doctor\"\n  },\n  notAssigned: {\n    id: \"app.contacts-section.not-assigned\",\n    description: \"not assigned\",\n    defaultMessage: \"Not assigned\"\n  },\n  careCoach: {\n    id: \"app.contacts-section.care-coach\",\n    description: \"care coach\",\n    defaultMessage: \"Care coach\"\n  },\n  relativeName: {\n    id: \"app.contacts-section.relative-name\",\n    description: \"relative name\",\n    defaultMessage: \"Relative Name\"\n  },\n  parent: {\n    id: \"app.contacts-section.parent\",\n    description: \"parent\",\n    defaultMessage: \"Parent\"\n  },\n  spouse: {\n    id: \"app.contacts-section.spouse\",\n    description: \"spouse\",\n    defaultMessage: \"Spouse\"\n  },\n  guardian: {\n    id: \"app.contacts-section.guardian\",\n    description: \"guardian\",\n    defaultMessage: \"Guardian\"\n  },\n  relativeMobile: {\n    id: \"app.contacts-section.relative-mobile\",\n    description: \"relative mobile\",\n    defaultMessage: \"Relative Mobile\"\n  },\n  contactRelative: {\n    id: \"app.contacts-section.contact-relative\",\n    description: \"contact relative for emergency\",\n    defaultMessage: \"Contact Relative for Emergency\"\n  },\n  emergencyContactMobile: {\n    id: \"app.contacts-section.emergency-contact-mobile\",\n    description: \"emergency contact mobile\",\n    defaultMessage: \"Emergency Contact Mobile\"\n  },\n  emergencyContactName: {\n    id: \"app.contacts-section.emergency-contact-name\",\n    description: \"emergency contact name\",\n    defaultMessage: \"Emergency Contact Name\"\n  },\n  emergencyContactRule: {\n    id: \"app.contacts-section.emergency-contact-rule\",\n    description: \"emergency contact rule\",\n    defaultMessage: \"Please provide emergency contact\"\n  },\n  phoneNumberRule: {\n    id: \"app.contacts-section.phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"Please provide phone number\"\n  },\n  careCoachphoneNumberRule: {\n    id: \"app.contacts-section.carecoach-phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"This field cannot be blank. Please provide phone number\"\n  },\n  changePassword: {\n    id: \"app.edit-profile.setting-section.chnage-password\",\n    description: \"change password\",\n    defaultMessage: \"Change Password\"\n  },\n  calendarSynced: {\n    id: \"app.edit-profile.setting-section.calendar-sync\",\n    description: \"calendar synced\",\n    defaultMessage: \"Calendar Sync\"\n  },\n  smsAlerts: {\n    id: \"app.edit-profile.setting-section.sms-alerts\",\n    description: \"sms alert\",\n    defaultMessage: \"SMS Alerts\"\n  },\n  smsWillBeSent: {\n    id: \"app.edit-profile.setting-section.sms-will-be-sent\",\n    description: \"sms will be sent\",\n    defaultMessage: \"SMS will be sent to your registered mobile contact\"\n  },\n  emailAlerts: {\n    id: \"app.edit-profile.setting-section.email-alerts\",\n    description: \"email alert\",\n    defaultMessage: \"Email Alerts\"\n  },\n  emailWillBeSent: {\n    id: \"app.edit-profile.setting-section.email-will-be-sent\",\n    description: \"email will be sent\",\n    defaultMessage: \"Email will be sent to your registered email address\"\n  },\n  pushAlerts: {\n    id: \"app.edit-profile.setting-section.push-alerts\",\n    description: \"push alert\",\n    defaultMessage: \"In-app / Push Alerts\"\n  },\n  pushWillBeSent: {\n    id: \"app.edit-profile.setting-section.push-will-be-sent\",\n    description: \"push will be sent\",\n    defaultMessage: \"These alerts are notified within the RPM web app.\"\n  },\n  reminderAlerts: {\n    id: \"app.edit-profile.setting-section.reminder-alerts\",\n    description: \"reminder alert\",\n    defaultMessage: \"Reminder Alerts\"\n  },\n  reminderWillBeSent: {\n    id: \"app.edit-profile.setting-section.reminder-will-be-sent\",\n    description: \"reminder will be sent\",\n    defaultMessage: \"All reminders will be sent via SMS/Email/Calendar\"\n  },\n  account: {\n    id: \"app.edit-profile.setting-section.account\",\n    description: \"account\",\n    defaultMessage: \"Account\"\n  },\n  notifications: {\n    id: \"app.edit-profile.setting-section.notifications\",\n    description: \"notifications\",\n    defaultMessage: \"Notifications\"\n  },\n\n  selectPhotoTitle: {\n    id: \"app.edit-profile.personal-section.select-photo-title\",\n    description: \"profile photo selection title\",\n    defaultMessage: \"Select profile photo\"\n  },\n  photoOKText: {\n    id: \"app.edit-profile.personal-section.photo-ok-text\",\n    description: \"profile photo ok text\",\n    defaultMessage: \"Set as Profile Photo\"\n  },\n  cropImage: {\n    id: \"app.edit-profile.personal-section.crop-image-text\",\n    description: \"crop image instruction text\",\n    defaultMessage:\n      \"To crop this image, drag the region below and then click “Set as Profile Photo” button\"\n  },\n  photoVisibleInfo: {\n    id: \"app.edit-profile.personal-section.photo-visible-info\",\n    description: \"photo will be visible info text\",\n    defaultMessage:\n      \"Your profile photo will be visible to everyone, across IQVIA products.\"\n  },\n  verified: {\n    id: \"app.edit-profile.personal-section.verified\",\n    description: \"verified\",\n    defaultMessage: \"Verified\"\n  },\n  notVerified: {\n    id: \"app.edit-profile.personal-section.not-verified\",\n    description: \"not verified\",\n    defaultMessage: \"Not verified\"\n  },\n  mobile: {\n    id: \"app.edit-profile.personal-section.mobile\",\n    description: \"mobile\",\n    defaultMessage: \"Mobile\"\n  },\n  nameRule: {\n    id: \"app.edit-profile.personal-section.name-rule\",\n    description: \"name rule\",\n    defaultMessage: \"please provide your Name\"\n  },\n  dobRule: {\n    id: \"app.edit-profile.personal-section.dob-rule\",\n    description: \"dob rule\",\n    defaultMessage: \"please provide your Date of Birth\"\n  },\n  genderRule: {\n    id: \"app.edit-profile.personal-section.gender-rule\",\n    description: \"gender rule\",\n    defaultMessage: \"please provide your gender\"\n  },\n  localityRule: {\n    id: \"app.edit-profile.personal-section.locality-rule\",\n    description: \"locality rule\",\n    defaultMessage: \"please fill your locality\"\n  },\n  zipcodeRule: {\n    id: \"app.edit-profile.personal-section.zipcode-rule\",\n    description: \"zipcode rule\",\n    defaultMessage: \"please fill your zip code\"\n  },\n  cityRule: {\n    id: \"app.edit-profile.personal-section.city-rule\",\n    description: \"city rule\",\n    defaultMessage: \"please provide your city\"\n  },\n  countryRule: {\n    id: \"app.edit-profile.personal-section.country-rule\",\n    description: \"country rule\",\n    defaultMessage: \"please provide your country\"\n  },\n  sendOTP: {\n    id: \"app.edit-profile.personal-section.send-otp\",\n    description: \"send otp\",\n    defaultMessage: \"Send OTP\"\n  },\n  fullName: {\n    id: \"app.edit-profile.personal-section.full-name\",\n    description: \"full name\",\n    defaultMessage: \"Full Name\"\n  },\n  dateOfBirth: {\n    id: \"app.edit-profile.personal-section.date-of-birth\",\n    description: \"date of birth\",\n    defaultMessage: \"Date of Birth\"\n  },\n  email: {\n    id: \"app.edit-profile.personal-section.email\",\n    description: \"email\",\n    defaultMessage: \"Email\"\n  },\n  male: {\n    id: \"app.edit-profile.personal-section.male\",\n    description: \"male\",\n    defaultMessage: \"Male\"\n  },\n  female: {\n    id: \"app.edit-profile.personal-section.female\",\n    description: \"female\",\n    defaultMessage: \"Female\"\n  },\n  city: {\n    id: \"app.edit-profile.personal-section.city\",\n    description: \"city\",\n    defaultMessage: \"City\"\n  },\n  country: {\n    id: \"app.edit-profile.personal-section.country\",\n    description: \"country\",\n    defaultMessage: \"Country\"\n  },\n  consentForm: {\n    id: \"app.edit-profile.settingSection.consentForm\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  idProof: {\n    id: \"app.edit-profile.settingSection.Idproof\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  },\n  uploadedOn: {\n    id: \"app.edit-profile.settingSection.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded on\"\n  },\n  newPatient: {\n    id: \"app.care-coach.add-patient.newPatient\",\n    description: \"new patient text\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.care-coach.add-doctor.newDoctor\",\n    description: \"new doctor text\",\n    defaultMessage: \"New Doctor\"\n  },\n  patientEmail: {\n    id: \"app.care-coach.add-patient.patientEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Patient's Email\"\n  },\n  doctorEmail: {\n    id: \"app.care-coach.add-patient.doctorEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Doctor's Email\"\n  },\n  incorrectEmail: {\n    id: \"app.care-coach.add-patient.incorrectEmail\",\n    description: \"That's not a valid E-mail address\",\n    defaultMessage: \"Please enter a valid email address\"\n  },\n  program: {\n    id: \"app.care-coach.add-patient.program\",\n    description: \"program menu text\",\n    defaultMessage: \"Program\"\n  },\n  programError: {\n    id: \"app.care-coach.add-patient.programError\",\n    description: \"program error text\",\n    defaultMessage: \"Please enter a Program\"\n  },\n  newPatientSuccess: {\n    id: \"app.care-coach.add-patient.newPatientSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Patient enrolled to the program and invite sent successfully\"\n  },\n  newPatientFailure: {\n    id: \"app.care-coach.add-patient.newPatientFailure\",\n    description: \"new patient not enrolled\",\n    defaultMessage: \"Unable to enroll new Patient, Please try again.\"\n  },\n  newDoctorSuccess: {\n    id: \"app.care-coach.add-patient.newDoctorSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Doctor enrolled to the program and invite sent successfully\"\n  },\n  newDoctorFailure: {\n    id: \"app.care-coach.add-patient.newDoctorFailure\",\n    description: \"new doctor not enrolled\",\n    defaultMessage: \"Unable to enroll new Doctor, Please try again.\"\n  },\n  licenseId: {\n    id: \"app.care-coach.add-doctor.licenseId\",\n    description: \"license id\",\n    defaultMessage: \"License ID\"\n  },\n  hospitalError: {\n    id: \"app.care-coach.add-patient.hospitalError\",\n    description: \"hospital error text\",\n    defaultMessage: \"Please enter a Hospital\"\n  },\n  relativeNumberError: {\n    id: \"app.edit-profile.relativeNumber error\",\n    description: \"relatvie number equal to personal number error\",\n    defaultMessage: \"Relative number and Personal Number cannot be same\"\n  },\n  emergencyNumberError: {\n    id: \"app.edit-profile.emergencyNumber error\",\n    description: \"emergency number equal to personal number error\",\n    defaultMessage: \"Emergency number and Personal Number cannot be same\"\n  }\n});\n\nexport default messages;\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  dashboard: {\n    id: \"app.header.dashboard\",\n    description: \"dashboard in header\",\n    defaultMessage: \"Dashboard\"\n  },\n  mycalender: {\n    id: \"app.header.mycalender\",\n    description: \"mycalender in header\",\n    defaultMessage: \"My Calendar\"\n  },\n  program: {\n    id: \"app.header.program\",\n    description: \"program in hearder\",\n    defaultMessage: \"Programs\"\n  },\n  surveys: {\n    id: \"app.header.surveys\",\n    description: \"surveys in header\",\n    defaultMessage: \"Surveys\"\n  },\n  newAppointment: {\n    id: \"app.header.newAppointment\",\n    description: \"newAppointment in add button\",\n    defaultMessage: \"New Appointment/ Reminder\"\n  },\n  newPatient: {\n    id: \"app.header.newPatient\",\n    description: \"newPatient in add button\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.header.newDoctor\",\n    description: \"newDoctor in add button\",\n    defaultMessage: \"New Doctor\"\n  },\n  reportAdverseEvent: {\n    id: \"app.header.reportAdverseEvent\",\n    description: \"reportAdverseEvent in add\",\n    defaultMessage: \"Report Adverse Event\"\n  },\n  myProfile: {\n    id: \"app.header.my-profile\",\n    description: \"myprofile in header\",\n    defaultMessage: \"My Profile\"\n  },\n  headerlogo: {\n    id: \"app.header.header-logo  \",\n    description: \"header logo in header\",\n    defaultMessage: \"P E P\"\n  },\n  signUp: {\n    id: \"app.header.signUp\",\n    description: \"Sign up in header\",\n    defaultMessage: \"Sign Up\"\n  },\n  signIn: {\n    id: \"app.header.signIn\",\n    description: \"Sign in in header\",\n    defaultMessage: \"Sign In\"\n  },\n  MyMedicalDetails: {\n    id: \"app.header.MyMedicalDetails\",\n    description: \"My Medical Details in header\",\n    defaultMessage: \"My Medical Details\"\n  },\n  signOut: {\n    id: \"app.signout\",\n    description: \"signout button\",\n    defaultMessage: \"Sign Out\"\n  }\n});\n\nexport default messages;\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Menu } from \"antd\";\nimport \"./style.less\";\nimport messages from \"./message\";\nimport { DASHBOARD_MENU } from \"../../constant\";\n\nconst CarecoachMenu = props => {\n  const {\n    intl: { formatMessage }\n  } = props;\n\n  const redirectToTab = tabValue => {\n    // if (props.history.location.pathname != \"/\") {\n    //   props.history.push({\n    //     pathname: \"/\",\n    //     state: { defaultTab: tabValue }\n    //   });\n    // } else {\n    //props.history.push(tabValue.toLowerCase());\n    props.history.push({\n      pathname: `/${tabValue}`\n      //state: { defaultTab: tabValue }\n    });\n    //setTabDashboard(tabValue);\n    //}\n  };\n\n  return (\n    <Menu mode=\"horizontal\" className=\"menu\" selectedKeys={[props.currentTab]}>\n      <Menu.Item\n        key={DASHBOARD_MENU.HOME}\n        className=\"menuItem dashboard fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.HOME);\n        }}\n      >\n        {formatMessage(messages.dashboard)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.CALENDAR}\n        className=\"menuItem mycalender fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.CALENDAR);\n        }}\n      >\n        {formatMessage(messages.mycalender)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.PROGRAMS}\n        className=\"menuItem program fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.PROGRAMS);\n        }}\n      >\n        {formatMessage(messages.program)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.SURVEYS}\n        className=\"menuItem mycalender fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.SURVEYS);\n        }}\n      >\n        {formatMessage(messages.surveys)}\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default injectIntl(CarecoachMenu);\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Menu } from \"antd\";\nimport \"./style.less\";\nimport messages from \"./message\";\nimport { DASHBOARD_MENU } from \"../../constant\";\n\nconst PatientMenu = props => {\n  const {\n    intl: { formatMessage }\n  } = props;\n\n  const redirectToTab = tabValue => {\n    props.history.push({\n      pathname: `/${tabValue}`\n    });\n    // if (props.history.location.pathname !== \"/\") {\n    //   props.history.push({\n    //     pathname: \"/\",\n    //     state: { defaultTab: tabValue }\n    //   });\n    // } else {\n    //   setTabDashboard(tabValue);\n    // }\n  };\n\n  return (\n    <Menu mode=\"horizontal\" className=\"menu\" selectedKeys={[props.currentTab]}>\n      <Menu.Item\n        key={DASHBOARD_MENU.HOME}\n        className=\"menuItem dashboard fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.HOME);\n        }}\n      >\n        {formatMessage(messages.dashboard)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.CALENDAR}\n        className=\"menuItem mycalender fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.CALENDAR);\n        }}\n      >\n        {formatMessage(messages.mycalender)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.MEDICALS}\n        className=\"menuItem my-medical-detail fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.MEDICALS);\n        }}\n      >\n        {formatMessage(messages.MyMedicalDetails)}\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default injectIntl(PatientMenu);\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Menu } from \"antd\";\nimport \"./style.less\";\nimport messages from \"./message\";\nimport { DASHBOARD_MENU } from \"../../constant\";\n\nconst DoctorMenu = props => {\n  const {\n    intl: { formatMessage }\n  } = props;\n\n  const redirectToTab = tabValue => {\n    props.history.push({\n      pathname: `/${tabValue}`\n    });\n    // if (props.history.location.pathname != \"/\") {\n    //   props.history.push({\n    //     pathname: \"/\",\n    //     state: { defaultTab: tabValue }\n    //   });\n    // } else {\n    //   setTabDashboard(tabValue);\n    // }\n  };\n\n  return (\n    <Menu mode=\"horizontal\" className=\"menu\" selectedKeys={[props.currentTab]}>\n      <Menu.Item\n        key={DASHBOARD_MENU.HOME}\n        className=\"menuItem dashboard fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.HOME);\n        }}\n      >\n        {formatMessage(messages.dashboard)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.CALENDAR}\n        className=\"menuItem mycalender fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.CALENDAR);\n        }}\n      >\n        {formatMessage(messages.mycalender)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.PROGRAMS}\n        className=\"menuItem program fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.PROGRAMS);\n        }}\n      >\n        {formatMessage(messages.program)}\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default injectIntl(DoctorMenu);\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Menu, Dropdown, Button } from \"antd\";\nimport \"./style.less\";\nimport search from \"../../Assets/images/ico-search-flat-white.svg\";\nimport chat from \"../../Assets/images/ico-chat-flat-white.svg\";\nimport alert from \"../../Assets/images/icon-bell-flat-white.svg\";\nimport messages from \"./message\";\nimport { GLOBAL_MODALS, USER_CATEGORY } from \"../../constant\";\n\nconst HeaderIcons = props => {\n  const {\n    intl: { formatMessage },\n    category,\n    showSearchbar,\n    userId,\n    reportAdverseEvent,\n    showSearch,\n    showAddButton\n  } = props;\n  const CareCoachAddmenu = (\n    <Menu className=\"addButtonmenu\">\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          props.openModal(GLOBAL_MODALS.EVENT_MODAL);\n        }}\n      >\n        {formatMessage(messages.newAppointment)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={props.openAddPatientModal}\n      >\n        {formatMessage(messages.newPatient)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={props.openAddDoctorModal}\n      >\n        {formatMessage(messages.newDoctor)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          props.openModal(GLOBAL_MODALS.ADVERSE_EVENTS);\n        }}\n      >\n        {formatMessage(messages.reportAdverseEvent)}\n      </Menu.Item>\n    </Menu>\n  );\n\n  const PatientAddmenu = (\n    <Menu className=\"addButtonmenu\">\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          props.openModal(GLOBAL_MODALS.EVENT_MODAL);\n        }}\n      >\n        {formatMessage(messages.newAppointment)}\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"addButtonMenuItem\"\n        onClick={e => {\n          reportAdverseEvent(userId);\n        }}\n      >\n        {formatMessage(messages.reportAdverseEvent)}\n      </Menu.Item>\n    </Menu>\n  );\n\n  let currentAddMenu;\n  switch (category) {\n    case USER_CATEGORY.CARE_COACH:\n      currentAddMenu = CareCoachAddmenu;\n      break;\n    case USER_CATEGORY.PATIENT:\n      currentAddMenu = PatientAddmenu;\n      break;\n    case USER_CATEGORY.DOCTOR:\n      currentAddMenu = PatientAddmenu;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"flex align-items-center justify-content-space-evenly\">\n      {currentAddMenu && showAddButton && (\n        <div>\n          <Dropdown\n            overlay={currentAddMenu}\n            trigger={[\"click\"]}\n            overlayStyle={{\n              paddingTop: \"8px\",\n              paddingRight: \"12px\",\n              position: \"fixed\"\n            }}\n          >\n            <Button icon=\"plus\" className=\"addButton\">\n              Add\n            </Button>\n          </Dropdown>\n        </div>\n      )}\n      <div className=\"flex align-items-center justify-content-space-evenly \">\n        {category && category !== USER_CATEGORY.PATIENT && showSearch && (\n          <div onClick={showSearchbar} className=\"ico-search-desktop\">\n            <img alt=\"\" src={search} className=\"icons\" />\n          </div>\n        )}\n        <div className=\"chat\">\n          <img alt=\"\" src={chat} className=\"icons\" />\n        </div>\n        <div className=\"alert\">\n          <img alt=\"\" src={alert} className=\"icons\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(HeaderIcons);\n","import moment from \"moment\";\nimport UserDpPlaceholder from \"../../Assets/images/ico-placeholder-userdp.svg\";\nimport { VALIDITY, ENTITY } from \"../../constant\";\n\nexport const getProgramChildren = programs => {\n  let programChildred = [];\n  let programIds = Object.keys(programs);\n  programIds.forEach(id => {\n    // if (count > 4) {\n    //   return (programChildred);\n    // }\n    const program = programs[id] || {};\n    let obj = {};\n    obj.id = program._id;\n    const checkIfExpired = moment().diff(program.expiresOn, \"years\", true);\n    if (checkIfExpired < 0) {\n      obj.title = program.name;\n      obj.validity = VALIDITY.ACTIVE;\n      programChildred.push(obj);\n    } else {\n      obj.title = program.name;\n      obj.validity = VALIDITY.EXPIRE;\n      programChildred.push(obj);\n    }\n  });\n\n  //\n  //\n  return programChildred;\n};\n\nexport const getPatientChildren = patients => {\n  let patientChildred = [];\n  patients.forEach(patient => {\n    const {\n      _id,\n      name,\n      gender,\n      dob,\n      homeAddress = {},\n      profilePicLink = UserDpPlaceholder,\n      category,\n      city,\n      disease,\n      country\n    } = patient;\n    const years = moment().diff(dob, \"years\", false);\n    if (category === ENTITY.PATIENT) {\n      patientChildred.push({\n        id: _id,\n        title: name,\n        age: years,\n        gender: gender,\n        disease: disease,\n        addressLine1: homeAddress.addressLine2,\n        city: city,\n        country: country,\n        profilePicLink: profilePicLink\n      });\n    }\n  });\n\n  return patientChildred;\n};\n\nexport const getDoctorChildren = doctors => {\n  const doctorChildred = [];\n  doctors.forEach(doctor => {\n    const { _id, name, speciality, category } = doctor;\n    if (category === ENTITY.DOCTOR) {\n      doctorChildred.push({\n        id: _id,\n        title: name,\n        Speciality: speciality\n      });\n    }\n  });\n  return doctorChildred;\n};\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  program: {\n    id: \"app.searchbox.program\",\n    description: \"program in dropdown\",\n    defaultMessage: \"Program\"\n  },\n  patient: {\n    id: \"app.searchbox.patient\",\n    description: \"patient in dropdown\",\n    defaultMessage: \"Patient\"\n  },\n  doctor: {\n    id: \"app.searchbox.doctor\",\n    description: \"doctor in dropdown\",\n    defaultMessage: \"Doctor\"\n  }\n})\n\nexport default messages;","import React, { Component } from \"react\";\nimport { Input, AutoComplete, Button } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport { doRequest } from \"../../Helper/network\";\nimport { REQUEST_TYPE, path, ENTITY, USER_CATEGORY } from \"../../constant\";\nimport throttle from \"lodash-es/throttle\";\nimport { injectIntl } from \"react-intl\";\nimport {\n  getProgramChildren,\n  getPatientChildren,\n  getDoctorChildren\n} from \"./getChildrens\";\nimport Cross from \"../../Assets/images/ico-remove.svg\";\nimport messages from \"./message\";\nimport \"./style.less\";\nconst Option = AutoComplete.Option;\nconst OptGroup = AutoComplete.OptGroup;\n\nclass Searchbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n      Program: [],\n      Patient: [],\n      Doctor: [],\n      query: \"\",\n      isLoading: false\n    };\n    this.getoptions = throttle(this.getoptions.bind(this), 3000);\n  }\n\n  componentWillUnmount() {\n    this.getoptions = null;\n  }\n\n  gotToSearchResult = e => {\n    e.preventDefault();\n    const targetValue = e.target.value;\n    this.setState({ dataSource: [] }, () => {\n      this.props.history.push(\n        `${path.SEARCH}/?key=${targetValue}&?query=${this.state.query}`\n      );\n    });\n  };\n\n  handleOnClick = (entity, id) => {\n    this.props.history.push(`/${entity}/${id}`);\n  };\n\n  showoptions = e => {\n    const { getoptions } = this;\n    if (getoptions !== null) {\n      this.setState({ query: e });\n      this.setState({ isLoading: true });\n      getoptions(e);\n    }\n  };\n\n  async getoptions(e) {\n    const {\n      intl: { formatMessage },\n      category\n    } = this.props;\n\n    const value = e.trim();\n\n    if (!(value === \"\" || value === \"$\")) {\n      const data = await doRequest({\n        params: { query: value },\n        url: path.SEARCH,\n        method: REQUEST_TYPE.GET\n      });\n      //\n      let program = [];\n      let patient = [];\n      let doctor = [];\n      if (data.payload.data !== undefined) {\n        program = getProgramChildren(data.payload.data.programs);\n        patient = await getPatientChildren(data.payload.data.users.result);\n        if (category === USER_CATEGORY.CARE_COACH) {\n          doctor = await getDoctorChildren(data.payload.data.users.result);\n        }\n      }\n\n      //\n      //\n      // const patient = await getPatientChildren(data.payload.data.users.result);\n      // const doctor = await getDoctorChildren(data.payload.data.users.result);\n\n      this.setState(\n        prevState => ({\n          Program: program, //Object.assign( prevState.Program , program),\n          Patient: patient, //Object.assign( prevState.Patient , patient),\n          Doctor: doctor //Object.assign(prevState.Doctor, doctor)\n        }),\n        () => {\n          if (category === USER_CATEGORY.CARE_COACH) {\n            this.setState({\n              dataSource: [\n                {\n                  title: formatMessage(messages.program),\n                  children: this.state.Program\n                },\n                {\n                  title: formatMessage(messages.patient),\n                  children: this.state.Patient\n                },\n                {\n                  title: formatMessage(messages.doctor),\n                  children: this.state.Doctor\n                }\n              ],\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              dataSource: [\n                {\n                  title: formatMessage(messages.program),\n                  children: this.state.Program\n                },\n                {\n                  title: formatMessage(messages.patient),\n                  children: this.state.Patient\n                }\n              ],\n              isLoading: false\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const { dataSource, query, isLoading } = this.state;\n    const { handleOnClick } = this;\n    const validGroups = dataSource.filter(group => {\n      return group.children.length > 0;\n    });\n\n    let placeholder = `Search programs, patients${\n      this.props.category !== \"doctor\" ? \", doctors\" : \"\"\n    }`;\n\n    let searchresultAvialable = true;\n    if (query !== \"\" && validGroups.length <= 0) {\n      searchresultAvialable = false;\n    }\n\n    const options = searchresultAvialable\n      ? validGroups.map((group, index) => {\n          return (\n            <OptGroup\n              className=\"title\"\n              key={index}\n              label={\n                <div\n                  className=\"flex justify-content-space-between align-items-center\"\n                  style={{\n                    height: \"40px\",\n                    marginTop: \"16px\",\n                    paddingBottom: \"16px\"\n                  }}\n                >\n                  <span className=\"title fontsize14\">\n                    {group.title}({group.children.length})\n                  </span>\n                  {group.children.length > 1 && (\n                    <div>\n                      <Button\n                        className=\"viewall\"\n                        size=\"small\"\n                        onClick={this.gotToSearchResult}\n                        value={group.title}\n                      >\n                        View All\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              }\n            >\n              {group.title === \"Patient\"\n                ? group.children.map((opt, i) => (\n                    <Option\n                      key={opt.title + i}\n                      value={opt.title}\n                      className=\"searchoptions\"\n                    >\n                      <div\n                        className=\"flex align-items-center\"\n                        onClick={() => {\n                          handleOnClick(ENTITY.PATIENT, opt.id);\n                        }}\n                      >\n                        <div className=\"fontsize16 pr10\">\n                          {opt.title} ({opt.age} {opt.gender})\n                        </div>\n                        <div className=\"fontsize12 info\">{opt.disease} </div>{\" \"}\n                        <div className=\"dot steel-grey ml2 mr2\" />\n                        <div className=\"fontsize12 info\">\n                          {opt.addressLine1 && opt.addressLine1 + \",\"}\n                          {opt.city.length > 0 && opt.city + \",\"}\n                          {opt.country}\n                        </div>\n                      </div>\n                    </Option>\n                  ))\n                : group.children.map((opt, i) => (\n                    <Option\n                      key={opt.title + i}\n                      value={opt.title}\n                      className=\"searchoptions\"\n                    >\n                      {group.title === \"Program\" ? (\n                        <div\n                          className=\"flex align-items-center mb0\"\n                          onClick={() => {\n                            handleOnClick(ENTITY.PROGRAM, opt.id);\n                          }}\n                        >\n                          <div className=\"programtitle\">{opt.title} </div>\n                          <div className=\"validity flex align-items-center justify-content-center\">\n                            {opt.validity}\n                          </div>\n                        </div>\n                      ) : (\n                        <div\n                          className=\"flex align-items-center mb0  \"\n                          onClick={() => {\n                            handleOnClick(ENTITY.DOCTOR, opt.id);\n                          }}\n                        >\n                          <div className=\"programtitle\">{opt.title}</div>{\" \"}\n                          <span className=\"fontsize12 info pl20\">\n                            {opt.Speciality}\n                          </span>\n                        </div>\n                      )}\n                    </Option>\n                  ))}\n            </OptGroup>\n          );\n        })\n      : [\n          <Option key=\"no_result\">\n            {\" \"}\n            {isLoading ? \"Loading\" : \"No Result Found\"}\n          </Option>\n        ];\n    return (\n      <div\n        className=\"certain-category-search-wrapper searchbox\"\n        style={{ width: \"100%\" }}\n      >\n        <AutoComplete\n          className=\"certain-category-search\"\n          dropdownClassName=\"certain-category-search-dropdown searchbox\"\n          dropdownMatchSelectWidth={false}\n          dropdownStyle={{ width: \"50px\", position: \"fixed\" }}\n          size=\"small\"\n          style={{ width: \"100%\", border: \"none\" }}\n          dataSource={options}\n          placeholder={placeholder}\n          optionLabelProp=\"value\"\n          onChange={this.showoptions}\n          autoFocus=\"true\"\n          // defaultValue={this.props.searchedText}\n        >\n          <Input\n            prefix={\n              <img\n                alt=\"\"\n                src={Cross}\n                className=\"cross\"\n                onClick={this.props.hideSearchbar}\n              />\n            }\n          />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\n// const mapStateToprops = state =>{\n//\n//\n// }\nexport default withRouter(injectIntl(Searchbox));\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport querystring from \"querystring\";\nimport CarecoachMenu from \"./careCoachMenu\";\nimport PatientMenu from \"./patientsMenu\";\nimport DoctorMenu from \"./doctorsMenu\";\nimport HeaderIcons from \"./headersIcon\";\nimport placeHolder from \"../../Assets/images/ico-placeholder-userdp.svg\";\nimport logo from \"../../Assets/images/iqvia_logo_white.png\";\nimport \"./style.less\";\nimport messages from \"./message\";\nimport Searchbox from \"../Searchbox/index\";\nimport { USER_CATEGORY, path } from \"../../constant\";\nimport AddPatient from \"../../Containers/AddPatient/addPatient\";\nimport AddDoctor from \"../../Containers/AddDoctor/addDoctor\";\n\nclass AppHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchbar: false,\n      query: \"\"\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n  componentDidMount() {\n    const { location: { pathname, search } = {} } = this.props;\n    if (pathname === `${path.SEARCH}/`) {\n      const query = querystring.parse(search);\n      this.setState({ showSearchbar: true, query: query[\"?query\"] });\n    }\n  }\n\n  openAddPatientModal = e => {\n    //e.preventDefault();\n    this.state.openAddPatient\n      ? this.setState({ openAddPatient: false })\n      : this.setState({ openAddPatient: true });\n  };\n\n  openAddDoctorModal = e => {\n    //e.preventDefault();\n    this.state.openAddDoctor\n      ? this.setState({ openAddDoctor: false })\n      : this.setState({ openAddDoctor: true });\n  };\n\n  gotoMyProfile = e => {\n    this.props.history.push(path.MY_PROFILE);\n  };\n\n  showSearchbar = () => {\n    this.setState({\n      showSearchbar: true\n    });\n  };\n  hideSearchbar = () => {\n    this.setState({\n      showSearchbar: false\n    });\n  };\n  onClick(event) {\n    const { openModal } = this.props;\n    openModal();\n    //\n  }\n\n  signOut = e => {\n    const { signOut } = this.props;\n    signOut();\n  };\n\n  render() {\n    const {\n      intl: { formatMessage },\n      openModal,\n      user_data: {\n        basicInfo: { _id, category, profilePicLink = placeHolder } = {},\n        isProfileCompleted = false\n      } = {},\n      showmenu,\n      reportAdverseEvent,\n      showSearch,\n      showAddButton,\n      currentTab\n    } = this.props;\n    const { openAddDoctorModal, openAddPatientModal } = this;\n    const { showSearchbar } = this.state;\n\n    const menu = (\n      <Menu>\n        <Menu.Item onClick={this.gotoMyProfile}>\n          {formatMessage(messages.myProfile)}\n        </Menu.Item>\n        <Menu.Item onClick={this.signOut}>\n          {formatMessage(messages.signOut)}\n        </Menu.Item>\n      </Menu>\n    );\n    if (!this.props.authenticated) {\n      return (\n        <div\n          className={\n            \"fixed_header header flex align-items-center justify-content-space-between pl20 pr20\"\n          }\n        >\n          <div className={\"flex align-items-center\"}>\n            <a href={\"/\"}>\n              <div className=\"logo\">\n                <img alt=\"\" src={logo} />\n              </div>\n            </a>\n            <div className={\"pl10 bold\"} style={{ color: \"#fff\" }}>\n              {formatMessage(messages.headerlogo)}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.openAddPatient && (\n          <AddPatient\n            handleCancel={this.openAddPatientModal}\n            visible={this.state.openAddPatient}\n          />\n        )}\n\n        {this.state.openAddDoctor && (\n          <AddDoctor\n            {...this.props}\n            handleCancel={this.openAddDoctorModal}\n            visible={this.state.openAddDoctor}\n          />\n        )}\n        <div\n          className={\n            \"fixed_header header flex align-items-center justify-content-space-between pl20 pr20\"\n          }\n        >\n          <div className={\"flex align-items-center\"}>\n            <a href={\"/\"}>\n              <div className=\"logo\">\n                <img alt=\"\" src={logo} />\n              </div>\n            </a>\n            <div className={\"pl10 bold\"}>\n              {formatMessage(messages.headerlogo)}\n            </div>\n            <div>\n              {!this.props.signup && (\n                <div>\n                  {category === USER_CATEGORY.CARE_COACH ? (\n                    <div className=\"mainmenu\">\n                      {!showmenu && isProfileCompleted && (\n                        <CarecoachMenu\n                          setTabDashboard={this.props.setTabDashboard}\n                          {...this.props}\n                          currentTab={currentTab}\n                        />\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"mainmenu\">\n                      {!showmenu && isProfileCompleted && (\n                        <div>\n                          {category === USER_CATEGORY.PATIENT ? (\n                            <PatientMenu {...this.props} />\n                          ) : (\n                            <DoctorMenu {...this.props} />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          {this.props.signup ? (\n            <div className=\"signup-header padding-rl-10\">\n              <Button type=\"primary\" className=\"signup-btn margin-rl-10\">\n                {formatMessage(messages.signUp)}\n              </Button>\n              <Button className=\"signin-btn\">\n                {formatMessage(messages.signIn)}\n              </Button>\n            </div>\n          ) : (\n            <div className=\"flex align-items-center\">\n              {!showmenu && isProfileCompleted && (\n                <HeaderIcons\n                  category={category}\n                  openAddDoctorModal={openAddDoctorModal}\n                  openAddPatientModal={openAddPatientModal}\n                  openModal={openModal}\n                  showSearchbar={this.showSearchbar}\n                  reportAdverseEvent={reportAdverseEvent}\n                  userId={_id}\n                  showSearch={showSearch}\n                  showAddButton={showAddButton}\n                />\n              )}\n\n              <div>\n                <Dropdown overlay={menu} placement=\"bottomRight\">\n                  <div className=\"user-logo clickable\">\n                    <img\n                      alt=\"\"\n                      className=\"user-logo clickable\"\n                      src={profilePicLink}\n                    />\n                  </div>\n                </Dropdown>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className={showSearchbar ? \"searchbar\" : \"nosearchbar\"}>\n          {showSearchbar && (\n            <div>\n              <Searchbox\n                hideSearchbar={this.hideSearchbar}\n                searchedText={this.state.query}\n                category={category}\n              />\n            </div>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(AppHeader);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./style.less\";\nimport icoError from \"../../Assets/images/ico-err.svg\";\n\nconst ErrorComponent = ({ msg, close, className }) => {\n  if (close) {\n    setTimeout(close, 4000);\n  }\n  if (!msg) {\n    return null;\n  }\n  return (\n    <div className={`iqvia-error ${className}`}>\n      <div className=\"flex  pr8 pl8 pt16 pb16\">\n        <Row className=\"w100\">\n          <Col xs={12} sm={12} md={10} lg={10} xl={10} xxl={10}>\n            <div>\n              <img alt=\"\" src={icoError} className=\"mr8 inline\" />\n              <div className=\"fontsize12 medium warning-color inline\">\n                {msg}\n              </div>\n            </div>\n          </Col>\n          {/* <Col xs={12} sm={12} md={2} lg={2} xl={2} xxl={2}>\n            <Button className=\"got-it-btn\" onClick={close}>\n              <div className=\"flex align-items-center justify-content-center\">\n                <img alt=\"\" src={checkMark} />\n                <div className=\"dark fontsize14 medium \">Got It</div>\n              </div>\n            </Button>\n          </Col> */}\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorComponent;\n","import React, { Component } from \"react\";\nimport { Form, Select, Input } from \"antd\";\nimport debounce from \"lodash-es/debounce\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport callingCountries from \"country-data\";\nimport clone from \"lodash-es/cloneDeep\";\nimport isEqual from \"lodash-es/isEqual\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nfunction getParsedCountryCode() {\n  const a = [];\n  for (let countryCode in callingCountries.callingCountries.all) {\n    const cc = callingCountries.callingCountries.all[countryCode];\n\n    if (cc.countryCallingCodes.length > 0) {\n      cc.code = cc.countryCallingCodes[0];\n      a.push(cc);\n    }\n  }\n\n  return a;\n}\n\nconst ParsedCountryCodes = getParsedCountryCode();\n\nconst getCountryAlpha = (code = \"+91\") => {\n  let country_alpha = \"\";\n\n  for (let index in ParsedCountryCodes) {\n    const country = ParsedCountryCodes[index];\n    if (country.code === code) {\n      country_alpha = country.alpha2;\n      break;\n    }\n  }\n  return country_alpha;\n};\n\nexport class MobileLabel extends Component {\n  render() {\n    const { countryCode = \"\", phoneNumber = \"\" } = this.props;\n    if (\n      countryCode !== null &&\n      phoneNumber !== null &&\n      countryCode.length > 0 &&\n      phoneNumber.length > 0\n    ) {\n      return (\n        <div className=\"flex  align-items-center\">\n          <ReactCountryFlag code={getCountryAlpha(countryCode)} svg />\n          <div className=\"ml8\">{countryCode + \"-\" + phoneNumber}</div>\n        </div>\n      );\n    } else return null;\n  }\n}\n\nexport class MobileInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestedCountryCodes: [],\n      showDropDown: false\n    };\n\n    this.searchCountryCode = debounce(this.searchCountryCode, 300);\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    const { countryCode = \"+91\" } = this.props;\n    this.setInitialCountryCode(countryCode);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentProps = clone(this.props);\n    if (!isEqual(nextProps, currentProps)) {\n      const { countryCode } = nextProps;\n      this.setInitialCountryCode(countryCode);\n    }\n  }\n\n  selectedCountryCode = val => {\n    if (val.length === 0) {\n      this.setState({\n        showDropDown: false,\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        showDropDown: false,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  setInitialCountryCode = (countryCode = \"+91\") => {\n    //Sometimes country code comes as null and .length fails that's why this condition\n    if (countryCode ? countryCode.length === 0 : false) {\n      this.setState({\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        countryCode: countryCode,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(countryCode) > -1;\n        })\n      });\n    }\n  };\n\n  searchCountryCode = val => {\n    if (val.length === 0) {\n      this.setState({\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        showDropDown: true,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  isNumber = (rule, value, callback) => {\n    if (value && value.length > 0 && value.match(\"^[0-9]+$\") === null) {\n      callback(\"Enter valid phone number\");\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      phoneNumber,\n      phoneField,\n      countryCodeField,\n      disabled,\n      fieldError = {},\n      countryCode,\n      rulesPhoneNumber = []\n    } = this.props;\n\n    const { getFieldDecorator } = this.props.form;\n    const { showDropDown, suggestedCountryCodes } = this.state;\n\n    return (\n      <div className=\"flex content-space-between align-items-start\">\n        <div className=\"flex flex-1\">\n          <FormItem\n            className=\"show-no-error\"\n            style={{ width: \"120px\", margin: \"0 10px 0 0\" }}\n            validateStatus={fieldError[countryCodeField] ? \"error\" : \"\"}\n            help={fieldError[countryCodeField] || \"\"}\n          >\n            {getFieldDecorator(countryCodeField, {\n              validateTrigger: [\"onChange\", \"onBlur\"],\n              rules: this.props.rulesCountryCode,\n              initialValue: countryCode,\n              type: \"string\"\n            })(\n              <Select\n                className=\"country_code_value_placeholder\"\n                showSearch\n                placeholder={\n                  <div\n                    className={\n                      \"country_code_value flex row align-items-center justify-content-start w100\"\n                    }\n                  >\n                    <ReactCountryFlag code={\"IN\"} svg />\n                    <div className={\"pl5\"}>+91</div>\n                  </div>\n                }\n                notFoundContent={null}\n                filterOption={false}\n                onSearch={this.searchCountryCode}\n                style={{ width: \"100%\" }}\n                onSelect={this.selectedCountryCode}\n                showArrow={false}\n                dropdownStyle={{ width: \"200px\" }}\n                dropdownClassName={\n                  \"select_country_code_dropdown\" +\n                  (showDropDown ? \"  \" : \" hide_drop_down\")\n                }\n                optionLabelProp={\"children\"}\n                disabled={disabled}\n                getPopupContainer={this.getParentNode}\n              >\n                {suggestedCountryCodes.map(d => {\n                  return (\n                    <Option\n                      value={d.code}\n                      key={d.alpha2 + d.code}\n                      title={d.code}\n                    >\n                      <div\n                        className={\n                          \"flex row align-items-start justify-content-center\"\n                        }\n                      >\n                        <div\n                          className={\n                            \"country_code_select flex row align-items-center justify-content-start w100\"\n                          }\n                        >\n                          <ReactCountryFlag code={d.alpha2} svg />\n                          <div className={\"pl5\"}>\n                            {\" \"}\n                            {d.code} {d.name}\n                          </div>\n                        </div>\n                        <div\n                          className={\n                            \"country_code_value flex row align-items-center justify-content-start w100\"\n                          }\n                        >\n                          <ReactCountryFlag code={d.alpha2} svg />\n                          <div className={\"pl5\"}>{d.code}</div>\n                        </div>\n                      </div>\n                    </Option>\n                  );\n                })}\n              </Select>\n            )}\n          </FormItem>\n          <FormItem\n            className={\"w100\"}\n            style={{ marginBottom: \"0\" }}\n            validateStatus={\n              fieldError[phoneField] || fieldError[countryCodeField]\n                ? \"error\"\n                : \"\"\n            }\n            help={fieldError[phoneField] || fieldError[countryCodeField] || \"\"}\n          >\n            {getFieldDecorator(phoneField, {\n              initialValue: phoneNumber,\n              rules: [\n                {\n                  validator: this.isNumber\n                },\n                ...rulesPhoneNumber\n              ]\n            })(\n              <Input\n                placeholder=\"\"\n                className={\"phone_number_main mb0 pb0\"}\n                disabled={disabled}\n              />\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport map from \"lodash-es/map\";\nimport without from \"lodash-es/without\";\nimport forEach from \"lodash-es/forEach\";\nimport moment from \"moment\";\nimport \"../style.less\";\nimport \"../../style.less\";\nimport { Form, Select, DatePicker, Modal, Input, Radio } from \"antd\";\nimport { doRequest } from \"../../../../../Helper/network\";\nimport { Auth } from \"../../../../../Helper/urls\";\nimport { REQUEST_TYPE } from \"../../../../../constant\";\nimport { injectIntl } from \"react-intl\";\nimport calendar from \"../../../../../Assets/images/button-select-date.svg\";\nimport { MobileInput } from \"../../../../MobileInput\";\nimport CountryCity from \"../../../../../Containers/countryCity\";\nimport messages from \"../../message\";\nimport CommonError from \"../../../../CommonError\";\n\nimport dropDown from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport searchIcon from \"../../../../../Assets/images/ico-search.svg\";\nconst SearchIcon = <img alt=\"\" src={searchIcon} />;\nconst dropdownIcon = <img alt=\"\" src={dropDown} />;\n\nconst PATIENT_EMAIL = \"email\";\nconst PATIENT_PROGRAM = \"programId\";\nconst PATIENT_NAME = \"name\";\nconst PATIENT_PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst PATIENT_COUNTRY_CODE = \"contactNo.countryCode\";\nconst PATIENT_DOB = \"dob\";\nconst PATIENT_GENDER = \"gender\";\nconst PATIENT_COUNTRY = \"country\";\nconst PATIENT_CITY = \"city\";\nconst DOCTOR = \"doctor\";\nconst HOSPITAL = \"hospital\";\n\n//don't remove mobile no from here\n//to remove something from required, change the rule props of that field\nconst ERROR_PRONE_FIELDS = [\n  PATIENT_EMAIL,\n  PATIENT_PROGRAM,\n  PATIENT_PHONE_NUMBER,\n  DOCTOR,\n  HOSPITAL,\n  PATIENT_COUNTRY_CODE\n];\n\nconst { Option } = Select;\nlet errMessage = {};\n\nfunction disabledDate(current) {\n  // Can not select days after today\n  return current && current > moment().endOf(\"day\");\n}\n\nclass AddPatient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n      is_link_send: false,\n      is_error: false,\n      toggleAddPatient: true\n    };\n    this.handleOk = this.handleOk.bind(this);\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    const { fetchProgramsData } = this.props;\n    fetchProgramsData();\n    //to disable end button intially\n    const { validateFields } = this.props.form;\n    validateFields();\n  }\n\n  componentWillUnmount() {\n    const { resetFields } = this.props.form;\n    resetFields();\n  }\n\n  formatMessage = data => {\n    this.props.intl.formatMessage(data);\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk() {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let formData = {};\n        formData = values;\n        if (formData.city === \"\") {\n          formData.city = undefined;\n        }\n        formData.userCategory = \"patient\";\n        const { handleCancel } = this.props;\n\n        doRequest({\n          method: REQUEST_TYPE.POST,\n          data: formData,\n          url: Auth.addPatientURL()\n        }).then(response => {\n          errMessage = response.payload.error\n            ? response.payload.error.message\n            : \"\";\n          !response.status\n            ? this.setState({ visible: true, is_error: true })\n            : this.setState({ visible: false, is_link_send: true }, () => {\n                setTimeout(async () => {\n                  //await resetFields();\n                  await handleCancel();\n                }, 3000);\n              });\n        });\n      } else if (err) {\n        this.setState({\n          visible: true,\n          is_error: true\n        });\n      }\n    });\n  }\n\n  getProgramsData = () => {\n    const programsData = this.props.programs;\n    let options = [];\n\n    for (const key in programsData) {\n      const program = programsData[key];\n      //To resolve duplicate key warnings\n      if (program._id !== undefined && moment().isBefore(program.expiresOn)) {\n        options.push(\n          <Option key={`${program._id}`} value={program._id}>\n            {program.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  getDoctorsData = () => {\n    //\n\n    const {\n      users,\n      form: { getFieldValue }\n    } = this.props;\n    const programId = getFieldValue(PATIENT_PROGRAM);\n    console.log(\"programId\", programId);\n    const { doctors = {} } = this.props.programs[programId] || {};\n    //\n    //\n    console.log(\"doctors=====>\", doctors);\n    let doctorsData = [];\n    forEach(doctors, doctor => {\n      const doctorId = doctor._id;\n      if (doctor && doctorId && users[doctorId]) {\n        doctorsData.push(users[doctorId]);\n      }\n    });\n\n    //const doctorsData = this.props.programs.programDoctors;\n    let options = [];\n    forEach(doctorsData, doctor => {\n      options.push(\n        <Option key={`${doctor._id}`} value={doctor._id}>\n          {doctor.name}\n        </Option>\n      );\n    });\n    return options;\n  };\n\n  getHospitalsData = () => {\n    const {\n      form: { getFieldValue },\n      hospitals = {},\n      users = {}\n    } = this.props;\n    let hospitalsData = hospitals;\n    const selectedDoctor = getFieldValue(DOCTOR);\n\n    if (selectedDoctor && users[selectedDoctor]) {\n      const doctor = users[selectedDoctor];\n      let visitingHospitals = doctor.visitingHospitals;\n      hospitalsData = map(hospitalsData, hospital => {\n        if (visitingHospitals.includes(hospital.id)) return hospital;\n      });\n      hospitalsData = without(hospitalsData, undefined);\n    }\n\n    let options = [];\n    for (const key in hospitalsData) {\n      const hospital = hospitalsData[key];\n      options.push(\n        <Option key={`${hospital.id}`} value={hospital.id}>\n          {hospital.name}\n        </Option>\n      );\n    }\n    return options;\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    });\n    const { resetFields } = this.props.form;\n    resetFields();\n    this.props.handleCancel();\n  };\n\n  clearMsg = e => {\n    //e.preventDefault();\n    this.setState({\n      is_link_send: false,\n      is_error: false\n    });\n  };\n\n  openCalendar = e => {\n    //e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[0]\n      .click();\n  };\n\n  isError = () => {\n    const { getFieldError } = this.props.form;\n    for (const k in ERROR_PRONE_FIELDS) {\n      const key = ERROR_PRONE_FIELDS[k];\n      if (getFieldError(key)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  onChangeProgram = value => {\n    const {\n      fetchProgramDoctors,\n      form: { resetFields, validateFields }\n    } = this.props;\n    fetchProgramDoctors(value);\n    resetFields([DOCTOR, HOSPITAL]);\n    validateFields([DOCTOR, HOSPITAL]);\n  };\n\n  onChangeDoctor = value => {\n    const {\n      form: { resetFields, validateFields },\n      fetchDoctorHospitals\n    } = this.props;\n    resetFields([HOSPITAL]);\n    fetchDoctorHospitals(value);\n    validateFields([HOSPITAL]);\n  };\n\n  isText = (rule, value, callback) => {\n    if (value && value.length > 0 && value.match(\"^[A-Za-z ]+$\") === null) {\n      callback(\"Enter valid name\");\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const {\n      getFieldDecorator,\n      isFieldTouched,\n      getFieldError\n    } = this.props.form;\n    const { isError } = this;\n\n    let fieldError = {};\n\n    ERROR_PRONE_FIELDS.forEach(field => {\n      fieldError[field] = isFieldTouched(field) && getFieldError(field);\n    });\n\n    return (\n      <div>\n        {/* <div>\n          {this.state.is_link_send && (\n            <CommonMessage\n              msg={formatMessage(messages.newPatientSuccess)}\n              className={\"carecoach-new-user-success-message top60\"}\n              close={this.clearMsg}\n            />\n          )}\n        </div> */}\n\n        <Modal\n          title={formatMessage(messages.newPatient)}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          okButtonProps={{\n            disabled: isError()\n          }}\n          onCancel={this.handleCancel}\n          okText=\"Send Invite\"\n          wrapClassName={\"add-modals\"}\n          destroyOnClose={true}\n        >\n          <Form className=\"full-width\">\n            <Form.Item\n              validateStatus={fieldError[PATIENT_EMAIL] ? \"error\" : \"\"}\n              help={fieldError[PATIENT_EMAIL] || \"\"}\n              label={formatMessage(messages.patientEmail)}\n            >\n              {getFieldDecorator(PATIENT_EMAIL, {\n                rules: [\n                  {\n                    type: \"email\",\n                    required: true,\n                    message: formatMessage(messages.incorrectEmail)\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item\n              validateStatus={fieldError[PATIENT_PROGRAM] ? \"error\" : \"\"}\n              help={fieldError[PATIENT_PROGRAM] || \"\"}\n              label={formatMessage(messages.program)}\n            >\n              {getFieldDecorator(PATIENT_PROGRAM, {\n                rules: [\n                  {\n                    required: true,\n                    message: formatMessage(messages.programError)\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={dropdownIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  onChange={this.onChangeProgram}\n                  getPopupContainer={this.getParentNode}\n                >\n                  {this.getProgramsData()}\n                </Select>\n              )}\n            </Form.Item>\n\n            <Form.Item\n              label={formatMessage(messages.caseDoctor)}\n              validateStatus={fieldError[DOCTOR] ? \"error\" : \"\"}\n              help={fieldError[DOCTOR] || \"\"}\n            >\n              {getFieldDecorator(DOCTOR, {\n                rules: [\n                  {\n                    required: true\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={SearchIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  onChange={this.onChangeDoctor}\n                  getPopupContainer={this.getParentNode}\n                >\n                  {this.getDoctorsData()}\n                </Select>\n              )}\n            </Form.Item>\n\n            <Form.Item\n              label={formatMessage(messages.hospital)}\n              validateStatus={fieldError[HOSPITAL] ? \"error\" : \"\"}\n              help={fieldError[HOSPITAL] || \"\"}\n            >\n              {getFieldDecorator(HOSPITAL, {\n                rules: [\n                  {\n                    required: true\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={SearchIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  getPopupContainer={this.getParentNode}\n                >\n                  {this.getHospitalsData()}\n                </Select>\n              )}\n            </Form.Item>\n\n            <div className=\"optional\">Optional</div>\n            <Form.Item label={formatMessage(messages.fullName)}>\n              {getFieldDecorator(PATIENT_NAME, {\n                rules: [\n                  {\n                    validator: this.isText\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <div className=\"mobile-gender\">\n              {formatMessage(messages.mobile)}\n            </div>\n            <MobileInput\n              fieldError={fieldError}\n              phoneField={PATIENT_PHONE_NUMBER}\n              countryCodeField={PATIENT_COUNTRY_CODE}\n              {...this.props}\n            />\n            <div />\n\n            <div className=\"mt20 flex row align-items-center iqvia-date-picker\">\n              <div className=\"full-width \">\n                <Form.Item label={formatMessage(messages.dateOfBirth)}>\n                  {getFieldDecorator(PATIENT_DOB, {\n                    onChange: () => {\n                      this.setState({ open: false });\n                    }\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      disabledDate={disabledDate}\n                      className=\"full-width\"\n                      getCalendarContainer={this.getParentNode}\n                    />\n                  )}\n                  <img\n                    alt=\"\"\n                    className=\"calendar\"\n                    onClick={this.openCalendar}\n                    src={calendar}\n                  />\n                </Form.Item>\n              </div>\n            </div>\n\n            <div className=\"\">\n              <div className=\"mobile-gender\">Gender</div>\n              <Form.Item>\n                {getFieldDecorator(PATIENT_GENDER, {})(\n                  <Radio.Group className=\"full-width male_female_radio_group\">\n                    <Radio.Button\n                      className=\"full-width check-box-right flex fontsize16\"\n                      value={\"M\"}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        paddingTop: \"8px\"\n                      }}\n                    >\n                      {formatMessage(messages.male)}\n                    </Radio.Button>\n                    <Radio.Button\n                      className=\"full-width check-box-right flex fontsize16 pt8\"\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        paddingTop: \"8px\"\n                      }}\n                      value={\"F\"}\n                    >\n                      {formatMessage(messages.female)}\n                    </Radio.Button>\n                  </Radio.Group>\n                )}\n              </Form.Item>\n            </div>\n\n            <CountryCity\n              form={this.props.form}\n              getFieldDecorator={getFieldDecorator}\n              cityLabel={formatMessage(messages.city)}\n              countryLabel={formatMessage(messages.country)}\n              cityField={PATIENT_CITY}\n              countryField={PATIENT_COUNTRY}\n              fieldError={fieldError}\n              cityRules={[\n                {\n                  required: false,\n                  message: formatMessage(messages.cityRule)\n                }\n              ]}\n              countryRules={[\n                {\n                  required: false,\n                  message: formatMessage(messages.countryRule)\n                }\n              ]}\n            />\n\n            {/* <Form.Item\n              label=\"Doctor\"\n              validateStatus={fieldError[DOCTOR] ? \"error\" : \"\"}\n              help={fieldError[DOCTOR] || \"\"}\n            >\n              {getFieldDecorator(DOCTOR, {\n                rules: [\n                  {\n                    required: true\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={SearchIcon}\n                  showSearch\n                  autoComplete=\"off\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  onChange={this.onChangeDoctor}\n                >\n                  {this.getDoctorsData()}\n                </Select>\n              )}\n            </Form.Item> */}\n\n            <div className=\"end-padding\">\n              {/* <Form.Item\n                label=\"Hospital\"\n                validateStatus={fieldError[HOSPITAL] ? \"error\" : \"\"}\n                help={fieldError[HOSPITAL] || \"\"}\n              >\n                {getFieldDecorator(HOSPITAL, {\n                  rules: [\n                    {\n                      required: true\n                    }\n                  ]\n                })(\n                  <Select\n                    className={\"full-width iqvia-style-select fontsize14\"}\n                    suffixIcon={SearchIcon}\n                    showSearch\n                    autoComplete=\"off\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {this.getHospitalsData()}\n                  </Select>\n                )}\n              </Form.Item> */}\n            </div>\n\n            <div className=\"end-padding\">\n              {this.state.is_error && (\n                <CommonError\n                  msg={errMessage}\n                  className={\"carecoach-new-user-failure-message\"}\n                  close={this.clearMsg}\n                />\n              )}\n            </div>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default injectIntl(Form.create()(AddPatient));\n","import { connect } from \"react-redux\";\nimport AddPatient from \"../../Components/page/EditProfile/careCoach/addPatient/addPatient\";\nimport {\n  fetchProgramsData,\n  fetchProgramDoctorsForModal\n} from \"../../modules/program\";\nimport { fetchDoctorHospitals } from \"../../modules/hospital\";\n\nconst mapStateToProps = state => {\n  const { programs, hospitals, users } = state;\n  return {\n    programs,\n    hospitals,\n    users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchProgramDoctors: programId =>\n      dispatch(fetchProgramDoctorsForModal(programId)),\n    fetchDoctorHospitals: doctorId => dispatch(fetchDoctorHospitals(doctorId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddPatient);\n","import React from \"react\";\nimport \"../style.less\";\nimport \"../../style.less\";\nimport { Form, Select, Modal, Input } from \"antd\";\nimport { doRequest } from \"../../../../../Helper/network\";\nimport { Auth } from \"../../../../../Helper/urls\";\nimport { REQUEST_TYPE } from \"../../../../../constant\";\nimport { injectIntl } from \"react-intl\";\nimport { MobileInput } from \"../../../../MobileInput\";\nimport CountryCity from \"../../../../../Containers/countryCity\";\nimport messages from \"../../message\";\nimport CommonError from \"../../../../CommonError\";\n\nimport dropDown from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport searchIcon from \"../../../../../Assets/images/ico-search.svg\";\nimport moment from \"moment\";\nconst dropdownIcon = <img alt=\"\" src={dropDown} />;\nconst SearchIcon = <img alt=\"\" src={searchIcon} />;\n\nconst DOCTOR_EMAIL = \"email\";\nconst DOCTOR_PROGRAM = \"programId\";\nconst DOCTOR_NAME = \"name\";\nconst DOCTOR_PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst DOCTOR_COUNTRY_CODE = \"contactNo.countryCode\";\nconst DOCTOR_COUNTRY = \"country\";\nconst DOCTOR_CITY = \"city\";\nconst DOCTOR_SPECIALITY = \"speciality\";\nconst DOCTOR_LICENSE = \"licenseNumber\";\nconst HOSPITAL = \"hospital\";\n\n//don't remove mobile no from here\n//to remove something from required, change the rule props of that field\nconst ERROR_PRONE_FIELDS = [\n  DOCTOR_EMAIL,\n  DOCTOR_PROGRAM,\n  DOCTOR_COUNTRY,\n  DOCTOR_CITY,\n  HOSPITAL,\n  DOCTOR_COUNTRY_CODE,\n  DOCTOR_PHONE_NUMBER\n];\n\nconst { Option } = Select;\nlet errMessage = {};\n\nclass AddDoctor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: true, is_link_send: false, is_error: false };\n    this.handleOk = this.handleOk.bind(this);\n  }\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  componentDidMount() {\n    const { fetchProgramsData } = this.props;\n    fetchProgramsData();\n    const { validateFields } = this.props.form;\n    validateFields();\n  }\n\n  componentWillUnmount() {\n    const { resetFields } = this.props.form;\n    resetFields();\n  }\n\n  formatMessage = data => {\n    this.props.intl.formatMessage(data);\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  onChangeCity = (countryId, cityId) => {\n    const { resetFields, validateFields } = this.props.form;\n    resetFields(HOSPITAL);\n    validateFields();\n    this.props.fetchHospitals(countryId, cityId);\n  };\n\n  onChangeCountry = countryId => {\n    const { resetFields, validateFields } = this.props.form;\n    resetFields(HOSPITAL);\n    validateFields();\n  };\n\n  getHospitalsData = () => {\n    const {\n      form: { getFieldValue },\n      hospitals: hospitalsData\n    } = this.props;\n    let options = [];\n    for (const key in hospitalsData) {\n      const hospital = hospitalsData[key];\n      const countryId = getFieldValue(DOCTOR_COUNTRY);\n      const cityId = getFieldValue(DOCTOR_CITY);\n      if (hospital.cityId === cityId && hospital.countryId === countryId) {\n        options.push(\n          <Option key={`${hospital.id}`} value={hospital.id}>\n            {hospital.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  handleOk() {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let formData = {};\n        formData = values;\n        formData.userCategory = \"doctor\";\n        if (formData.city === \"\") {\n          formData.city = undefined;\n        }\n        const {\n          // form: { resetFields },\n          handleCancel\n        } = this.props;\n\n        // eslint-disable-next-line no-unused-vars\n        const response = doRequest({\n          method: REQUEST_TYPE.POST,\n          data: formData,\n          url: Auth.addDoctorURL()\n        }).then(response => {\n          errMessage = response.payload.error\n            ? response.payload.error.message\n            : \"\";\n          !response.status\n            ? this.setState({ visible: true, is_error: true })\n            : this.setState({ visible: false, is_link_send: true }, () => {\n                setTimeout(async () => {\n                  //await resetFields();\n                  await handleCancel();\n                }, 3000);\n              });\n        });\n      } else if (err) {\n        this.setState({\n          visible: true,\n          is_error: true\n        });\n      }\n    });\n  }\n\n  getProgramsData = () => {\n    const programsData = this.props.programs;\n    let options = [];\n\n    for (const key in programsData) {\n      const program = programsData[key];\n      if (program._id !== undefined && moment().isBefore(program.expiresOn)) {\n        options.push(\n          <Option key={`${program._id}`} value={program._id}>\n            {program.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    });\n    const { resetFields } = this.props.form;\n    resetFields();\n    this.props.handleCancel();\n  };\n\n  clearMsg = e => {\n    //e.preventDefault();\n    this.setState({\n      is_link_send: false,\n      is_error: false\n    });\n  };\n\n  isError = () => {\n    const { getFieldError } = this.props.form;\n    for (const k in ERROR_PRONE_FIELDS) {\n      const key = ERROR_PRONE_FIELDS[k];\n      if (getFieldError(key)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isText = (rule, value, callback) => {\n    if (value && value.length > 0 && value.match(\"^[A-Za-z ]+$\") === null) {\n      callback(\"Enter valid name\");\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const {\n      getFieldDecorator,\n      isFieldTouched,\n      getFieldError\n    } = this.props.form;\n    const { isError } = this;\n    let fieldError = {};\n\n    ERROR_PRONE_FIELDS.forEach(field => {\n      fieldError[field] = isFieldTouched(field) && getFieldError(field);\n    });\n\n    // const { work = {} } = this.props.user_data;\n    // const { speciality, licenseNumber } = work;\n    const specialities = [\n      <Option key={1} value=\"Neurologist\">\n        Neurologist\n      </Option>,\n      <Option key={2} value=\"Heart Surgeon\">\n        Heart Surgeon\n      </Option>,\n      <Option key={3} value=\"Orthopaedic\">\n        Orthopaedic\n      </Option>\n    ];\n\n    return (\n      <div>\n        {/* <div>\n          {this.state.is_link_send && (\n            <CommonMessage\n              msg={formatMessage(messages.newDoctorSuccess)}\n              className={\"carecoach-new-user-success-message top60\"}\n              close={this.clearMsg}\n            />\n          )}\n        </div> */}\n\n        <Modal\n          title={formatMessage(messages.newDoctor)}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          okButtonProps={{\n            disabled: isError()\n          }}\n          onCancel={this.handleCancel}\n          okText=\"Send Invite\"\n          wrapClassName={\"add-modals\"}\n          destroyOnClose={true}\n        >\n          <div className=\"end-padding hihhihhihhhihh\">\n            <Form className=\"full-width\">\n              <Form.Item\n                validateStatus={fieldError[DOCTOR_EMAIL] ? \"error\" : \"\"}\n                help={fieldError[DOCTOR_EMAIL] || \"\"}\n                label={formatMessage(messages.doctorEmail)}\n              >\n                {getFieldDecorator(DOCTOR_EMAIL, {\n                  rules: [\n                    {\n                      type: \"email\",\n                      required: true,\n                      message: formatMessage(messages.incorrectEmail)\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n\n              <Form.Item\n                validateStatus={fieldError[DOCTOR_PROGRAM] ? \"error\" : \"\"}\n                help={fieldError[DOCTOR_PROGRAM] || \"\"}\n                label={formatMessage(messages.program)}\n              >\n                {getFieldDecorator(DOCTOR_PROGRAM, {\n                  rules: [\n                    {\n                      required: true,\n                      message: formatMessage(messages.programError)\n                    }\n                  ]\n                })(\n                  <Select\n                    className={\"full-width iqvia-style-select fontsize14\"}\n                    suffixIcon={dropdownIcon}\n                    showSearch\n                    autoComplete=\"off\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                    //onChange={this.onChangeCity}\n                    getPopupContainer={this.getParentNode}\n                  >\n                    {this.getProgramsData()}\n                  </Select>\n                )}\n              </Form.Item>\n              <div className=\"optional\">Optional</div>\n              <Form.Item label={formatMessage(messages.fullName)}>\n                {getFieldDecorator(DOCTOR_NAME, {\n                  rules: [\n                    {\n                      validator: this.isText\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <div className=\"mobile-gender\">\n                {formatMessage(messages.mobile)}\n              </div>\n              <MobileInput\n                fieldError={fieldError}\n                phoneField={DOCTOR_PHONE_NUMBER}\n                countryCodeField={DOCTOR_COUNTRY_CODE}\n                {...this.props}\n              />\n              <div />\n\n              <div className=\"mt20 flex row align-items-center\">\n                <div className=\"full-width \">\n                  <Form.Item label={formatMessage(messages.licenseId)}>\n                    {getFieldDecorator(DOCTOR_LICENSE)(<Input />)}\n                  </Form.Item>\n                </div>\n              </div>\n\n              <div className=\"mt20\">\n                <Form.Item label={formatMessage(messages.speciality)}>\n                  {getFieldDecorator(DOCTOR_SPECIALITY, {})(\n                    <Select\n                      className={\"full-width iqvia-style-select fontsize14\"}\n                      suffixIcon={dropdownIcon}\n                      placeholder=\"\"\n                      getPopupContainer={this.getParentNode}\n                    >\n                      {specialities}\n                    </Select>\n                  )}\n                </Form.Item>\n              </div>\n\n              <CountryCity\n                form={this.props.form}\n                getFieldDecorator={getFieldDecorator}\n                cityLabel={formatMessage(messages.city)}\n                countryLabel={formatMessage(messages.country)}\n                cityField={DOCTOR_CITY}\n                countryField={DOCTOR_COUNTRY}\n                fieldError={fieldError}\n                cityRules={[\n                  {\n                    required: false,\n                    message: formatMessage(messages.cityRule)\n                  }\n                ]}\n                countryRules={[\n                  {\n                    required: false,\n                    message: formatMessage(messages.countryRule)\n                  }\n                ]}\n                onChangeCountry={this.onChangeCountry}\n                onChangeCity={this.onChangeCity}\n              />\n\n              <div className=\"end\">\n                <Form.Item\n                  label=\"Hospital(s) doctor work at\"\n                  help={fieldError[HOSPITAL] || \"\"}\n                  validateStatus={fieldError[HOSPITAL] ? \"error\" : \"\"}\n                >\n                  {getFieldDecorator(HOSPITAL, {})(\n                    <Select\n                      className={\"full-width iqvia-style-select fontsize14\"}\n                      suffixIcon={SearchIcon}\n                      showSearch\n                      autoComplete=\"off\"\n                      mode=\"multiple\"\n                      optionFilterProp=\"children\"\n                      filterOption={(input, option) =>\n                        option.props.children\n                          .toLowerCase()\n                          .indexOf(input.toLowerCase()) >= 0\n                      }\n                      getPopupContainer={this.getParentNode}\n                    >\n                      {this.getHospitalsData()}\n                    </Select>\n                  )}\n                </Form.Item>\n              </div>\n            </Form>\n            <div>\n              {this.state.is_error && (\n                <CommonError\n                  msg={errMessage}\n                  className={\"carecoach-new-user-failure-message\"}\n                  close={this.clearMsg}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default injectIntl(Form.create()(AddDoctor));\n","import { connect } from \"react-redux\";\nimport AddDoctor from \"../../Components/page/EditProfile/careCoach/addDoctor/addDoctor\";\nimport { fetchProgramsData } from \"../../modules/program\";\nimport { fetchHospitals } from \"../../modules/hospital\";\n\nconst mapStateToProps = state => {\n  const { programs, hospitals } = state;\n  return {\n    programs,\n    hospitals\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchHospitals: (countryId, cityId) =>\n      dispatch(fetchHospitals(countryId, cityId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDoctor);\n"],"sourceRoot":""}