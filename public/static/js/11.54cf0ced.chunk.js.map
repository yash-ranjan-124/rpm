{"version":3,"sources":["Assets/images/more_options.svg","Mobile/Components/page/EditProfile/common/message.js","Mobile/Components/page/EditProfile/common/mobileVerification.js","Mobile/Containers/VerifyOtp/index.js","Mobile/Components/page/EditProfile/message.js","Mobile/Components/page/EditProfile/common/personalSection.js","Mobile/Components/page/EditProfile/doctor/workSection.js","Mobile/Components/page/EditProfile/common/settingSection.js","Mobile/Components/page/EditProfile/doctor/menuBar.js","Mobile/Components/page/EditProfile/doctor/index.js","Mobile/Components/Common/tag/index.js","Mobile/Components/page/EditProfile/careCoach/workSection.js","Mobile/Components/page/EditProfile/careCoach/serviceSection.js","Mobile/Components/page/EditProfile/careCoach/menubar.js","Mobile/Components/page/EditProfile/careCoach/index.js","Mobile/Components/page/EditProfile/patient/contacts.js","Mobile/Components/page/EditProfile/patient/medicalSection.js","Mobile/Components/page/EditProfile/patient/insuranceSections.js","Mobile/Components/page/EditProfile/patient/menubar.js","Mobile/Components/page/EditProfile/patient/index.js","Mobile/Components/page/EditProfile/programAdmin/workSection.js","Mobile/Components/page/EditProfile/programAdmin/menuBar.js","Mobile/Components/page/EditProfile/programAdmin/index.js","Mobile/Components/page/EditProfile/common/editForm.js","Mobile/Containers/CommonSuccessMsg/index.js","Mobile/Components/ProfileSetup/message.js","Mobile/Components/ProfileSetup/SetUpStep.js","Mobile/Containers/Page/profileSetup/SetUpStep.js","Mobile/Components/page/EditProfile/index.js","Mobile/Containers/Page/editprofile/index.js","Mobile/Components/page/MyProfile/message.js","Mobile/Components/page/MyProfile/index.js","Mobile/Containers/Page/myprofile/index.js","Mobile/Components/SurveyDetail/message.js","Mobile/Components/SurveyDetail/surveyDetailHeader.js","Mobile/Components/Cards/patientCard.js","Mobile/Components/SurveyTabs/message.js","Mobile/Components/SurveyTabs/patientPane.js","Mobile/Components/Question/text/readOnly.js","Mobile/Components/Question/radio/readOnly.js","Mobile/Components/Question/checkbox/readOnly.js","Mobile/Components/Question/text/writable.js","Mobile/Components/Question/radio/writable.js","Mobile/Components/Question/checkbox/writable.js","Mobile/Components/Question/text/response.js","Mobile/Components/Question/radio/response.js","Mobile/Components/Question/checkbox/response.js","Mobile/Components/Question/index.js","Mobile/Components/SurveyTabs/surveyPane.js","Mobile/Components/SurveyDetail/sendToMorePatient.js","Mobile/Components/SurveyDetail/patientCompleted.js","Mobile/Components/SurveyDetail/patientInprogress.js","Mobile/Components/SurveyDetail/result.js","Mobile/Components/SurveyDetail/surveyDetail.js","Mobile/Components/SurveyDetail/index.js","Mobile/Containers/survey/SurveyDetail/index.js","Mobile/Components/CreateSurvey/message.js","Mobile/Components/CreateSurvey/createSurveyHeader.js","Mobile/Components/CreateSurvey/index.js","Mobile/Containers/survey/Createsurvey/index.js","Mobile/Components/DashBoard/message.js","Mobile/Components/DashBoard/common/DashboardAppointment.js","Mobile/Containers/DashBoard/dashboardAppointment.js","Mobile/Components/DashBoard/common/DashboardReminder.js","Mobile/Containers/DashBoard/dashboardReminder.js","Mobile/Components/Cards/surveyCard.js","Mobile/Components/Cards/patientSurveyCard.js","Mobile/Components/Surveys/completedSurvey.js","Mobile/Components/DashBoard/common/DashboardSurvey.js","Mobile/Containers/DashBoard/dashboardSurvey.js","Mobile/Components/DashBoard/common/DashboardHome.js","Mobile/Components/Calendar/messages.js","Mobile/Components/Calendar/cell.js","Mobile/Components/Calendar/index.js","Mobile/Containers/Calendar/index.js","Mobile/Components/DashBoard/common/DashboardCalendar.js","Mobile/Components/Cards/programCard.js","Mobile/Components/DashBoard/CareCoach/DashboardPrograms.js","Mobile/Components/Cards/surveyTemplatesCard.js","Mobile/Components/Surveys/index.js","Mobile/Components/Surveys/inprogressSurveys.js","Mobile/Components/DashBoard/CareCoach/DashboardSurvey.js","Mobile/Containers/survey/index.js","Mobile/Components/DashBoard/Patient/medicalDetails.js","Mobile/Containers/DashBoard/dashboardMedicals.js","Mobile/Components/DashBoard/PageContent.js","Mobile/Components/DashBoard/addButton.js","Mobile/Components/DashBoard/Footer/message.js","Mobile/Components/DashBoard/Footer/careCoachMenu.js","Mobile/Components/DashBoard/Footer/doctorsMenu.js","Mobile/Components/DashBoard/Footer/patientsMenu.js","Mobile/Components/DashBoard/Footer/index.js","Mobile/Components/DashBoard/index.js","Mobile/Containers/DashBoard/index.js","Mobile/routes/dashboard/index.js","Mobile/Components/page/article/details/message.js","Mobile/Components/Modal/articleShareWith/message.js","Mobile/Components/Modal/articleShareWith/list.js","Mobile/Components/Modal/articleShareWith/index.js","Mobile/Containers/Modal/articleShareWith.js","Mobile/Components/page/article/details/header.js","Mobile/Components/Modal/articleShare/message.js","Mobile/Components/Modal/articleShare/content.js","Mobile/Components/Modal/articleShare/index.js","Mobile/Containers/Modal/articleShare.js","Mobile/Components/page/article/details/index.js","Mobile/Containers/Page/article/details.js","Mobile/Components/Cards/articleCard.js","Mobile/Containers/Cards/article.js","Mobile/Components/page/article/list/recommendedArticles.js","Mobile/Components/page/article/list/favoritesArticles.js","Mobile/Components/page/article/list/message.js","Mobile/Components/page/article/list/index.js","Mobile/Containers/Page/article/list.js","Mobile/routes/article/index.js","Mobile/Components/AppointmentsHistory/index.js","Mobile/Containers/AppointmentsHistory/index.js","Mobile/Components/Detail/patient/footer.js","Mobile/Components/Detail/patient/index.js","Mobile/Containers/Detail/PatientProfile/index.js","Mobile/Components/Detail/index.js","Mobile/routes/patient/index.js","Mobile/routes/doctor/index.js","Mobile/Components/Questionnaire/message.js","Mobile/Components/Questionnaire/questionnaireHeader.js","Mobile/Components/Questionnaire/index.js","Mobile/Containers/Questionnaire/index.js","Mobile/Components/Cards/doctorCard.js","Mobile/Components/ProgramDetails/dischargeBar.js","Mobile/Components/ProgramDetails/pageContent.js","Mobile/Components/ProgramDetails/index.js","Mobile/Containers/ProgramDetails/index.js","Mobile/Components/ProgramDetails/summary.js","Mobile/Containers/ProgramDetails/summary.js","Mobile/Components/PatientResponse/message.js","Mobile/Components/PatientResponse/doc.js","Mobile/Components/PatientResponse/messages.js","Mobile/Components/PatientResponse/header.js","Mobile/Components/PatientResponse/index.js","Mobile/Containers/PatientResponse/index.js","Mobile/Components/History/index.js","Mobile/Containers/History/index.js","Mobile/routes/auth.js","Mobile/Containers/Auth/index.js","Mobile/Containers/Header/index.js","modules/medical/selector.js","modules/program/selector.js","Mobile/Components/BlankState/index.js","Mobile/Containers/BlankState/index.js"],"names":["module","exports","__webpack_require__","p","messages","defineMessages","goToDashBoard","id","defaultMessage","save","myProfile","profileSetupText","subduedProfileSetupText","phoneVerificationTitle","phoneVerificationOKText","chnageNumberText","OTPReceivingTimeText","resendOTP","OTPSent","OTPPlaceholder","mobile","COUNTDOWN_DEFAULT","MobileVerification","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tick","countdown","state","setState","resendDisabled","handleVerify","_this$props","verifyOtp","otp","assertThisInitialized","verifyDisabled","handleCancel","verify","_this$props2","reSendOtp","contactNo","_this2","timer","setInterval","clearInterval","length","_this3","formatMessage","intl","_this$props3","visible","is_otp_verifying","is_otp_send","_this$props3$is_otp_e","is_otp_error","_this$props3$otp_erro","otp_error","_this$props3$contactN","countryCode","phoneNumber","_this$state","react_default","a","createElement","modal","title","onOk","okText","okButtonProps","disabled","status","className","onCancel","wrapClassName","cancelButtonProps","destroyOnClose","MobileInput","es_button","style","height","onClick","input","placeholder","onChange","e","saveOtp","target","value","type","backgroundColor","bottom","marginLeft","display","width","alt","src","errorIcon","message","verifiedIcon","color","React","Component","injectIntl","connect","phone","dispatch","data","sendOtp","personal","contacts","medical","settings","insurance","insuranceProvider","insurancePolicy","insuranceExpiresOn","hospital","work","hospitalName","speciality","specialityRule","licenseNumber","bio","addressLine1","addressLine2","zipcode","cityLabel","countryLabel","organisationName","services","notBlank","nursingTitle","physicalTherapyTitle","occupationalTherapyTitle","speechAndLanguagePathologyTitle","medicalCounsellingTitle","healthAideTitle","nursing","physicalTherapy","occupationalTherapy","speechAndLanguagePathology","medicalCounselling","healthAide","cardiacCareTitle","diabetesCareTitle","smokingCessationTitle","respiteCareTitle","homemakingTitle","cardiacCare","diabetesCare","smokingCessation","respiteCare","homemaking","medicalServices","homeHealthCare","specialCare","nonMedicalServices","basic","chiefComplaint","allergies","useComma","surgeriesFracture","otherConditions","vital","vitalSubtitle","bodyTemperature","respirationRate","breathePerMinute","pulseRate","bpm","bloodPressure","bpUnit","clinicalReadings","clinicalReadingsSubtitle","notBeBlank","caseDoctor","notAssigned","careCoach","relativeName","parent","spouse","guardian","relativeMobile","contactRelative","emergencyContactMobile","emergencyContactName","emergencyContactRule","phoneNumberRule","careCoachphoneNumberRule","changePassword","calendarSynced","smsAlerts","smsWillBeSent","emailAlerts","emailWillBeSent","pushAlerts","pushWillBeSent","reminderAlerts","reminderWillBeSent","account","notifications","selectPhotoTitle","photoOKText","cropImage","photoVisibleInfo","verified","notVerified","nameRule","dobRule","genderRule","localityRule","zipcodeRule","cityRule","countryRule","sendOTP","fullName","dateOfBirth","email","male","female","city","country","consentForm","idProof","uploadedOn","newPatient","newDoctor","patientEmail","doctorEmail","incorrectEmail","program","programError","newPatientSuccess","newPatientFailure","newDoctorSuccess","newDoctorFailure","licenseId","hospitalError","relativeNumberError","emergencyNumberError","Option","es_select","FormItem","es_form","Item","RadioGroup","es_radio","Group","PATIENT","USER_CATEGORY","CARE_COACH","DOCTOR","COUNTRY_CODE","PHONE_NUMBER","ADDRESSLINE1","ADDRESSLINE2","ZIP_CODE","CITY","RELATIVES_PHONE_NUMBER","EMERGENCY_CONTACT_PHONE_NUMBER","FIELDS","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","ParsedCountryCodes","callingCountries","all","cc","countryCallingCodes","code","push","getParsedCountryCode","disabledDate","current","moment","endOf","PersonalInfo","rule","callback","uploadNewPhoto","originalImageRef","click","onOriginalFileSelect","files","openCropPic","loadCroppedImage","window","Croppie","FileReader","croppie","croppieContainer","viewport","boundary","showZoomer","enableExif","enforceBoundary","reader","onload","bind","url","result","readAsDataURL","setOriginalRef","ref","setCroppieContainer","hideProfilePicModal","handleProfilePicSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","format","sent","uploadProfilePic","stop","_x","apply","arguments","b64","changeProfilePic","_id","userData","basicInfo","file","FormData","append","name","selectedCountryCode","val","showDropDown","suggestedCountryCodes","filter","indexOf","setInitialCountryCode","getFieldValue","form","searchCountryCode","enableVerifyButton","_this$props2$form","getFieldError","_this$props2$userData","_this$props2$userData2","personalInfo","_this$props2$userData3","_contactNo$countryCod","_contactNo$phoneNumbe","_contactNo$verified","countryCodeField","phoneNumberField","setCalendarRef","calendarRef","openCalendar","preventDefault","document","getElementsByClassName","isNumber","validateFields","_ref2$basicInfo","category","_ref3$basicInfo","showOtpModal","loading","hideOtpModal","handleOtpVerify","debounce","openOtpModal","_this$props4","cleanOtpState","closeOtpModal","show_otp_modal","_this$props$userData","_this$props$userData$","_this$props$userData$2","_basicInfo$profilePic","profilePicLink","placeHolder","_personalInfo$contact","_personalInfo$homeAdd","homeAddress","dob","gender","zipCode","_this$props$form","getFieldDecorator","isFieldTouched","fieldError","_this$props$customFie","customFieldsError","forEach","field","_contactNo$phoneNumbe2","undefined","_isValid","phoneNoRule","required","validator","addressLine2Rule","zipCodeRule","mobileNumberRequiredClass","es_icon","fontSize","VerifyOtp","modules","margin","right","upload","accept","marginRight","concat","notVerifiedIcon","help","validateStatus","validateTrigger","initialValue","rules","showSearch","dist_index_es","svg","notFoundContent","filterOption","onSearch","onSelect","showArrow","dropdownStyle","dropdownClassName","optionLabelProp","map","d","key","alpha2","marginBottom","label","open","date_picker","showToday","calendar","Button","justifyContent","paddingTop","CountryCity","cityField","countryField","cityRules","countryRules","dropdownIcon","dropdown","TextArea","BIO","ADRESSLINE2","WORK_CITY","WORK_COUNTRY","HOSPITALS","WorkSection","onChangeCity","countryId","cityId","setFieldsValue","defineProperty","getHospital","onChangeCountry","_this$props$form2","getHospitalsData","hospitalsData","hospitals","options","workSection_Option","getVisitingHospitals","visitingHospitals","_this$props$userData$3","officeAddress","_this$props$userData$4","_work$officeAddress","about","specialities","_this$props$form3","workSection_FormItem","suffixIcon","autosize","autoComplete","mode","optionFilterProp","option","children","toLowerCase","SettingSection","handleOpenChangePasswordModal","openChangePassword","user_data","openConsentForm","purpose","openDocumentsVerification","openIdProof","history","path","ID_PROOF","idProofUploadDate","consentFormUploadDate","_this$props3$userData","_this$props3$userData2","documents","_this$props3$userData3","isCalendarSynced","preferences","_preferences$emailAle","_preferences$pushAler","_preferences$smsAlert","_preferences$reminder","_documents$idProof","_documents$consentFor","idProofUploadedOn","consentFormUploadedOn","accountsContent","config","CALENDAR_SYNC","settingSection_FormItem","valuePropName","es_checkbox","notificationsContent","showPassword","es_list","span","bordered","dataSource","renderItem","item","MenuBar","scrollToElement","scroller","scrollTo","duration","delay","smooth","offset","setActive","active","menu","menuElement","index","es_menu","activeClass","to","spy","isDynamic","stopPropagation","onSetActive","selectedKeys","doctor","PersonalSection","Menubar","tag","fieldName","tag_FormItem","tokenSeparators","organizationName","servicesValue","careCoach_workSection_Option","careCoach_workSection_FormItem","workSection_TextArea","ServiceSection","_this$props$userData$5","homeHealthCareServices","subtitle","speechPathology","specialCareValues","nonMedicalService","homeMaking","homeHealthCareServiceContent","serviceSection_FormItem","specialCareContent","nonMedicalServiceContent","EditProfile_careCoach","RadioButton","Form","RELATIVES_NAME","RELATIVES_COUNTRY_CODE","EMERGENCY_CONTACT_NAME","EMERGENCY_CONTACT_COUNTRY_CODE","ContactSection","isAnyContactAvailable","handleChangeEmergencyContact","isEnableEmergencyContact","checked","_setFieldsValue","_setFieldsValue2","emergencyContactCountryCode","isRelativeNotEqlToPersonalPhone","personalNumber","personalCountryCode","relativeCountryCode","isRelativeCodeNotEqlToPersonalPhone","isEmergencyNotEqlToPersonalPhone","emergencycountryCode","isEmergencyCodeNotEqlToPersonalPhone","canUseEmergencyCheckboxEnable","rname","rcountrycode","rcontactno","_this$props$careCoach","careCoaches","_this$props$caseDocto","caseDoctors","_this$props$hospitals","programIds","_programIds$","careCoachId","doctorId","hospitalId","_contacts$relatives","relatives","_contacts$emergencyCo","emergencyContact","_contacts$useRelative","useRelativeAsEmergencyContact","isEmergencyContactSet","_relatives$contactNo","relativeContactNo","_relatives$relation","relation","relativeRelation","_emergencyContact$con","emergencyContactNo","forEmergencyContactName","emergencyCountryCode","contacts_FormItem","contacts_RadioGroup","size","assign","phoneField","rulesCountryCode","rulesPhoneNumber","DIAGNOSIS_METHOD","DIAGNOSISMETHOD","SUFFIX","MedicalSection","getInputElement","test","section","content","inputs","forIn","medicalSection_FormItem","getReadingAttributeForTest","contents","getClinicalReadingForm","testTemplate","testTemplateReading","allTestTemplates","keys","testName","gettestreading","addMoreTest","tests","getseconreading","sectionlabel","sections","medicals_data","clinicalReading","_medicals_data$clinic","suffix","isEmpty","_ref$data","get","hasOwnProperty","changeClinicalReadingType","selectedTests","objectSpread","getTestOptions","_this$state2","currentTests","includes","medicalSection_Option","clinical_test_templates","_this$props$medicalsD","medicalsData","_this$props$medicalsD2","programId","allTest","previousTest","_this$props2$medicals","_medicalsData$basicCo","basicCondition","_medicalsData$vitals","vitals","_basicCondition$chief","_basicCondition$aller","_basicCondition$surge","surgeriesOrFracture","_basicCondition$other","others","_vitals$temperatureUn","temperatureUnit","temperature","pulse","medicalReadings","testOption","forEachRight","element","defaultValue","medicalSection_RadioGroup","medicalSection_RadioButton","SearchIcon","searchIcon","InsuranceSection","insuranceProviders","_this$props$insurance","insurance_provider_data","insuranceSections_Option","getInsuranceProvider","provider","policy","expiresOn","insuranceSections_FormItem","EditProfile_patient","InsuranceSections","programAdmin_workSection_FormItem","programAdmin","CARECOACH","PROGRAMADMIN","REQUIRED_FIELD","_REQUIRED_FIELD","SkipAndGotoDashBoard","gotoDashBoard","getFieldsError","isProfileCompleted","editingOtherUser","ghost","htmlType","EditForm","handleConfirmBlur","confirmDirty","handleSubmit","onSave","console","log","err","values","error","getMenuBar","menubar","DoctorSection","CareCoachSection","PatientSection","ProgramAdminSection","getComponentToShow","component","_PersonalSection","_WorkSection","_SettingSection","_PersonalSection2","_SettingSection2","_PersonalSection3","_WorkSection2","_SettingSection3","setFieldsError","errors","setFields","fieldsError","msg","autoCompleteResult","hasErrors","_this$props2$intl","locale","handleGoBack","_userData$basicInfo","_userData$isProfileCo","Sections","onSubmit","es_row","col","xs","sm","md","lg","xl","xxl","goBackIcon","justify","react","borderTop","editForm_SkipAndGotoDashBoard","successMsg","close","clearMsg","SuccessMsg","step1","step2","step3","consentFormTitle","consentFormSubTitle","idProofTitle","idProofSubTitle","documentUploadHelp1","documentUploadHelp2","uploadButton","uploading","Step","steps","circleIcon","theme","_props$className","labelPlacement","icon","page","profileSetUp","SetupStep","EditProfile","data_save_done","success_msg","clearError","error_msg","Error","goBack","create","gotoMyProfile","params","getData","fields","_this$props$user_data","hospitals_data","formData","_user_data$basicInfo","set","updateUser","MY_PROFILE","DASHBOARD","HOME","_this$props$match","_this$props$match$par","care_coaches","case_doctors","is_profile_error","profile_error","_this$props2$isLoadin","isLoading","Header","isSetUpStep","_user_data$basicInfo2","layout","profileSetup_SetUpStep","gotoChangePassword","goToChangePassword","CommonSuccessMsg","CommonError","withRouter","users","loggedInUser","auth","authenticated_user","editProfile","medicals","clinicalTestTemplates","getUser","makeGetUserById","getMedicalData","makeGetMedicalDataOfUser","getDoctors","makeGetCaseDoctors","getCareCoaches","makeGetCareCoaches","current_user_id","show_profile_pic_modal","is_profile_saved","openProfilePicModal","closeProfilePicModal","fetchUser","saveUserData","fetchInsuranceData","fetchHospitals","reset","GLOBAL_MODALS","CHANGE_PASSWORD","DOCUMENTS_MODAL","calendarSync","smsAlertsDetail","emailAlertsDetail","pushAlertsDetail","reminderAlertsDetail","edit","relativeNo","noAllergies","noSurgeries","noOtherCondition","otherCondition","accounts","isBlank","gotoEditProfile","UPDATEDAT","MyProfile","getTags","currentContext","getClinicalReadings","currentTest","fontFamily","prevProps","prevState","clinicalTestTemplates_data","EDIT_PROFILE","_this$props4$isLoadin","citySelector","countrySelector","_this$props4$hospital","hospital_data","_this$props4$medicals","_this$props4$insuranc","_this$props4$intl","providerName","_user_data$work","_user_data$settings","_user_data$personalIn","_user_data$programIds","_user_data$documents","_user_data$insurance","validTill","DOB","_settings$isCalendarS","_settings$preferences","_settings$preferences2","_settings$preferences3","_settings$preferences4","_settings$preferences5","_work$services","workAddressLine1","workAddressLine2","_officeAddress$city","workCity","_officeAddress$countr","workCountry","workZipCode","_homeAddress$city","_homeAddress$country","homeCountryName","homeCityName","workCountryName","workCityName","_user_data$services","_user_data$personalIn2","_user_data$personalIn3","isValid","age","rightArrow","checkBoxTrue","checkBoxFalse","_services$homeHealthC","_services$specialCare","_services$nonMedicalS","_relativeContactNo$co","_relativeContactNo$ph","relativePhoneNumber","_emergencyContactNo$c","_emergencyContactNo$p","emergencyPhoneNumber","_medicalsData$clinica","temperatureVal","parseInt","Math","round","testsTakenByPatient","allTests","allergiesTags","surgeriesOrFractureTags","othersTags","servicesTags","align","messageIcon","callIcon","MyProfile_SkipAndGotoDashBoard","countryCities","programs","getCountry","makeCountrySelector","getCity","makeCitySelector","allSurveys","endSurvey","downloadReport","sendToMorePatients","survey","sortBy","surveySentDate","sendSurvey","patientSelected","previewQuestionnaire","Json2csvParser","require","Parser","fileDownload","SurveyDetailHeader","surveyId","doRequest","method","REQUEST_TYPE","GET","Survey","downloadSurveyReport","then","response","_response$payload","payload","_response$payload$dat","csvHeader","user","columns","row","i","answer","columnKeys","column","parse","csvBody","header","selectedPatient","showSendSurveyBarToggle","handleOnSentSurvey","handleEndSurvey","_this$props$status","changeContent","_this$props$surveys","surveys","_surveys$participants","participantsId","isDownloadValid","patientCount","SURVEY_STATUS","COMPLETED","defaultSelectedKeys","multi_select","GoBack","overlay","trigger","placement","More","PatientCard","showDischargeBarToggle","onPatientCardSelect","onPatientCardDeselect","isChecked","patientDischargedList","cardClicked","handleOnClick","openPatient","ENTITY","snapshot","uncheckAll","checkbox","_this$props4$wantChec","wantCheckBox","grid_col","es_card","USER_STATUS","ENROLLED","defaultProfilePic","DISCHARGED","substr","INACTIVE","endDate","chooseFrom","showing","enrolled","inactive","discharged","location","dateAdded","patientAt","programAt","programIn","questionnairePreview","questions","toComplete","PatientPane","getProgramsOption","programs_data","availableProgram","selectedsurvey","_programs_data$progra","diff","patientPane_Option","handleSearchChange","query","getpatient","getProgramPatient","patients","patientData","currentUser","patient","getPatientCardData","getParentNode","t","parentNode","surveyEndDate","throttle","selectedProgram","_selectedsurvey$start","startDate","_selectedsurvey$endDa","surveyStartDate","handleSearch","_this$props5","handleOnCheck","handleOnSelect","_this$props5$selected","handleSelectChange","handleSortByChange","handleDateChange","_this$state$patients","patientsList","surveyPaticipants","surveyProgram","programPatients","_selectedsurvey$parti","participants","_selectedsurvey$progr","surveyPatients","programOptions","programName","programCountry","currentProgram","_currentProgram$targe","targetLocation","_targetLocation$count","gutter","DownArrow","getPopupContainer","separator","getCalendarContainer","allowClear","prefix","search","findIndex","participant","participantId","patientCard","classname","TextReadOnly","readOnly_TextArea","RadioReadOnly","singleOption","CheckBoxReadOnly","TextWritable","onTextChange","questionId","writable_TextArea","RadioWriteable","questionIndex","onRadioChange","writable_RadioGroup","buttonStyle","writable_RadioButton","CheckBoxWritable","onCheckboxChange","TextResponse","_this$props$patientRe","patientResponse","QuestionId","validResponseId","_Qresposne$questionId","_questionResponse$res","RadioResposne","CheckBoxResponse","Questions","getOptionComponent","displayType","opitionType","OPTION_TYPE","TEXT","DISPLAY_TYPE","READONLY","readOnly","WRITABLE","writable","text_response","RADIO","radio_readOnly","radio_writable","radio_response","CHECKBOX","checkbox_readOnly","checkbox_writable","checkbox_response","_this$props2$data","statement","OptionComponent","RESPONSE","SurveyPane","fetchSurveyTemplates","surveytemplateId","surveyQuestion","_this$props$surveytem","surveytemplates","questionsId","surveyDescription","timeToComplete","_surveytemplates$surv","description","time_to_complete","question","Question","SendToMorePatient","patientPane","handleRangeChange","PatientCompletedSurvey","fetchPaticipantForSurveyBasedOnStatus","completedParticipant","obj","PatientInprogressSurvey","inprogressParticipant","TabPane","Result","replace","getCompletedParticipants","getInprogressParticipants","sortParticipantsBy","sortByDate","surveyParticipantsId","sort","b","Aindex","particpant","Bindex","Aparticipnants","Bparticipants","AsurveySentDate","BsurveySentDate","sortByName","_this$props$users","_ref2$basicInfo$name","Aname","_ref3$basicInfo$name","Bname","_this$state$inprogres","inprogress","_this$state$completed","completed","ALL_SORT_BY","NAME","patientStatus","surveyData","_surveys$participants2","_users$id$basicInfo","_users$id$basicInfo$n","RegExp","_surveys$participants3","_users$id$basicInfo2","_users$id$basicInfo2$","changeStatus","_this$props4$programs","_this$state2$complete","_this$state2$inprogre","updatedAt","lastSentDate","lastSentTime","completedLength","inprogressLength","totalParticipants","result_Option","tabs","tabBarStyle","tab","patientCompleted","patientInprogress","ParticularSurveyDetail","contentIs","patientSelectedForDischarge","showDischarge","fetchPatientList","prevSelectedPatient","splice","filterBasedOn","sortBasedOn","fetchProgramPatient","formatPaticipants","allParticipants","participantCategory","abrupt","_callee2","_this$state3","updateSurveys","_context2","is_error","handleOnPreviewClick","templateId","dates","dateStrings","handleUnselectAll","_this$state4","openEndSurveyModal","surveyDetail_Option","fetchSurveys","fetchQuestions","fetchProgramsData","_ref3","_ref3$template","template","_ref3$startDate","_ref3$endDate","_this$state5","_this$state6","setTabDashboard","surveyDetailHeader","SurveyDetail_result","sendToMorePatient","SurveyDetail","fetchSurveysById","surveyDetail","_state$page","_state$page$createSur","createSurvey","surveytemplates_data","filterBy","q","endSurveys","addResponse","completedOn","END_SURVEY","patientsSelected","checkIfNew","isNew","createdAt","multiselect","CreateSurvey","updateBrowserhistory","_this$props$history","pathname","createSurveys","CreateSurvey_Option","getValidProgramForSurvey","createSurveyHeader","careCoachProgramHeading","careCoachActiveProgram","careCoachExpiredProgram","careCoachSortProgramByRecentUpdated","careCoachExpiredSortProgramByName","careCoachExpiredSortProgramByDate","dashboardAppointments","dashboardReminders","dashboardViewAll","dateSent","dashboardSurveys","dashboardPatientSurveys","newAppointment","reportAdverseEvent","DashboardAppointment","handleUpdateVital","_this$props$auth","auth_user","_users$auth_user$basi","_basicInfo$category","currentMedicalField","handleUpdateClinicalReading","_this$props2$auth","_this$props2$users","_users$auth_user$basi2","_basicInfo$category2","handleUpdateMedication","_this$props3$auth","_this$props3$users","_users$auth_user$basi3","_basicInfo$category3","getCurrentWeek","currentDate","weekStart","dateFns","startOfWeek","weekEnd","endOfWeek","userId","fetchEventsData","prevWeek","subWeeks","selectedDate","nextWeek","addWeeks","onDateClick","day","goToCalendarDashboard","DASHBOARD_MENU","CALENDAR","show","renderDateDots","cloneDay","dots","isVisible","isSameDay","_this$props$events","events","_this$props$events$ev","_this$props$events$sc","scheduleEventListByDate","count","event","eventType","EVENT_TYPE","APPOINTMENT","EVENT","STATUS","PASSED","Date","pollItems","pollEventsData","lastUpdatedAt","lastUpdatedOld","lastUpdatedNew","isAfter","days","addDays","slice","_this4","_loop","isToday","_this$props5$events","_this$props5$events$e","_this$props5$events$s","currentUserId","today","eventsData","calendarStartingDate","calendarEndingDate","card","appointment","calendarUserId","_this5","_loop2","renderHeader","renderDays","renderDates","renderDots","renderCurrentSelectedDate","renderEvents","MenuItem","OneTime","Repeating","DashboardReminder","selectMenu","selectedMenu","renderEventsDates","pickBy","REMINDER","repeat","pickRemindersByDate","_this$props$events2","_this$props$events2$e","_this$props$events3","_this$props$events3$s","orderedScheduleEventListByDate","date","ids","reminder","renderMenu","filterOneTimeEvents","filterRepeatingEvents","SurveyCard","handleOnDownload","isDashboard","_data$participants","_data$status","_data$template","_data$participantComp","participantCompletedSurvey","_data$surveyId","TotalParticipants","startingDate","endingDate","INPROGRESS","_ref2$_id","PatientSurveyCard","CompletedSurveys","surveys_data","_this$props$completeS","completeSurveyIds","surveyCard","DashboardSurvey","goToSurveyDashboard","SURVEYS","fetchRecentlySentSurveys","_ref$programId","recentlyAdded","toString","patientSurveyCard","renderSurveysForCareCoach","renderSurveysForPatient","statuses","DashBoardHome","_Component","isDashBoard","inherits","createClass","appointments","_this$props$user_data2","_this$props$user_data3","propsToSend","dashboardAppointment","dashboardReminder","dashboardSurvey","syncCalendar","cancel","reschedule","editNotes","updateVitals","updateMedication","updateClinicalReadings","doneButton","undoButton","joinCallButton","addNotes","editReminder","deleteReminder","scheduledBy","markAsDoneBy","Cell","isSelected","dropDown","Calendar","fetchEventsAgain","currentMonth","monthStart","startOfMonth","monthEnd","endOfMonth","changeMonth","JSON","currentYear","getYear","newDate","month","getMonthsData","monthsData","monthsShort","year","Calendar_Option","stringify","nextMonth","addMonths","getMonth","prevMonth","subMonths","onChangeReminderStatus","showReminder","onChangeAppointmentStatus","showAppointment","_ref$basicInfo","handleOk","modalVisible","handleModalVisible","renderDateAndLine","rows","scheduleEventList","eventData","_this4$state","currentDateEvents","disableDate","isBefore","cell","renderCells","_state$auth","viewerId","stateProps","dispatchProps","ownProps","fetchEventsDataDispatch","viewer","DashBoardCalendar","_getPrototypeOf2","_len","args","Array","_key","goToAppointmentHistory","fetchAppointmentsHistory","Containers_Calendar","myCalendar","ProgramCard","createAt","expireOn","Valid","PROGRAM","expiry","capsule","products","DashBoardPrograms","currentFilterType","active_programs","expired_programs","getProgramResult","setProgramExpiredActiveState","program_data","getMyPrograms","prevProgramData","isEqual","RECENTLY_UPDATED","nameA","nameB","DATE_ADDED","activeFrom","active_programs_list","expired_programs_list","sortResults","active_count","expired_count","active_program_result_cards","_value$patients","totalPatients","cardData","programCard","expired_program_result_cards","defaultActiveKey","DashboardPrograms_TabPane","DashboardPrograms_Option","SurveyTemplateCard","lib_default","text","maxLine","ellipsis","trimRight","basedOn","Surveys","surveytemplatesId","surveyTemplatesCard","InprogressSurveys","_this$props$inprogres","inprogressSurveyIds","handleOnClickInprogress","handleOnTabChange","currentTab","ALL_TEMPLATES","handleSortBy","sortTemplateBasedOn","sortSurveyBasedOn","getSurveyTemplates","getInprogressSurvey","getCompleteSurvey","sortSurveyByDate","_this$props$surveys_d","Aid","AupdatedAt","Bid","BupdatedAt","sortSurveyByName","_this$props$surveys_d2","_ref3$template$title","Atitle","_ref4$template","_ref4$template$title","Btitle","inprogressSurvey","completeSurvey","fetchCareCoachSurveys","_this$props2$surveyte","_ref5$template","_ref5$template$title","_ref6$template","_ref6$template$title","DATE_SENT","surveyDataSorbtedByDateSent","ACreatedAt","BCreatedAt","surveyDataSorbtedByName","_this$state$completeS","_this$props5$surveyte","DashboardSurvey_Option","activeKey","DashboardSurvey_TabPane","Components_Surveys","inprogressSurveys","completedSurvey","is_survey_error","is_survey_saved","survey_error","PatientDashboard","onUpdate","ChangeMedicalField","setBasicRef","BasicformRef","setVitalRef","VitalformRef","handleOnSubmit","medicalConditionId","MEDICALS_OPTIONS","BASIC","VITAL","MEDICATION","MedicationformRef","CLINICAL_READING","ClinicalReadingformRef","dataToSave","join","saveBasicConditionData","updateAt","addVitalData","UpdateClinicalReadingData","medicines","medicine","lasteelment","product_id","pop","medication","addMedication","resetFields","MODE","READ","testSelected","fetchPatient","fetchAdverseEvent","is_loading","_this$props$medicals_","products_data","medications_data","adverseEvent","openHistoricalClinicalData","openVitalsData","openMedicationData","openPrescription","medicalDetails","pageIs","handleOnUpdate","_state$page$patientPr","patientProfile","medications","getUserPrograms","makeGetUserPrograms","getAdverseEvents","makeAdverseEventSelector","profileSetupData","auth_data","authenticated","signOut","HISTORICAL_CLINICAL_READING","HISTORICAL_VITALS_READING","HISTORICAL_MEDICATION_DATA","medication_data","PRESCRIPTION","openClinicalReading","CLINICALREADING","ADVERSE_EVENTS","PatientMedicals","PageContent","getTapMenuContent","DashboardHome","DashboardCalendar","PROGRAMS","DashboardPrograms","MEDICALS","dashboardMedicals","Containers_survey","AddButton","handleAddButtonClick","should_rotate","currentAddMenu","openModal","CareCoachAddmenu","EVENT_MODAL","PATIENT_MODAL","DOCTOR_MODAL","PatientAddmenu","onVisibleChange","rotate","dashboard","mycalender","redirectToTab","tabValue","MyMedicalDetails","DashBoard_Footer","_props$user","_props$user$basicInfo","doctorsMenu","careCoachMenu","patientsMenu","Dashboard","_this$props$location","_this$props$location$","defaultTab","_this$props$match$url","ALL","APPOINTMENTS","REMINDERS","ADVERSEEVENTS","pushTabToHistory","_prevProps$match","prevPath","_this$props$match2","newPath","_this$props$match2$pa","lastIndexOf","signup","DashBoard_PageContent","addButton","getProgramPatients","fetchProgramPatients","getDataOfCurrentUser","propsFromState","propsFromDispatch","_propsFromState$auth_","rest","objectWithoutProperties","DashboardRoutes","Switch","Route","exact","DashBoard","ONLY_CALENDAR","ONLY_SURVEYS","ONLY_MEDICALS","BlankState","allArticles","sharedWith","views","source","ShareList","fetchData","articleId","_this$props2$article","article","getArticleListData","_data$patients","_props$users","_props$hospitals","_props$patients","patientCards","formatPatientCard","_patientData$basicInf","onClickCard","getPatientCards","ArticleShareWith","footer","_assertThisInitialize","isError","modalProps","bodyStyle","articleShareWith_list","_state$modal","modalType","entityId","articles","getArticle","makeGetArticleById","ARTICLE_SHARE_WITH","fetchArticleParticipants","_data$basicInfo","_data$basicInfo$profi","profilePicLInk","usrDp","_props$article","shareWith","_props$currentUser","_props$currentUser$ba","_article$participants","handleUserClick","getPatientDetailURL","userList","Modal_articleShareWith","ShareToPatients","handleCardSelect","handleCheck","handleCardDeSelect","handleOnProgramSelect","deselectAll","handleSelectAll","_this$props$programs","selectAll","_ref$patients","programsData","content_Option","selectedPatients","_this$props2$hospital","_ref2$patients","participantsList","_this$props3$selected","_this$props3$programs","_this$props3$article","_this$props3$article$","_ref3$patients","alreadyShare","selected","total","ShareArticle","isSaveDisabled","onShare","share","fetchArticle","res","catch","_this$props2$article$","list","toConsumableArray","change_password_error","_this$props3$is_chang","is_changing_password_error","articleShare_content","textAlign","icoError","ARTICLE_SHARE_TO_PATIENTS","shareArticle","fetchArticlesById","ArticleShare","ArticleDetails","t0","getTitle","timeToRead","_article$views","isFavourite","onLike","readTime","viewCount","liked","like","shareIcon","Modal_articleShare","getDescription","_this$props$article","getSource","_this$props$article2","href","makeFavouriteUnfavourite","viewShareWith","prevArticleId","_this$props$article3","_this$props$currentUs","details_header","makeFavouriteUnfavouriteDispatch","_props$articleData","articleData","viewsCount","getArticleDetailURL","toggledFavourite","ArticleCard","RecommendedArticles","_this$props$recommend","recommendedArticles","Cards_article","FavoriteArticles","_this$props$favoriteA","favoriteArticles","articleTitle","popular","Article","pushFilteredArticles","handleOnClickArticle","ARTICLES","RECOMMENDED","FAVOURITES","fetchArticles","articlesObject","xm","list_Option","list_TabPane","list_recommendedArticles","favoritesArticles","Articles","ArticleDetailsComp","_props$match","_props$match$params","article_details","ArticleRoutes","ARTICLE","ROOT","DETAILS","visitIcon","visit","visitIconMissed","visitMissed","callIconMissed","callMissed","videoCallIcon","videoCall","videoCallIconMissed","videoCallMissed","reminderIcon","TimelineItem","AppointmentsHistory","myHandler","HistoryBody","getElementById","scrolled","scrollTop","scrollHeight","clientHeight","end","lastDate","_payload$data","_payload$data$history","historyIds","getDifference","from","differenceInMinutes","differenceInHours","renderIcon","activityMode","ACTIVITY_MODE","CALL","PENDING","VISIT","CHAT","renderTimeLineItems","_event$data","participantOne","participantTwo","otherUserId","showYou","otherUserProfilePic","otherUserName","otherUserCategory","startTime","difference","endTime","activityName","charAt","toUpperCase","categoryName","dot","avatar","appointmentsHistoryList","appointmentsHistory","appointmentHistory","items","reverse","addEventListener","_this$props$events$hi","lastRenderedDate","timeline","fetchAppointmentsHistoryDispatch","Footer","toggleHistory","openAddAppointment","showHistory","showCalendar","PatientProfile","openVerificationModal","_this$props2$medicals2","_userData$basicInfo$p","_userData$personalInf","_userData$personalInf2","_homeAddress$addressL","_homeAddress$addressL2","spin","Containers_AppointmentsHistory","patient_footer","is_data_loaded","country_city","fetchDoctor","addEditAppointmentReminder","eventId","Detail","Detail_PatientProfile","PatientRoute","strict","render","editprofile","PROFILE","Components_Detail","DoctorRoute","EntityDetail","QuestionnaireHeader","Questinnaire","SurveyTitle","_surveytemplates$temp","questionnaireHeader","Questionnaire","DoctorCard","DischargeBar","dischargePatient","disableDischargeBar","multiSelect","filterUser","_user$basicInfo","_user$basicInfo$name","filterUserData","_this$state$patientDi","patientDischarged","_this$state$patientEn","patientEnrolled","_this$state$patientIn","patientInactive","_this$state$doctorDat","doctorData","onSearchTextChange","LOCATION","_a$personalInfo","_a$personalInfo$homeA","cityA","countryA","_b$personalInfo","_b$personalInfo$homeA","cityB","countryB","countryAData","cityAData","countryBData","cityBData","countryAName","countryBName","cityAName","cityBName","getAge","d1","now","getTime","floor","getTypeCount","_getQuery$tab","getQuery","currentEntity","entity","ProgramPatientDoctorToState","applyDocumentFilter","_this$props2$doctors","programDoctors","_this$props2$patients","patientEnrolledData","patientDischargedData","patientInactiveData","doctorInfo","_args","doctors","_","getPatientsEnrolledComponent","_this$props3$hospital","_value$basicInfo","getPatientsInactiveComponent","patientInactiveUnverified","_this$props4$users","getPatientsDischargedComponent","_this$props5$users","_this$props5$hospital","getDoctorsComponent","_value$visitingHospit","primaryHospital","doctorCard","redirectToProgramDetails","_this$props6","_this$props6$program_","documentStatusFilterType","_this$props7","prevPatients","prevDoctors","documentStatusFilter","DOCUMENT_FILTER_TYPE","NOT_CONSENTED","_ref2","consentFormVerified","NOT_VERIFIED","idProofVerified","trim","_this$props8","_this$props8$program_","_this$props8$program_2","_this$props8$program_3","_this$props8$patients","_this$props8$doctors","_this$props8$user_dat","_this$props8$user_dat2","_this$props8$history$","isActive","_getQuery2","_getQuery2$tab","_getQuery2$status","pageContent_Option","makeQueryString","pageContent_TabPane","borderBottom","pageContent_Item","dischargeBar","ProgramDetails","ProgramIsLoading","pid","getCurrentProgram","getProgramDoctor","pageContent","programDetails","makeGetProgramsById","makeGetProgramDoctors","getPatients","makeGetProgramPatients","getProducts","makeGetProgramProducts","fetchCurrentProgram","fetchProgramDoctors","clearCurrentPrograms","DISCHARGE_PATIENT","Summary","_this2$props","_this2$props$programs","finally","CapsuleIcon","_ownProps$match","_ownProps$match$param","getCurrentProgramDispatch","ProgramSummary","viewProfile","survey_Details","styles","StyleSheet","heading","marginTop","Doc","generateResponsePdf","userDetails","react_pdf_browser_es","qid","checkboxResponse","checkboxAnswer","createDocument","onRender","nextProps","nextState","nextContext","surveyTitle","_this$props2$match","_this$props2$match$pa","fileName","blob","patientsResponses","downloadResponse","downloadingResponse","downloadSuccessMessage","downloadFailureMessage","PatientResponseHeader","uploadSuccess","prepareDoc","backIcon","doc","PatientResponse","handleViewProfile","fetchPatientresponse","_surveys$surveyId$tem","_this$props3$complete","participantData","_users$participantId","_users$participantId$","_users$participantId$2","profilePicPlaceHolder","_medicals_data$partic","disease","_surveys$surveyId$tem2","_template$title","_template$questions","_template$time_to_com","_template$description","TotalQuestions","CompletedDate","CompletedTime","PatientResponse_header","_state$page$patientRe","patientId","History","Authenticated","redirecting","authRedirection","BrowserRouter","Redirect","unauthorizedError","Myprofile","PATIENT_RESPONSE","PROGRAM_SUMMARY","PROGRAM_DETAILS","APPOINTMENT_HISTORY","CREATESURVEYDETAIL","PREVIEWQUESTIONNAIRE","SURVEYDETAIL","ArticleRoute","DashBoardRoute","AuthRoute","_stateProps$user_data","_Users_yraj_lts_code_remotepatientmonitoring_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","showAddButton","AppHeader","__webpack_exports__","reselect__WEBPACK_IMPORTED_MODULE_0__","medicalData","createSelector","makeGetPatientProgramProduct","lodash_es_isEmpty__WEBPACK_IMPORTED_MODULE_1__","getPatientProgram","_userData$programIds","programData","getProgramById","getProgramProducts","productsData","patientList","_program$patients","getProgramDoctors","_program$doctors","doctorList","_programs$products","goHome","resetUnauthorizedError"],"mappings":"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","file":"static/js/11.54cf0ced.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/more_options.365aa85c.svg\";","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  goToDashBoard: {\n    id: \"app.edit-profile.edit-form.go-to-dashboard\",\n    description: \"go to dashboard\",\n    defaultMessage: \"Go to Dashboard\"\n  },\n  save: {\n    id: \"app.edit-profile.edit-form.save\",\n    description: \"save\",\n    defaultMessage: \"Save\"\n  },\n  myProfile: {\n    id: \"app.edit-profile.edit-form.my-profile\",\n    description: \"my profile\",\n    defaultMessage: \"My Profile\"\n  },\n  profileSetupText: {\n    id: \"app.edit-profile.edit-form.profile-setup-text\",\n    description: \"profile set up text\",\n    defaultMessage: \"Now, let’s get your profile set & customize the settings\"\n  },\n  subduedProfileSetupText: {\n    id: \"app.edit-profile.edit-form.subdued-profile-setup-text\",\n    description: \"profile set up description\",\n    defaultMessage:\n      \"You can change this information anytime, in “Settings” section from “My Profile”\"\n  },\n  phoneVerificationTitle: {\n    id: \"app.edit-profile.personal-section.mobile-verification.modal-title\",\n    description: \"mobile verification title\",\n    defaultMessage: \"Mobile Verification\"\n  },\n  phoneVerificationOKText: {\n    id: \"app.edit-profile.personal-section.mobile-verification.ok-text\",\n    description: \"mobile verification ok text\",\n    defaultMessage: \"Verify\"\n  },\n  chnageNumberText: {\n    id: \"app.edit-profile.personal-section.mobile-verification.change-number\",\n    description: \"change number\",\n    defaultMessage: \"Change Number\"\n  },\n  OTPReceivingTimeText: {\n    id: \"app.edit-profile.personal-section.mobile-verification.receiving-otp\",\n    description: \"receiving otp in\",\n    defaultMessage: \"You’ll be receiving the OTP verification code in\"\n  },\n  resendOTP: {\n    id: \"app.edit-profile.personal-section.mobile-verification.resend-otp\",\n    description: \"resend otp\",\n    defaultMessage: \"Resend OTP\"\n  },\n  OTPSent: {\n    id: \"app.edit-profile.personal-section.mobile-verification.otp-sent\",\n    description: \"otp sent\",\n    defaultMessage: \"OTP sent successfully.\"\n  },\n  OTPPlaceholder: {\n    id: \"app.edit-profile.personal-section.mobile-verification.otp-placeholder\",\n    description: \"enter otp placeholder\",\n    defaultMessage: \"Enter OTP code\"\n  },\n  mobile: {\n    id: \"app.edit-profile.personal-section.mobile-verification.mobile\",\n    description: \"mobile\",\n    defaultMessage: \"Mobile\"\n  }\n});\n\nexport default messages;\n","import React from \"react\";\nimport { Modal, Button, Input } from \"antd\";\nimport verifiedIcon from \"../../../../../Assets/images/ico-verified.svg\";\nimport errorIcon from \"../../../../../Assets/images/ico-err.svg\";\n// import { sendOtp } from \"../../../../modules/phone/index\";\nimport { MobileLabel } from \"../../../MobileInput\";\n\nimport { injectIntl } from \"react-intl\";\nimport messages from \"./message\";\n\nconst COUNTDOWN_DEFAULT = 60;\n\nclass MobileVerification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      verifyDisabled: true,\n      resendDisabled: true,\n      countdown: COUNTDOWN_DEFAULT\n    };\n    this.otp = \"\";\n  }\n\n  tick = () => {\n    const { countdown } = this.state;\n\n    if (countdown === 0) {\n      this.setState({ resendDisabled: false });\n    } else {\n      this.setState({ countdown: countdown - 1 });\n    }\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  saveOtp(otp) {\n    this.otp = otp;\n    if (this.otp.length > 3) {\n      this.setState({\n        verifyDisabled: false\n      });\n    }\n  }\n\n  handleVerify = () => {\n    const { verifyOtp, id } = this.props;\n    const { otp } = this;\n    this.setState({ countdown: 0, verifyDisabled: true });\n    verifyOtp(otp, id);\n  };\n\n  handleCancel = () => {\n    const { handleCancel } = this.props;\n    this.setState({\n      countdown: COUNTDOWN_DEFAULT,\n      resendDisabled: true,\n      verify: true\n    });\n    handleCancel();\n  };\n\n  resendOTP = () => {\n    const { reSendOtp, contactNo, id } = this.props;\n\n    reSendOtp(contactNo, id);\n\n    this.setState({\n      countdown: COUNTDOWN_DEFAULT,\n      resendDisabled: true\n    });\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const {\n      visible,\n      is_otp_verifying,\n      is_otp_send,\n      is_otp_error = false,\n      otp_error = {},\n      contactNo: { countryCode, phoneNumber }\n    } = this.props;\n    const { countdown, resendDisabled, verifyDisabled } = this.state;\n\n    return (\n      <Modal\n        visible={visible || is_otp_error}\n        title={formatMessage(messages.phoneVerificationTitle)}\n        onOk={this.handleVerify}\n        okText={formatMessage(messages.phoneVerificationOKText)}\n        okButtonProps={{\n          disabled:\n            is_otp_verifying ||\n            verifyDisabled ||\n            otp_error.status === \"CONTACT_ALREADY_EXISTS\",\n          className: \"iqvia-btn\"\n        }}\n        onCancel={this.handleCancel}\n        wrapClassName={\"iqvia_modals\"}\n        cancelButtonProps={{ className: \"cancel-button hidden\" }}\n        destroyOnClose={true}\n      >\n        <div\n          className={\n            \"w100 h100 flex align-items-start column justify-content-space-between\"\n          }\n        >\n          <div className={\"w100\"}>\n            <div className={\"w100\"}>\n              <div className=\"flex align-items-center justify-content-space-between\">\n                <div>\n                  <div className={\"fontsize12 subdued\"}>\n                    {formatMessage(messages.mobile)}\n                  </div>\n                  <MobileLabel\n                    countryCode={countryCode}\n                    phoneNumber={phoneNumber}\n                  />\n                </div>\n                <Button\n                  style={{ height: \"45px\" }}\n                  onClick={this.handleCancel}\n                  className={\"change_number_button iqvia-btn\"}\n                >\n                  {formatMessage(messages.chnageNumberText)}\n                </Button>\n              </div>\n            </div>\n            <div className={\"w100 pt20\"}>\n              <Input\n                placeholder={formatMessage(messages.OTPPlaceholder)}\n                className={\"p10\"}\n                onChange={e => {\n                  this.saveOtp(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n\n          <div className={\"w100\"}>\n            {\n              //check for error type and display appropriate msg and error accordingly\n            }\n            {otp_error.status !== \"CONTACT_ALREADY_EXISTS\" && (\n              <div\n                className={\n                  \"w100 flex column align-items-center justify-content-center mb60\"\n                }\n              >\n                <div className={\"fontsize12 subdued\"}>\n                  {formatMessage(messages.OTPReceivingTimeText)}\n                </div>\n                <div className={\"bold fontsize16 pt10\"}> {countdown}s</div>\n                <Button\n                  style={{ height: \"45px\" }}\n                  disabled={resendDisabled}\n                  type=\"primary\"\n                  className={\n                    resendDisabled\n                      ? \"tertiary-btn mt10 iqvia-btn\"\n                      : \"mt10 iqvia-btn\"\n                  }\n                  onClick={this.resendOTP}\n                >\n                  {formatMessage(messages.resendOTP)}\n                </Button>\n              </div>\n            )}\n\n            {is_otp_error && (\n              <div\n                className={\n                  \"w100 absolute  absolute flex row align-items-center justify-content-start\"\n                }\n                style={{\n                  backgroundColor: \"#fff8f5\",\n                  bottom: \"0\",\n                  height: \"40px\",\n                  marginLeft: \"-24px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"block\",\n                    width: \"13px\",\n                    marginLeft: \"24px\"\n                  }}\n                >\n                  <img\n                    alt=\"\"\n                    src={errorIcon}\n                    className={\"w100\"}\n                    style={{ display: \"block\" }}\n                  />\n                </div>\n                <div className={\"pl10 fontsize12 medium warning-color\"}>\n                  {otp_error.message}\n                </div>\n              </div>\n            )}\n            <div\n              className={\n                \"w100 absolute  absolute flex row align-items-center justify-content-start\" +\n                (is_otp_error ||\n                !is_otp_send ||\n                COUNTDOWN_DEFAULT - countdown > 5\n                  ? \" hidden \"\n                  : \"  \")\n              }\n              style={{\n                backgroundColor: \"rgba(227, 243, 223, 0.5)\",\n                bottom: \"0\",\n                height: \"40px\",\n                marginLeft: \"-24px\"\n              }}\n            >\n              <div\n                style={{ display: \"block\", width: \"13px\", marginLeft: \"24px\" }}\n              >\n                <img\n                  alt=\"\"\n                  src={verifiedIcon}\n                  className={\"w100\"}\n                  style={{ display: \"block\" }}\n                />\n              </div>\n              <div\n                className={\"pl10 fontsize12 medium\"}\n                style={{ color: \"#43b02a\" }}\n              >\n                {formatMessage(messages.OTPSent)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(MobileVerification);\n","import { connect } from \"react-redux\";\nimport MobileVerification from \"../../Components/page/EditProfile/common/mobileVerification\";\nimport { sendOtp, verifyOtp } from \"../../../modules/phone\";\n\nconst mapStateToProps = state => {\n  const { phone } = state;\n  return {\n    is_otp_error: phone.is_otp_error,\n    is_otp_send: phone.is_otp_send,\n    otp_error: phone.otp_error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reSendOtp: (data, id) => dispatch(sendOtp(data, id)),\n    verifyOtp: (data, id) => dispatch(verifyOtp(data, id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MobileVerification);\n","import { defineMessages } from \"react-intl\";\nconst messages = defineMessages({\n  myProfile: {\n    id: \"app.edit-profile-main.my-profile\",\n    description: \"heading\",\n    defaultMessage: \"My Profile\"\n  },\n  personal: {\n    id: \"app.edit-profile.menubar.personal\",\n    description: \"personal menu text\",\n    defaultMessage: \"Personal\"\n  },\n  contacts: {\n    id: \"app.edit-profile.menubar.contacts\",\n    description: \"contacts menu text\",\n    defaultMessage: \"Contacts\"\n  },\n  medical: {\n    id: \"app.edit-profile.menubar.medical\",\n    description: \"medical menu text\",\n    defaultMessage: \"Medical\"\n  },\n  settings: {\n    id: \"app.edit-profile.menubar.settings\",\n    description: \"settings menu text\",\n    defaultMessage: \"Settings\"\n  },\n  insurance: {\n    id: \"app.edit-profile.menubar.insurance\",\n    description: \"insurance menu text\",\n    defaultMessage: \"Insurance\"\n  },\n  insuranceProvider: {\n    id: \"app.edit-profile.insuranceSection.insuranceProvider\",\n    description: \"insurance provider input label text\",\n    defaultMessage: \"Medical Insurance Provider\"\n  },\n  insurancePolicy: {\n    id: \"app.edit-profile.insuranceSection.insurancePolicy\",\n    description: \"insurance policy input label text\",\n    defaultMessage: \"Insurance Policy\"\n  },\n  insuranceExpiresOn: {\n    id: \"app.edit-profile.insuranceSection.insuranceExpiresOn\",\n    description: \"insurance expires input label text\",\n    defaultMessage: \"Valid Till\"\n  },\n\n  hospital: {\n    id: \"app.edit-profile.contact-sections.hospital\",\n    description: \"Hospital label text\",\n    defaultMessage: \"Hospital\"\n  },\n\n  work: {\n    id: \"app.edit-profile.menubar.work\",\n    description: \"work menu text\",\n    defaultMessage: \"Work\"\n  },\n  hospitalName: {\n    id: \"app.edit-profile.work-section.hospital-name\",\n    description: \"hospital name\",\n    defaultMessage: \"Hospital Name\"\n  },\n  speciality: {\n    id: \"app.edit-profile.work-section.speciality\",\n    description: \"speciality\",\n    defaultMessage: \"Speciality\"\n  },\n  specialityRule: {\n    id: \"app.edit-profile.work-section.speciality-rule\",\n    description: \"speciality rule\",\n    defaultMessage: \"Please provide speciality\"\n  },\n  licenseNumber: {\n    id: \"app.edit-profile.work-section.license-number\",\n    description: \"license number\",\n    defaultMessage: \"License Number\"\n  },\n  bio: {\n    id: \"app.edit-profile.work-section.bio\",\n    description: \"bio\",\n    defaultMessage: \"Bio\"\n  },\n  addressLine1: {\n    id: \"app.edit-profile.work-section.address-line1\",\n    description: \"address line 1\",\n    defaultMessage: \"Flat / House / Floor / Building\"\n  },\n  addressLine2: {\n    id: \"app.edit-profile.work-section.address-line2\",\n    description: \"address line 2\",\n    defaultMessage: \"Street / Locality / Area\"\n  },\n  zipcode: {\n    id: \"app.edit-profile.work-section.zipcode\",\n    description: \"zip code\",\n    defaultMessage: \"PO box / Zipcode\"\n  },\n  cityLabel: {\n    id: \"app.edit-profile.work-section.city\",\n    description: \"city label\",\n    defaultMessage: \"Region or State\"\n  },\n  countryLabel: {\n    id: \"app.edit-profile.work-section.country\",\n    description: \"country label\",\n    defaultMessage: \"Country\"\n  },\n  organisationName: {\n    id: \"app.edit-profile.work-section.organisation-name\",\n    description: \"organization name\",\n    defaultMessage: \"Organisation Name\"\n  },\n  services: {\n    id: \"app.edit-profile.work-section.services\",\n    description: \"services\",\n    defaultMessage: \"Services\"\n  },\n  notBlank: {\n    id: \"app.edit-profile.not-blank\",\n    description: \"not be blank\",\n    defaultMessage: \"not be blank\"\n  },\n  nursingTitle: {\n    id: \"app.edit-profile.service-section.nursing-title\",\n    description: \"nursing title\",\n    defaultMessage: \"Nursing\"\n  },\n  physicalTherapyTitle: {\n    id: \"app.edit-profile.service-section.physical-therapy-title\",\n    description: \"physical therapy title\",\n    defaultMessage: \"Physical Therapy\"\n  },\n  occupationalTherapyTitle: {\n    id: \"app.edit-profile.service-section.occupational-therapy-title\",\n    description: \"occupational therapy title\",\n    defaultMessage: \"Occupational Therapy\"\n  },\n  speechAndLanguagePathologyTitle: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology-title\",\n    description: \"speech and language pathology title\",\n    defaultMessage: \"Speech and Language Pathology\"\n  },\n  medicalCounsellingTitle: {\n    id: \"app.edit-profile.service-section.medical-counselling-title\",\n    description: \"medical counselling title\",\n    defaultMessage: \"Medical Counselling\"\n  },\n  healthAideTitle: {\n    id: \"app.edit-profile.service-section.health-aide-title\",\n    description: \"health aide title\",\n    defaultMessage: \"Health Aide\"\n  },\n  nursing: {\n    id: \"app.edit-profile.service-section.nursing\",\n    description: \"nursing\",\n    defaultMessage:\n      \"Physical assessments, which include monitoring of vital signs, administer oral and intravenous medications as well as monitoring of cardiac and respiratory status\"\n  },\n  physicalTherapy: {\n    id: \"app.edit-profile.service-section.physical-therapy\",\n    description: \"physical therapy\",\n    defaultMessage: \"Assist patients to condition muscles and regain strength\"\n  },\n  occupationalTherapy: {\n    id: \"app.edit-profile.service-section.occupational-therapy\",\n    description: \"occupational therapy\",\n    defaultMessage:\n      \"Assist patients to perform functional skills such as bathing, eating, cooking, and many other skills\"\n  },\n  speechAndLanguagePathology: {\n    id: \"app.edit-profile.service-section.speech-and-language-pathology\",\n    description: \"speech and language pathology\",\n    defaultMessage:\n      \"Assist patients to regain their ability to speak, swallow, and eat after a stroke or other neurological injuries\"\n  },\n  medicalCounselling: {\n    id: \"app.edit-profile.service-section.medical-counselling\",\n    description: \"medical counselling\",\n    defaultMessage:\n      \"Assistance with medications, provision of counseling, assistance with financial matters, transportation, and in accessing educational and treatment resources\"\n  },\n  healthAide: {\n    id: \"app.edit-profile.service-section.health-aide\",\n    description: \"health aide\",\n    defaultMessage:\n      \"Assist patients with their activities of daily living while patients are limited in mobility and strength which includes tasks such as bathing, grooming, and preparing meals\"\n  },\n  cardiacCareTitle: {\n    id: \"app.edit-profile.service-section.cardiac-care-title\",\n    description: \"cardiac care title\",\n    defaultMessage: \"Cardiac Care\"\n  },\n  diabetesCareTitle: {\n    id: \"app.edit-profile.service-section.diabetes-care-title\",\n    description: \"diabetes care title\",\n    defaultMessage: \"Diabetes Care\"\n  },\n  smokingCessationTitle: {\n    id: \"app.edit-profile.service-section.smoking-cessation-title\",\n    description: \"smoking cessation title\",\n    defaultMessage: \"Smoking Cessation\"\n  },\n  respiteCareTitle: {\n    id: \"app.edit-profile.service-section.respite-care-title\",\n    description: \"respite care title\",\n    defaultMessage: \"Respite Care\"\n  },\n  homemakingTitle: {\n    id: \"app.edit-profile.service-section.homemaking-title\",\n    description: \"homemaking title\",\n    defaultMessage: \"Homemaking\"\n  },\n  cardiacCare: {\n    id: \"app.edit-profile.service-section.cardiac-care\",\n    description: \"Cardiac Care\",\n    defaultMessage:\n      \"Assist patients with cardiac disease to manage their disease and to help slow down progression of their disease, monitor the cardiac status, prompt efficient treatment that will prevent re- hospitalization\"\n  },\n  diabetesCare: {\n    id: \"app.edit-profile.service-section.diabetes-care\",\n    description: \"Diabetes Care\",\n    defaultMessage:\n      \"Assist patient with diabetes and their families in learning to manage their diabetes, educate diet, exercise, self- blood glucose monitoring, and about complications of uncontrolled diabetes\"\n  },\n  smokingCessation: {\n    id: \"app.edit-profile.service-section.smoking-cessation\",\n    description: \"Smoking Cessation\",\n    defaultMessage: \"Provide nicotine replacement therapy\"\n  },\n  respiteCare: {\n    id: \"app.edit-profile.service-section.respite-care\",\n    description: \"Respite Care\",\n    defaultMessage:\n      \"Assist patients with Adult Care, Alzheimer’s Care, Hospital Support\"\n  },\n  homemaking: {\n    id: \"app.edit-profile.service-section.homemaking\",\n    description: \"Homemaking\",\n    defaultMessage:\n      \"Provide patients with daily assistance including meal preparation, housekeeping, laundary & maintaining chores\"\n  },\n  medicalServices: {\n    id: \"app.myprofile.medical-services\",\n    description: \"medical services\",\n    defaultMessage: \"Medical Services\"\n  },\n  homeHealthCare: {\n    id: \"app.myprofile.home-health-care\",\n    description: \"home health care\",\n    defaultMessage: \"Home Health Care\"\n  },\n  specialCare: {\n    id: \"app.myprofile.special-care\",\n    description: \"special care\",\n    defaultMessage: \"Special Care\"\n  },\n  nonMedicalServices: {\n    id: \"app.myprofile.non-medical-services\",\n    description: \"non medical services\",\n    defaultMessage: \"Non-medical Services\"\n  },\n  basic: {\n    id: \"app.medical-section.basic\",\n    description: \"basic\",\n    defaultMessage: \"Basic\"\n  },\n  chiefComplaint: {\n    id: \"app.medical-section.chief-complaint\",\n    description: \"chief complaint\",\n    defaultMessage: \"Chief Complaint\"\n  },\n  allergies: {\n    id: \"app.medical-section.allergies\",\n    description: \"allergies\",\n    defaultMessage: \"Allergies\"\n  },\n  useComma: {\n    id: \"app.medical-section.use-comma\",\n    description: \"use comma tip\",\n    defaultMessage: \"Use , (comma) to add more\"\n  },\n  surgeriesFracture: {\n    id: \"app.medical-section.surgeries-fracture\",\n    description: \"surgeries fracture label\",\n    defaultMessage: \"Surgeries/Fracture\"\n  },\n  otherConditions: {\n    id: \"app.medical-section.other-conditions\",\n    description: \"other conditions label\",\n    defaultMessage: \"Other Conditions\"\n  },\n  vital: {\n    id: \"app.medical-section.vital\",\n    description: \"vital label\",\n    defaultMessage: \"Vital\"\n  },\n  vitalSubtitle: {\n    id: \"app.medical-section.vital-subtitle\",\n    description: \"vital subtitle\",\n    defaultMessage: \"Add most recent vital readings\"\n  },\n  bodyTemperature: {\n    id: \"app.medical-section.body-temperature\",\n    description: \"body temperature\",\n    defaultMessage: \"Body Temperature\"\n  },\n  respirationRate: {\n    id: \"app.medical-section.respiration-rate\",\n    description: \"respiration rate\",\n    defaultMessage: \"Respiration Rate\"\n  },\n  breathePerMinute: {\n    id: \"app.medical-section.breathe-per-minute\",\n    description: \"breathe per minute\",\n    defaultMessage: \"breathe per minute\"\n  },\n  pulseRate: {\n    id: \"app.medical-section.pulse-rate\",\n    description: \"pulse rate\",\n    defaultMessage: \"Pulse Rate\"\n  },\n  bpm: {\n    id: \"app.medical-section.bpm\",\n    description: \"bpm\",\n    defaultMessage: \"bpm\"\n  },\n  bloodPressure: {\n    id: \"app.medical-section.blood-pressure\",\n    description: \"blood pressure\",\n    defaultMessage: \"Blood Pressure\"\n  },\n  bpUnit: {\n    id: \"app.medical-section.bp-unit\",\n    description: \"blood pressure unit\",\n    defaultMessage: \"systolic/diastolic in mmHG\"\n  },\n  clinicalReadings: {\n    id: \"app.medical-section.clinical-readings\",\n    description: \"clinical readings\",\n    defaultMessage: \"Clinical Readings\"\n  },\n  clinicalReadingsSubtitle: {\n    id: \"app.medical-section.clinical-readings-subtitle\",\n    description: \"clinical readings subtitle\",\n    defaultMessage:\n      \"Choose a diagnosis method & add clinical readings respectively. You can add multiple readings\"\n  },\n  notBeBlank: {\n    id: \"app.contacts-section.not-be-blank\",\n    description: \"Cannot be blank\",\n    defaultMessage: \"Cannot be blank\"\n  },\n  caseDoctor: {\n    id: \"app.contacts-section.case-doctor\",\n    description: \"case doctor\",\n    defaultMessage: \"Case Doctor\"\n  },\n  notAssigned: {\n    id: \"app.contacts-section.not-assigned\",\n    description: \"not assigned\",\n    defaultMessage: \"Not assigned\"\n  },\n  careCoach: {\n    id: \"app.contacts-section.care-coach\",\n    description: \"care coach\",\n    defaultMessage: \"Care coach\"\n  },\n  relativeName: {\n    id: \"app.contacts-section.relative-name\",\n    description: \"relative name\",\n    defaultMessage: \"Relative Name\"\n  },\n  parent: {\n    id: \"app.contacts-section.parent\",\n    description: \"parent\",\n    defaultMessage: \"Parent\"\n  },\n  spouse: {\n    id: \"app.contacts-section.spouse\",\n    description: \"spouse\",\n    defaultMessage: \"Spouse\"\n  },\n  guardian: {\n    id: \"app.contacts-section.guardian\",\n    description: \"guardian\",\n    defaultMessage: \"Guardian\"\n  },\n  relativeMobile: {\n    id: \"app.contacts-section.relative-mobile\",\n    description: \"relative mobile\",\n    defaultMessage: \"Relative Mobile\"\n  },\n  contactRelative: {\n    id: \"app.contacts-section.contact-relative\",\n    description: \"contact relative for emergency\",\n    defaultMessage: \"Contact Relative for Emergency\"\n  },\n  emergencyContactMobile: {\n    id: \"app.contacts-section.emergency-contact-mobile\",\n    description: \"emergency contact mobile\",\n    defaultMessage: \"Emergency Contact Mobile\"\n  },\n  emergencyContactName: {\n    id: \"app.contacts-section.emergency-contact-name\",\n    description: \"emergency contact name\",\n    defaultMessage: \"Emergency Contact Name\"\n  },\n  emergencyContactRule: {\n    id: \"app.contacts-section.emergency-contact-rule\",\n    description: \"emergency contact rule\",\n    defaultMessage: \"Please provide emergency contact\"\n  },\n  phoneNumberRule: {\n    id: \"app.contacts-section.phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"Please provide phone number\"\n  },\n  careCoachphoneNumberRule: {\n    id: \"app.contacts-section.carecoach-phone-number-rule\",\n    description: \"phone number rule\",\n    defaultMessage: \"This field cannot be blank. Please provide phone number\"\n  },\n  changePassword: {\n    id: \"app.edit-profile.setting-section.chnage-password\",\n    description: \"change password\",\n    defaultMessage: \"Change Password\"\n  },\n  calendarSynced: {\n    id: \"app.edit-profile.setting-section.calendar-sync\",\n    description: \"calendar synced\",\n    defaultMessage: \"Calendar Sync\"\n  },\n  smsAlerts: {\n    id: \"app.edit-profile.setting-section.sms-alerts\",\n    description: \"sms alert\",\n    defaultMessage: \"SMS Alerts\"\n  },\n  smsWillBeSent: {\n    id: \"app.edit-profile.setting-section.sms-will-be-sent\",\n    description: \"sms will be sent\",\n    defaultMessage: \"SMS will be sent to your registered mobile contact\"\n  },\n  emailAlerts: {\n    id: \"app.edit-profile.setting-section.email-alerts\",\n    description: \"email alert\",\n    defaultMessage: \"Email Alerts\"\n  },\n  emailWillBeSent: {\n    id: \"app.edit-profile.setting-section.email-will-be-sent\",\n    description: \"email will be sent\",\n    defaultMessage: \"Email will be sent to your registered email address\"\n  },\n  pushAlerts: {\n    id: \"app.edit-profile.setting-section.push-alerts\",\n    description: \"push alert\",\n    defaultMessage: \"In-app / Push Alerts\"\n  },\n  pushWillBeSent: {\n    id: \"app.edit-profile.setting-section.push-will-be-sent\",\n    description: \"push will be sent\",\n    defaultMessage: \"These alerts are notified within the RPM web app.\"\n  },\n  reminderAlerts: {\n    id: \"app.edit-profile.setting-section.reminder-alerts\",\n    description: \"reminder alert\",\n    defaultMessage: \"Reminder Alerts\"\n  },\n  reminderWillBeSent: {\n    id: \"app.edit-profile.setting-section.reminder-will-be-sent\",\n    description: \"reminder will be sent\",\n    defaultMessage: \"All reminders will be sent via SMS/Email/Calendar\"\n  },\n  account: {\n    id: \"app.edit-profile.setting-section.account\",\n    description: \"account\",\n    defaultMessage: \"Account\"\n  },\n  notifications: {\n    id: \"app.edit-profile.setting-section.notifications\",\n    description: \"notifications\",\n    defaultMessage: \"Notifications\"\n  },\n\n  selectPhotoTitle: {\n    id: \"app.edit-profile.personal-section.select-photo-title\",\n    description: \"profile photo selection title\",\n    defaultMessage: \"Select profile photo\"\n  },\n  photoOKText: {\n    id: \"app.edit-profile.personal-section.photo-ok-text\",\n    description: \"profile photo ok text\",\n    defaultMessage: \"Set as Profile Photo\"\n  },\n  cropImage: {\n    id: \"app.edit-profile.personal-section.crop-image-text\",\n    description: \"crop image instruction text\",\n    defaultMessage:\n      \"To crop this image, drag the region below and then click “Set as Profile Photo” button\"\n  },\n  photoVisibleInfo: {\n    id: \"app.edit-profile.personal-section.photo-visible-info\",\n    description: \"photo will be visible info text\",\n    defaultMessage:\n      \"Your profile photo will be visible to everyone, across IQVIA products.\"\n  },\n  verified: {\n    id: \"app.edit-profile.personal-section.verified\",\n    description: \"verified\",\n    defaultMessage: \"Verified\"\n  },\n  notVerified: {\n    id: \"app.edit-profile.personal-section.not-verified\",\n    description: \"not verified\",\n    defaultMessage: \"Not verified\"\n  },\n  mobile: {\n    id: \"app.edit-profile.personal-section.mobile\",\n    description: \"mobile\",\n    defaultMessage: \"Mobile\"\n  },\n  nameRule: {\n    id: \"app.edit-profile.personal-section.name-rule\",\n    description: \"name rule\",\n    defaultMessage: \"please provide your Name\"\n  },\n  dobRule: {\n    id: \"app.edit-profile.personal-section.dob-rule\",\n    description: \"dob rule\",\n    defaultMessage: \"please provide your Date of Birth\"\n  },\n  genderRule: {\n    id: \"app.edit-profile.personal-section.gender-rule\",\n    description: \"gender rule\",\n    defaultMessage: \"please provide your gender\"\n  },\n  localityRule: {\n    id: \"app.edit-profile.personal-section.locality-rule\",\n    description: \"locality rule\",\n    defaultMessage: \"please fill your locality\"\n  },\n  zipcodeRule: {\n    id: \"app.edit-profile.personal-section.zipcode-rule\",\n    description: \"zipcode rule\",\n    defaultMessage: \"please fill your zip code\"\n  },\n  cityRule: {\n    id: \"app.edit-profile.personal-section.city-rule\",\n    description: \"city rule\",\n    defaultMessage: \"please provide your city\"\n  },\n  countryRule: {\n    id: \"app.edit-profile.personal-section.country-rule\",\n    description: \"country rule\",\n    defaultMessage: \"please provide your country\"\n  },\n  sendOTP: {\n    id: \"app.edit-profile.personal-section.send-otp\",\n    description: \"send otp\",\n    defaultMessage: \"Send OTP\"\n  },\n  fullName: {\n    id: \"app.edit-profile.personal-section.full-name\",\n    description: \"full name\",\n    defaultMessage: \"Full Name\"\n  },\n  dateOfBirth: {\n    id: \"app.edit-profile.personal-section.date-of-birth\",\n    description: \"date of birth\",\n    defaultMessage: \"Date of Birth\"\n  },\n  email: {\n    id: \"app.edit-profile.personal-section.email\",\n    description: \"email\",\n    defaultMessage: \"Email\"\n  },\n  male: {\n    id: \"app.edit-profile.personal-section.male\",\n    description: \"male\",\n    defaultMessage: \"Male\"\n  },\n  female: {\n    id: \"app.edit-profile.personal-section.female\",\n    description: \"female\",\n    defaultMessage: \"Female\"\n  },\n  city: {\n    id: \"app.edit-profile.personal-section.city\",\n    description: \"city\",\n    defaultMessage: \"City\"\n  },\n  country: {\n    id: \"app.edit-profile.personal-section.country\",\n    description: \"country\",\n    defaultMessage: \"Country\"\n  },\n  consentForm: {\n    id: \"app.edit-profile.settingSection.consentForm\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  idProof: {\n    id: \"app.edit-profile.settingSection.Idproof\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  },\n  uploadedOn: {\n    id: \"app.edit-profile.settingSection.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded on\"\n  },\n  newPatient: {\n    id: \"app.care-coach.add-patient.newPatient\",\n    description: \"new patient text\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.care-coach.add-doctor.newDoctor\",\n    description: \"new doctor text\",\n    defaultMessage: \"New Doctor\"\n  },\n  patientEmail: {\n    id: \"app.care-coach.add-patient.patientEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Patient's Email\"\n  },\n  doctorEmail: {\n    id: \"app.care-coach.add-patient.doctorEmail\",\n    description: \"patient email text\",\n    defaultMessage: \"Doctor's Email\"\n  },\n  incorrectEmail: {\n    id: \"app.care-coach.add-patient.incorrectEmail\",\n    description: \"That's not a valid E-mail address\",\n    defaultMessage: \"Please enter a valid email address\"\n  },\n  program: {\n    id: \"app.care-coach.add-patient.program\",\n    description: \"program menu text\",\n    defaultMessage: \"Program\"\n  },\n  programError: {\n    id: \"app.care-coach.add-patient.programError\",\n    description: \"program error text\",\n    defaultMessage: \"Please enter a Program\"\n  },\n  newPatientSuccess: {\n    id: \"app.care-coach.add-patient.newPatientSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Patient enrolled to the program and invite sent successfully\"\n  },\n  newPatientFailure: {\n    id: \"app.care-coach.add-patient.newPatientFailure\",\n    description: \"new patient not enrolled\",\n    defaultMessage: \"Unable to enroll new Patient, Please try again.\"\n  },\n  newDoctorSuccess: {\n    id: \"app.care-coach.add-patient.newDoctorSuccess\",\n    description: \"new patient successfully enrolled\",\n    defaultMessage:\n      \"New Doctor enrolled to the program and invite sent successfully\"\n  },\n  newDoctorFailure: {\n    id: \"app.care-coach.add-patient.newDoctorFailure\",\n    description: \"new doctor not enrolled\",\n    defaultMessage: \"Unable to enroll new Doctor, Please try again.\"\n  },\n  licenseId: {\n    id: \"app.care-coach.add-doctor.licenseId\",\n    description: \"license id\",\n    defaultMessage: \"License ID\"\n  },\n  hospitalError: {\n    id: \"app.care-coach.add-patient.hospitalError\",\n    description: \"hospital error text\",\n    defaultMessage: \"Please enter a Hospital\"\n  },\n  relativeNumberError: {\n    id: \"app.edit-profile.relativeNumber error\",\n    description: \"relatvie number equal to personal number error\",\n    defaultMessage: \"Relative number and Personal Number cannot be same\"\n  },\n  emergencyNumberError: {\n    id: \"app.edit-profile.emergencyNumber error\",\n    description: \"emergency number equal to personal number error\",\n    defaultMessage: \"Emergency number and Personal Number cannot be same\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport debounce from \"lodash-es/debounce\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport callingCountries from \"country-data\";\nimport { injectIntl } from \"react-intl\";\nimport {\n  Input,\n  Select,\n  Button,\n  Form,\n  Modal,\n  Icon,\n  Radio,\n  DatePicker\n} from \"antd\";\nimport { Element } from \"react-scroll\";\n\nimport verifiedIcon from \"../../../../../Assets/images/ico-verified.svg\";\nimport notVerifiedIcon from \"../../../../../Assets/images/ico-caution.svg\";\nimport placeHolder from \"../../../../../Assets/images/ico_placeholder_userdp.png\";\nimport calendar from \"../../../../../Assets/images/button-select-date.svg\";\nimport upload from \"../../../../../Assets/images/upload_icon_bg.png\";\nimport MobileVerification from \"../../../../Containers/VerifyOtp\";\nimport CountryCity from \"../../../../Containers/CountryCity\";\nimport { USER_CATEGORY } from \"../../../../../constant\";\nimport messages from \"../message\";\n\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst { PATIENT, CARE_COACH, DOCTOR } = USER_CATEGORY;\n\n//fields\nconst NAME = \"name\";\nconst DOB = \"dob\";\nconst GENDER = \"gender\";\nconst COUNTRY_CODE = \"contactNo.countryCode\";\nconst PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst ADDRESSLINE1 = \"homeAddress.addressLine1\";\nconst ADDRESSLINE2 = \"homeAddress.addressLine2\";\nconst ZIP_CODE = \"homeAddress.zipCode\";\nconst CITY = \"homeAddress.city\";\nconst COUNTRY = \"homeAddress.country\";\nconst RELATIVES_PHONE_NUMBER = \"contacts.relatives.contactNo.phoneNumber\";\nconst EMERGENCY_CONTACT_PHONE_NUMBER =\n  \"contacts.emergencyContact.contactNo.phoneNumber\";\n\nconst FIELDS = [\n  NAME,\n  DOB,\n  GENDER,\n  COUNTRY_CODE,\n  PHONE_NUMBER,\n  ADDRESSLINE1,\n  ADDRESSLINE2,\n  ZIP_CODE,\n  CITY,\n  COUNTRY\n];\nconst dataURLtoFile = (dataurl, filename) => {\n  const arr = dataurl.split(\",\");\n  const mime = arr[0].match(/:(.*?);/)[1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  while (n) {\n    u8arr[n - 1] = bstr.charCodeAt(n - 1);\n    n -= 1; // to make eslint happy\n  }\n  return new File([u8arr], filename, { type: mime });\n};\n\nfunction getParsedCountryCode() {\n  const a = [];\n  for (let countryCode in callingCountries.callingCountries.all) {\n    const cc = callingCountries.callingCountries.all[countryCode];\n\n    if (cc.countryCallingCodes.length > 0) {\n      cc.code = cc.countryCallingCodes[0];\n      a.push(cc);\n    }\n  }\n\n  return a;\n}\n\nconst ParsedCountryCodes = getParsedCountryCode();\nfunction disabledDate(current) {\n  // Can not select days after today\n  return current && current > moment().endOf(\"day\");\n}\n\nclass PersonalInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openCropPic: false,\n      showOtpModal: false,\n      loading: false,\n      suggestedCountryCodes: [],\n      showDropDown: false\n    };\n    this.showOtpModal = this.showOtpModal.bind(this);\n    this.hideOtpModal = this.hideOtpModal.bind(this);\n    this.handleOtpVerify = this.handleOtpVerify.bind(this);\n    this.croppie = null;\n    this.searchCountryCode = debounce(this.searchCountryCode, 300);\n  }\n\n  formatMessage = data => {\n    this.props.intl.formatMessage(data);\n  };\n\n  componentDidMount() {\n    this.setInitialCountryCode();\n  }\n\n  notBlank = (rule, value, callback) => {\n    if (!value || value.length === 0) {\n      callback(this.formatMessage(messages.notBlank));\n    } else {\n      callback();\n    }\n  };\n\n  uploadNewPhoto = e => {\n    if (this.originalImageRef) {\n      this.originalImageRef.click();\n    }\n  };\n\n  onOriginalFileSelect = e => {\n    if (this.originalImageRef.files.length > 0) {\n      this.setState({ openCropPic: true });\n    }\n  };\n\n  loadCroppedImage = () => {\n    if (window.Croppie && window.FileReader) {\n      if (!this.croppie) {\n        this.croppie = new window.Croppie(this.croppieContainer, {\n          viewport: {\n            width: 200,\n            height: 200,\n            type: \"circle\"\n          },\n          boundary: { width: 308, height: 322 },\n          showZoomer: true,\n          enableExif: false,\n          enforceBoundary: true\n        });\n      }\n      const croppie = this.croppie;\n\n      try {\n        const reader = new FileReader();\n        reader.onload = e => {\n          croppie.bind({ url: e.target.result });\n        };\n\n        reader.readAsDataURL(this.originalImageRef.files[0]);\n      } catch (e) {}\n    } else {\n    }\n  };\n\n  setOriginalRef = ref => {\n    this.originalImageRef = ref;\n  };\n\n  setCroppieContainer = ref => {\n    this.croppieContainer = ref;\n\n    if (ref) {\n      this.loadCroppedImage();\n    }\n  };\n\n  hideProfilePicModal = () => {\n    this.originalImageRef.value = null;\n    this.croppie = null;\n    this.setState({ openCropPic: false });\n  };\n\n  handleProfilePicSubmit = async e => {\n    const data = await this.croppie.result({\n      type: \"base64\",\n      format: \"png\"\n    });\n\n    this.uploadProfilePic(data);\n    this.hideProfilePicModal();\n  };\n\n  uploadProfilePic = b64 => {\n    const {\n      changeProfilePic,\n      userData: {\n        basicInfo: { _id }\n      }\n    } = this.props;\n    const file = dataURLtoFile(b64);\n    const data = new FormData();\n    data.append(\"profile-pic\", file, file.name);\n    // now upload\n    changeProfilePic(data, _id);\n  };\n\n  showOtpModal(e) {\n    const {\n      sendOtp,\n      userData: {\n        basicInfo: { _id }\n      },\n      form,\n      openOtpModal\n    } = this.props;\n    const { getFieldValue } = form;\n\n    e.preventDefault();\n    openOtpModal();\n    sendOtp(\n      {\n        countryCode: getFieldValue(COUNTRY_CODE),\n        phoneNumber: getFieldValue(PHONE_NUMBER)\n      },\n      _id\n    );\n  }\n\n  hideOtpModal() {\n    const { cleanOtpState, closeOtpModal } = this.props;\n    cleanOtpState();\n    closeOtpModal();\n  }\n\n  async handleOtpVerify(otp) {\n    const { verifyOtp } = this.props;\n    verifyOtp(otp);\n  }\n\n  selectedCountryCode = val => {\n    if (val.length === 0) {\n      this.setState({\n        showDropDown: false,\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        showDropDown: false,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  setInitialCountryCode = () => {\n    const { getFieldValue } = this.props.form;\n\n    const val = getFieldValue(COUNTRY_CODE) || \"\";\n\n    if (val.length === 0) {\n      this.setState({\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  searchCountryCode = val => {\n    if (val.length === 0) {\n      this.setState({\n        suggestedCountryCodes: []\n      });\n    } else {\n      this.setState({\n        showDropDown: true,\n        suggestedCountryCodes: ParsedCountryCodes.filter(a => {\n          return a.code.indexOf(val) > -1;\n        })\n      });\n    }\n  };\n\n  enableVerifyButton = () => {\n    const {\n      form: { getFieldValue, getFieldError } = {},\n      userData: { personalInfo: { contactNo = {} } = {} } = {}\n    } = this.props;\n\n    const {\n      countryCode = \"+91\",\n      phoneNumber = \"\",\n      verified = false\n    } = contactNo;\n    const countryCodeField = getFieldValue(COUNTRY_CODE) || \"\";\n    const phoneNumberField = getFieldValue(PHONE_NUMBER) || \"\";\n\n    if (\n      verified\n        ? (countryCodeField !== countryCode ||\n            phoneNumberField !== phoneNumber) &&\n          !getFieldError(PHONE_NUMBER)\n        : phoneNumberField.length > 0 &&\n          countryCodeField.length > 0 &&\n          !getFieldError(PHONE_NUMBER)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  setCalendarRef = ref => {\n    this.calendarRef = ref;\n  };\n\n  openCalendar = e => {\n    e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[0]\n      .click();\n  };\n\n  isNumber = (rule, value, callback) => {\n    const { validateFields } = this.props.form;\n    const { basicInfo = {} } = this.props.userData || {};\n\n    const { category } = basicInfo;\n\n    if (value && value.length > 0 && value.match(\"^[0-9]+$\") === null) {\n      callback(\"Enter valid phone number\");\n    } else {\n      if (category === PATIENT) {\n        validateFields([\n          RELATIVES_PHONE_NUMBER,\n          EMERGENCY_CONTACT_PHONE_NUMBER\n        ]);\n      }\n      callback();\n    }\n  };\n  notBlank = (rule, value, callback) => {\n    const { validateFields } = this.props.form;\n    const { basicInfo = {} } = this.props.userData || {};\n\n    const { category } = basicInfo;\n    if (!value || value.length === 0) {\n      callback(this.props.intl.formatMessage(messages.notBeBlank));\n    } else {\n      if (category === PATIENT) {\n        validateFields([\n          RELATIVES_PHONE_NUMBER,\n          EMERGENCY_CONTACT_PHONE_NUMBER\n        ]);\n      }\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const { show_otp_modal } = this.props;\n    const { basicInfo = {}, personalInfo = {} } = this.props.userData;\n\n    const { profilePicLink = placeHolder, _id, name, category } = basicInfo;\n    const {\n      contactNo = {},\n      email,\n      homeAddress = {},\n      dob: dateOfBirth,\n      gender\n    } = personalInfo;\n    const { addressLine1, addressLine2, city, country, zipCode } = homeAddress;\n\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched,\n      getFieldValue\n    } = this.props.form;\n\n    const { suggestedCountryCodes, showDropDown } = this.state;\n\n    const fieldError = {};\n    const { customFieldsError = {} } = this.props;\n\n    FIELDS.forEach(field => {\n      if (customFieldsError) {\n        if (!isFieldTouched(field) && customFieldsError[field]) {\n          fieldError[field] = getFieldError(field);\n        } else {\n          fieldError[field] = isFieldTouched(field) && getFieldError(field);\n        }\n      } else {\n        fieldError[field] = isFieldTouched(field) && getFieldError(field);\n      }\n    });\n\n    const { countryCode, phoneNumber = \"\" } = contactNo;\n    let dob;\n    if (dateOfBirth !== undefined && dateOfBirth != null)\n      dob = moment(dateOfBirth);\n    if (!dob || !dob._isValid) {\n      dob = null;\n    }\n\n    const phoneNoRule =\n      category === CARE_COACH || category === PATIENT\n        ? [\n            {\n              required: true,\n              message:\n                category === PATIENT\n                  ? formatMessage(messages.phoneNumberRule)\n                  : formatMessage(messages.careCoachphoneNumberRule)\n            },\n            {\n              validator: this.isNumber\n            }\n          ]\n        : [\n            {\n              validator: this.isNumber\n            }\n          ];\n\n    const addressLine2Rule =\n      category === CARE_COACH || category === PATIENT\n        ? [\n            {\n              required: true,\n              message: formatMessage(messages.localityRule)\n            }\n          ]\n        : [];\n    const zipCodeRule =\n      category === CARE_COACH || category === PATIENT\n        ? [\n            {\n              required: true,\n              message: formatMessage(messages.zipcodeRule)\n            }\n          ]\n        : [];\n    const mobileNumberRequiredClass =\n      category === DOCTOR ? \"\" : \"ant-form-item-required\";\n\n    return (\n      <div>\n        <Modal\n          title={formatMessage(messages.selectPhotoTitle)}\n          visible={this.state.openCropPic}\n          onOk={this.handleProfilePicSubmit}\n          onCancel={this.hideProfilePicModal}\n          okButtonProps={{ className: \"bold set_profile_pic_button\" }}\n          okText={formatMessage(messages.photoOKText)}\n          wrapClassName={\"upload_profile_picture\"}\n          cancelButtonProps={{ className: \"cancel-button hidden\" }}\n          destroyOnClose={true}\n          width={800}\n        >\n          <h6 className={\"subdued fontsize12\"}>\n            {formatMessage(messages.cropImage)}\n          </h6>\n          <div className={\"main_content_holder\"}>\n            <div ref={this.setCroppieContainer} />\n            <div\n              className={\n                \"profile_pic_disclaimer mt40 flex align-items-center justify-content-center\"\n              }\n            >\n              <Icon\n                type=\"eye\"\n                className={\"subdued\"}\n                style={{ fontSize: \"20px\" }}\n              />\n              <h6 className={\"subdued pl10 mb0\"}>\n                {formatMessage(messages.photoVisibleInfo)}\n              </h6>\n            </div>\n          </div>\n        </Modal>\n        {show_otp_modal && (\n          <MobileVerification\n            handleCancel={this.hideOtpModal}\n            visible={show_otp_modal}\n            id={_id}\n            contactNo={{\n              countryCode: getFieldValue(COUNTRY_CODE),\n              phoneNumber: getFieldValue(PHONE_NUMBER)\n            }}\n          />\n        )}\n\n        <Element name=\"personal\">\n          <div className=\"bold pb10 fontsize18\">\n            {formatMessage(messages.personal)}\n          </div>\n\n          <div\n            className=\"flex align-items-center justify-content-center relative\"\n            style={{ margin: \"20px 0\" }}\n          >\n            <div\n              className={\"block br50 relative\"}\n              style={{ width: \"100px\", height: \"100px\" }}\n            >\n              <img alt=\"\" src={profilePicLink} className={\"block w100\"} />\n              <div\n                className={\"absolute\"}\n                style={{ bottom: 0, right: 0, width: \"30px\", height: \"30px\" }}\n                onClick={this.uploadNewPhoto}\n              >\n                <img alt=\"\" src={upload} className={\"block w100\"} />\n                <input\n                  ref={this.setOriginalRef}\n                  onChange={this.onOriginalFileSelect}\n                  className={\"hidden originalImageFileType\"}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  name=\"original\"\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            <label className=\"flex\">\n              <div className=\"mr-10 label-color fontsize12\">\n                {formatMessage(messages.email)}\n              </div>\n              <img\n                alt=\"\"\n                style={{ width: \"13px\", marginRight: \"5px\" }}\n                src={verifiedIcon}\n              />\n              <div className={\"fontsize12\"} style={{ color: \"#43b02a\" }}>\n                {formatMessage(messages.verified)}\n              </div>\n            </label>\n            <div className={\"fontsize16 dark pt4\"}>{email}</div>\n          </div>\n\n          <div className={\"mt20\"}>\n            <label\n              className={`flex row align-items-center justify-content-start ${mobileNumberRequiredClass} mb5`}\n            >\n              <div className=\"mr-10 fontsize12 label-color\">\n                {formatMessage(messages.mobile)}\n              </div>\n              <img\n                alt=\"\"\n                style={{ width: \"13px\", marginRight: \"5px\" }}\n                src={\n                  contactNo.verified === true ? verifiedIcon : notVerifiedIcon\n                }\n              />\n              {contactNo.verified === true ? (\n                <div className={\"fontsize12\"} style={{ color: \"#43b02a\" }}>\n                  {formatMessage(messages.verified)}\n                </div>\n              ) : (\n                <div className={\"fontsize12\"} style={{ color: \"#fe8a12\" }}>\n                  {formatMessage(messages.notVerified)}\n                </div>\n              )}\n            </label>\n\n            <div className=\"flex content-space-between align-items-start\">\n              <div className=\"flex flex-1 pr10\">\n                <FormItem\n                  help={\"\"}\n                  validateStatus={fieldError[COUNTRY_CODE] ? \"error\" : \"\"}\n                  style={{ width: \"90px\", margin: \"0 10px 0 0\" }}\n                >\n                  {getFieldDecorator(COUNTRY_CODE, {\n                    validateTrigger: [\"onChange\", \"onBlur\"],\n                    initialValue: countryCode,\n                    type: \"string\",\n                    rules: [\n                      {\n                        required: category === DOCTOR ? false : true,\n                        message: formatMessage(messages.phoneNumberRule)\n                      },\n                      { validator: category === DOCTOR ? \"\" : this.notBlank }\n                    ]\n                  })(\n                    <Select\n                      className=\"country_code_value_placeholder\"\n                      showSearch\n                      placeholder={\n                        <div\n                          className={\n                            \"country_code_value flex row align-items-center justify-content-start w100\"\n                          }\n                        >\n                          <ReactCountryFlag code={\"IN\"} svg />\n                          <div className={\"pl5\"}>+91</div>\n                        </div>\n                      }\n                      notFoundContent={null}\n                      filterOption={false}\n                      onSearch={this.searchCountryCode}\n                      style={{ width: \"100%\" }}\n                      onSelect={this.selectedCountryCode}\n                      showArrow={false}\n                      dropdownStyle={{ width: \"200px\" }}\n                      dropdownClassName={\n                        \"select_country_code_dropdown\" +\n                        (showDropDown ? \"  \" : \" hide_drop_down\")\n                      }\n                      optionLabelProp={\"children\"}\n                    >\n                      {suggestedCountryCodes.map(d => {\n                        return (\n                          <Option\n                            value={d.code}\n                            key={d.alpha2 + d.code}\n                            title={d.code}\n                          >\n                            <div\n                              className={\n                                \"flex row align-items-start justify-content-center\"\n                              }\n                            >\n                              <div\n                                className={\n                                  \"country_code_select flex row align-items-center justify-content-start w100\"\n                                }\n                              >\n                                <ReactCountryFlag code={d.alpha2} svg />\n                                <div className={\"pl5\"}>\n                                  {\" \"}\n                                  {d.code} {d.name}\n                                </div>\n                              </div>\n                              <div\n                                className={\n                                  \"country_code_value flex row align-items-center justify-content-start w100\"\n                                }\n                              >\n                                <ReactCountryFlag code={d.alpha2} svg />\n                                <div className={\"pl5\"}>{d.code}</div>\n                              </div>\n                            </div>\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </FormItem>\n                <FormItem\n                  className={\"flex-1\"}\n                  style={{ marginBottom: \"0\" }}\n                  validateStatus={fieldError[PHONE_NUMBER] ? \"error\" : \"\"}\n                  help={fieldError[PHONE_NUMBER] || \"\"}\n                >\n                  {getFieldDecorator(PHONE_NUMBER, {\n                    rules: phoneNoRule,\n                    initialValue: phoneNumber\n                  })(\n                    <Input\n                      placeholder=\"\"\n                      className={\"phone_number_main mb0 pb0\"}\n                    />\n                  )}\n                </FormItem>\n              </div>\n              <Button\n                disabled={this.enableVerifyButton()}\n                className={\"send_otp_button\"}\n                onClick={this.showOtpModal}\n              >\n                {formatMessage(messages.sendOTP)}\n              </Button>\n            </div>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.fullName)}\n              validateStatus={fieldError[NAME] ? \"error\" : \"\"}\n              help={fieldError[NAME] || \"\"}\n            >\n              {getFieldDecorator(NAME, {\n                rules: [\n                  {\n                    required: true,\n                    message: formatMessage(messages.nameRule)\n                  }\n                ],\n\n                initialValue: name\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          {category === PATIENT && (\n            <div>\n              <div className=\"mt20 flex row align-items-center iqvia-date-picker\">\n                <div className=\"full-width \">\n                  <FormItem\n                    label={formatMessage(messages.dateOfBirth)}\n                    validateStatus={fieldError[DOB] ? \"error\" : \"\"}\n                    help={fieldError[DOB] || \"\"}\n                  >\n                    {getFieldDecorator(DOB, {\n                      rules: [\n                        {\n                          required: true,\n                          message: formatMessage(messages.dobRule)\n                        }\n                      ],\n                      initialValue: dob,\n                      onChange: () => {\n                        this.setState({ open: false });\n                      }\n                    })(\n                      <DatePicker\n                        showToday={false}\n                        disabledDate={disabledDate}\n                        className=\"full-width\"\n                      />\n                    )}\n\n                    <img\n                      alt=\"\"\n                      className=\"calendar\"\n                      onClick={this.openCalendar}\n                      src={calendar}\n                    />\n                  </FormItem>\n                </div>\n              </div>\n\n              <div className=\"\">\n                <div className=\"fontsize12 label-color ant-form-item-required\">\n                  Gender\n                </div>\n\n                <div>\n                  <FormItem\n                    validateStatus={fieldError[GENDER] ? \"error\" : \"\"}\n                    help={fieldError[GENDER] || \"\"}\n                  >\n                    {getFieldDecorator(GENDER, {\n                      rules: [\n                        {\n                          required: true,\n                          message: formatMessage(messages.genderRule)\n                        }\n                      ],\n                      initialValue: gender\n                    })(\n                      <RadioGroup className=\"full-width male_female_radio_group\">\n                        <Radio.Button\n                          className=\"full-width check-box-right flex fontsize16 \"\n                          value={\"M\"}\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            paddingTop: \"8px\"\n                          }}\n                        >\n                          {formatMessage(messages.male)}\n                        </Radio.Button>\n                        <Radio.Button\n                          className=\"full-width check-box-right flex fontsize16 pt8\"\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            paddingTop: \"8px\"\n                          }}\n                          value={\"F\"}\n                        >\n                          {formatMessage(messages.female)}\n                        </Radio.Button>\n                      </RadioGroup>\n                    )}\n                  </FormItem>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine1)}\n              validateStatus={fieldError[ADDRESSLINE1] ? \"error\" : \"\"}\n              help={fieldError[ADDRESSLINE1] || \"\"}\n            >\n              {getFieldDecorator(ADDRESSLINE1, {\n                rules: [],\n                initialValue: addressLine1\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine2)}\n              validateStatus={fieldError[ADDRESSLINE2] ? \"error\" : \"\"}\n              help={fieldError[ADDRESSLINE2] || \"\"}\n            >\n              {getFieldDecorator(ADDRESSLINE2, {\n                rules: addressLine2Rule,\n                initialValue: addressLine2\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.zipcode)}\n              validateStatus={fieldError[ZIP_CODE] ? \"error\" : \"\"}\n              help={fieldError[ZIP_CODE] || \"\"}\n            >\n              {getFieldDecorator(ZIP_CODE, {\n                rules: zipCodeRule,\n                initialValue: zipCode\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <CountryCity\n            form={this.props.form}\n            getFieldDecorator={getFieldDecorator}\n            cityLabel={formatMessage(messages.city)}\n            countryLabel={formatMessage(messages.country)}\n            city={city}\n            country={country}\n            cityField={CITY}\n            countryField={COUNTRY}\n            fieldError={fieldError}\n            cityRules={[\n              { required: true, message: formatMessage(messages.cityRule) },\n              { validator: this.notBlank }\n            ]}\n            countryRules={[\n              { required: true, message: formatMessage(messages.countryRule) },\n              { validator: this.notBlank }\n            ]}\n          />\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(PersonalInfo);\n","import React, { Component } from \"react\";\nimport { Input, Select, Form } from \"antd\";\nimport { Element } from \"react-scroll\";\n\nimport dropdown from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport CountryCity from \"../../../../Containers/CountryCity\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nconst dropdownIcon = <img alt=\"\" src={dropdown} />;\n\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\n\n//fields\nconst ORGANISATION_NAME = \"work.organizationName\";\nconst SPECIALITY = \"work.speciality\";\nconst BIO = \"work.about\";\nconst LICENSE_NUMBER = \"work.licenseNumber\";\nconst ADDRESSLINE1 = \"work.officeAddress.addressLine1\";\nconst ADRESSLINE2 = \"work.officeAddress.addressLine2\";\nconst ZIP_CODE = \"work.officeAddress.zipCode\";\nconst WORK_CITY = \"work.officeAddress.city\";\nconst WORK_COUNTRY = \"work.officeAddress.country\";\nconst HOSPITALS = \"hospitals\";\n\nconst FIELDS = [\n  ORGANISATION_NAME,\n  HOSPITALS,\n  SPECIALITY,\n  BIO,\n  LICENSE_NUMBER,\n  ADDRESSLINE1,\n  ADRESSLINE2,\n  ZIP_CODE,\n  WORK_CITY,\n  WORK_COUNTRY\n];\n\nclass WorkSection extends Component {\n  componentDidMount() {\n    const {\n      userData: {\n        work: { officeAddress: { city: cityId, country: countryId } = {} } = {}\n      } = {}\n    } = this.props;\n    if (cityId !== undefined && countryId !== undefined) {\n      this.props.getHospital(countryId, cityId);\n    }\n  }\n\n  onChangeCity = (countryId, cityId) => {\n    const { setFieldsValue, validateFields } = this.props.form;\n    setFieldsValue({ [HOSPITALS]: [] });\n    validateFields();\n    this.props.getHospital(countryId, cityId);\n  };\n\n  onChangeCountry = countryId => {\n    const { setFieldsValue, validateFields } = this.props.form;\n    setFieldsValue({ [HOSPITALS]: [] });\n    validateFields();\n  };\n\n  getHospitalsData = () => {\n    const {\n      form: { getFieldValue },\n      hospitals: hospitalsData\n    } = this.props;\n    let options = [];\n    for (const key in hospitalsData) {\n      const hospital = hospitalsData[key];\n      const countryId = getFieldValue(WORK_COUNTRY);\n      const cityId = getFieldValue(WORK_CITY);\n      if (hospital.cityId === cityId && hospital.countryId === countryId) {\n        options.push(\n          <Option key={`${hospital.id}`} value={hospital.id}>\n            {hospital.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  getVisitingHospitals = () => {\n    let options = [];\n    const {\n      userData: { visitingHospitals = {} }\n    } = this.props;\n    for (const key in visitingHospitals) {\n      const id = visitingHospitals[key];\n      options.push(id);\n    }\n    return options;\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const { work = {} } = this.props.userData;\n    const { speciality, officeAddress = {}, licenseNumber, about } = work;\n\n    const {\n      addressLine1,\n      addressLine2,\n      city,\n      country,\n      zipCode\n    } = officeAddress;\n\n    const specialities = [\n      <Option key={1} value=\"Neurologist\">\n        Neurologist\n      </Option>,\n      <Option key={2} value=\"Heart Surgeon\">\n        Heart Surgeon\n      </Option>,\n      <Option key={3} value=\"Orthopaedic\">\n        Orthopaedic\n      </Option>\n    ];\n\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const fieldError = {};\n    const { customFieldsError } = this.props;\n    FIELDS.forEach(field => {\n      if (customFieldsError) {\n        if (!isFieldTouched(field) && customFieldsError[field]) {\n          fieldError[field] = getFieldError(field);\n        } else {\n          fieldError[field] = isFieldTouched(field) && getFieldError(field);\n        }\n      } else {\n        fieldError[field] = isFieldTouched(field) && getFieldError(field);\n      }\n    });\n\n    return (\n      <div id=\"work\">\n        <Element name=\"work\">\n          <div className=\"bold mt40 pb16 fontsize18\">\n            {formatMessage(messages.work)}\n          </div>\n          <div>\n            <FormItem\n              label={formatMessage(messages.speciality)}\n              validateStatus={fieldError[SPECIALITY] ? \"error\" : \"\"}\n              help={fieldError[SPECIALITY] || \"\"}\n            >\n              {getFieldDecorator(SPECIALITY, {\n                rules: [\n                  {\n                    required: true,\n                    message: formatMessage(messages.specialityRule)\n                  }\n                ],\n                initialValue: speciality\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={dropdownIcon}\n                  placeholder=\"\"\n                >\n                  {specialities}\n                </Select>\n              )}\n            </FormItem>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.licenseNumber)}\n              validateStatus={fieldError[LICENSE_NUMBER] ? \"error\" : \"\"}\n              help={fieldError[LICENSE_NUMBER] || \"\"}\n            >\n              {getFieldDecorator(LICENSE_NUMBER, {\n                initialValue: licenseNumber\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.bio)}\n              validateStatus={fieldError[BIO] ? \"error\" : \"\"}\n              help={fieldError[BIO] || \"\"}\n            >\n              {getFieldDecorator(BIO, {\n                initialValue: about\n              })(<TextArea placeholder=\"\" autosize />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine1)}\n              validateStatus={fieldError[ADDRESSLINE1] ? \"error\" : \"\"}\n              help={fieldError[ADDRESSLINE1] || \"\"}\n            >\n              {getFieldDecorator(ADDRESSLINE1, {\n                initialValue: addressLine1\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine2)}\n              validateStatus={fieldError[ADRESSLINE2] ? \"error\" : \"\"}\n              help={fieldError[ADRESSLINE2] || \"\"}\n            >\n              {getFieldDecorator(ADRESSLINE2, {\n                initialValue: addressLine2\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.zipcode)}\n              validateStatus={fieldError[ZIP_CODE] ? \"error\" : \"\"}\n              help={fieldError[ZIP_CODE] || \"\"}\n            >\n              {getFieldDecorator(ZIP_CODE, {\n                initialValue: zipCode\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <CountryCity\n            form={this.props.form}\n            getFieldDecorator={getFieldDecorator}\n            cityLabel={formatMessage(messages.cityLabel)}\n            countryLabel={formatMessage(messages.countryLabel)}\n            city={city}\n            country={country}\n            cityField={WORK_CITY}\n            countryField={WORK_COUNTRY}\n            cityRules={[\n              {\n                required: true,\n                message: formatMessage(messages.cityRule)\n              }\n            ]}\n            countryRules={[\n              {\n                required: true,\n                message: formatMessage(messages.countryRule)\n              }\n            ]}\n            onChangeCity={this.onChangeCity}\n            onChangeCountry={this.onChangeCountry}\n          />\n          <div>\n            <FormItem\n              label={formatMessage(messages.hospitalName)}\n              validateStatus={fieldError[HOSPITALS] ? \"error\" : \"\"}\n              help={fieldError[HOSPITALS] || \"\"}\n            >\n              {getFieldDecorator(HOSPITALS, {\n                initialValue: this.getVisitingHospitals(),\n                rules: [\n                  {\n                    required: true,\n                    message: formatMessage(messages.hospitalError)\n                  }\n                ]\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  showSearch\n                  autoComplete=\"off\"\n                  mode=\"multiple\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {this.getHospitalsData()}\n                </Select>\n              )}\n            </FormItem>\n          </div>\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(WorkSection);\n","import React, { Component } from \"react\";\nimport { List, Icon, Checkbox, Form } from \"antd\";\nimport { Element } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport messages from \"../message\";\n\nimport { path, USER_CATEGORY } from \"../../../../../constant\";\nimport config from \"../../../../../config\";\n\nconst FormItem = Form.Item;\n\nconst SYNCED_CALENDAR = \"settings.isCalendarSynced\";\nconst SMS_ALERTS = \"settings.preferences.smsAlerts\";\nconst EMAIL_ALERTS = \"settings.preferences.emailAlerts\";\nconst PUSH_ALERTS = \"settings.preferences.pushAlerts\";\nconst REMINDERS_ALERTS = \"settings.preferences.reminderAlerts\";\nconst CONTENTFORM = \"ContentForm\";\nconst IDPROOF = \"IdProof\";\n\nclass SettingSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // openChangePassword = e => {\n  //   e.preventDefault();\n  //   this.props.gotoChangePassword();\n  // };\n\n  handleOpenChangePasswordModal = () => {\n    const {\n      openChangePassword,\n      user_data: {\n        basicInfo: { _id }\n      }\n    } = this.props;\n\n    openChangePassword(_id);\n  };\n\n  openConsentForm = purpose => {\n    // e.preventDefault();\n\n    // this.props.history.push(path.CONSENT_FORM);\n    const {\n      openDocumentsVerification,\n      user_data: {\n        basicInfo: { _id }\n      }\n    } = this.props;\n\n    openDocumentsVerification(_id, purpose);\n  };\n\n  openIdProof = e => {\n    e.preventDefault();\n    this.props.history.push(path.ID_PROOF);\n  };\n\n  render() {\n    const {\n      intl: { formatMessage },\n      userData: { documents = {}, basicInfo: { category } = {} }\n    } = this.props;\n    const {\n      isCalendarSynced = false,\n      preferences = {}\n    } = this.props.userData.settings;\n    const {\n      emailAlerts = false,\n      pushAlerts = false,\n      smsAlerts = false,\n      reminderAlerts = false\n    } = preferences;\n\n    const { idProof = [], consentForm = [] } = documents;\n    let idProofUploadDate;\n    let consentFormUploadDate;\n\n    const { uploadedOn: idProofUploadedOn } = idProof[0] || {};\n    const { uploadedOn: consentFormUploadedOn } = consentForm[0] || {};\n\n    if (idProofUploadedOn)\n      idProofUploadDate = new moment(idProofUploadedOn).format(\n        \"DD/MM/YYYY hh:mm A\"\n      );\n    if (consentFormUploadedOn)\n      consentFormUploadDate = new moment(consentFormUploadedOn).format(\n        \"DD/MM/YYYY hh:mm A\"\n      );\n\n    const { getFieldDecorator } = this.props.form;\n    let accountsContent = [];\n    accountsContent.push(\n      <div\n        key=\"1\"\n        className=\"content-space-between full-width flex align-items-center clickable\"\n        onClick={this.handleOpenChangePasswordModal}\n      >\n        <div>{formatMessage(messages.changePassword)}</div>\n        <Icon type=\"caret-right\" />\n      </div>\n    );\n    if (config.CALENDAR_SYNC === true) {\n      accountsContent.push(\n        <div\n          key=\"2\"\n          className=\"content-space-between full-width flex align-items-center settings\"\n        >\n          <FormItem className={\"mb0\"}>\n            {getFieldDecorator(SYNCED_CALENDAR, {\n              valuePropName: \"checked\",\n              initialValue: isCalendarSynced || false\n            })(\n              <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                <div className=\"fontsize14 dark\">\n                  {formatMessage(messages.calendarSynced)}\n                </div>\n              </Checkbox>\n            )}\n          </FormItem>\n        </div>\n      );\n    }\n    if (category === USER_CATEGORY.PATIENT) {\n      accountsContent.push(\n        <div\n          key=\"3\"\n          onClick={e => this.openConsentForm(CONTENTFORM)}\n          className=\"content-space-between full-width flex align-items-center\"\n        >\n          <div className=\"full-width\">\n            <div>{formatMessage(messages.consentForm)}</div>\n            <div className=\"fontsize12 cool-grey\">{`${formatMessage(\n              messages.uploadedOn\n            )} ${consentFormUploadDate} `}</div>\n          </div>\n          <Icon type=\"caret-right\" />\n        </div>\n      );\n\n      accountsContent.push(\n        <div\n          key=\"4\"\n          onClick={e => this.openConsentForm(IDPROOF)}\n          className=\"content-space-between full-width flex align-items-center\"\n        >\n          <div className=\"full-width\">\n            <div>{formatMessage(messages.idProof)}</div>\n            <div className=\"fontsize12 cool-grey\">{`${formatMessage(\n              messages.uploadedOn\n            )} ${idProofUploadDate} `}</div>\n          </div>\n          <Icon type=\"caret-right\" />\n        </div>\n      );\n    }\n\n    let notificationsContent = [];\n\n    notificationsContent.push(\n      <div key={1} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <FormItem className={\"mb0\"}>\n            {getFieldDecorator(SMS_ALERTS, {\n              valuePropName: \"checked\",\n              initialValue: smsAlerts || false\n            })(\n              <Checkbox className={\" calendar_sync_line settings-checkbox\"}>\n                <div>\n                  <div className=\"fontsize14 dark\">\n                    {formatMessage(messages.smsAlerts)}\n                  </div>\n                  <div className=\"subdued fontsize12\">\n                    {formatMessage(messages.smsWillBeSent)}\n                  </div>\n                </div>\n              </Checkbox>\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n    notificationsContent.push(\n      <div key={2} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <FormItem className={\"mb0\"}>\n            {getFieldDecorator(EMAIL_ALERTS, {\n              valuePropName: \"checked\",\n              initialValue: emailAlerts || false\n            })(\n              <Checkbox className={\" calendar_sync_line settings-checkbox\"}>\n                <div>\n                  <div className=\"fontsize14 dark\">\n                    {formatMessage(messages.emailAlerts)}\n                  </div>\n                  <div className=\"subdued fontsize12\">\n                    {formatMessage(messages.emailWillBeSent)}\n                  </div>\n                </div>\n              </Checkbox>\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n    notificationsContent.push(\n      <div key={3} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <FormItem className={\"mb0\"}>\n            {getFieldDecorator(PUSH_ALERTS, {\n              valuePropName: \"checked\",\n              initialValue: pushAlerts || false\n            })(\n              <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                <div>\n                  <div className=\"fontsize14 dark\">\n                    {formatMessage(messages.pushAlerts)}\n                  </div>\n                  <div className=\"fontsize12 subdued\">\n                    {formatMessage(messages.pushWillBeSent)}\n                  </div>\n                </div>\n              </Checkbox>\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n\n    notificationsContent.push(\n      <div key={4} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <FormItem className={\"mb0\"}>\n            {getFieldDecorator(REMINDERS_ALERTS, {\n              valuePropName: \"checked\",\n              initialValue: reminderAlerts || false\n            })(\n              <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                <div>\n                  <div className=\"fontsize14 dark\">\n                    {formatMessage(messages.reminderAlerts)}\n                  </div>\n                  <div className=\"subdued fontsize12\">\n                    {formatMessage(messages.reminderWillBeSent)}\n                  </div>\n                </div>\n              </Checkbox>\n            )}\n          </FormItem>\n        </div>\n      </div>\n    );\n\n    return (\n      <div id=\"setting\" className=\"mb180\">\n        <Element name=\"settings\">\n          <div className=\"bold mt40 pb16 fontsize18\">\n            {formatMessage(messages.settings)}\n          </div>\n          {this.props.showPassword && (\n            <div>\n              <div className={\"fontsize16 dark medium pt24 mb5\"}>\n                {formatMessage(messages.account)}\n              </div>\n              <List\n                span={24}\n                bordered\n                dataSource={accountsContent}\n                renderItem={item => <List.Item>{item}</List.Item>}\n              />\n            </div>\n          )}\n          <div className=\"mt20\">\n            <div className={\"fontsize16 dark medium mb5\"}>\n              {formatMessage(messages.notifications)}\n            </div>\n            <List\n              span={24}\n              bordered\n              dataSource={notificationsContent}\n              renderItem={item => <List.Item>{item}</List.Item>}\n            />\n          </div>\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SettingSection);\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { scroller, Link } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"personal\"\n    };\n  }\n\n  scrollToElement = name => {\n    scroller.scrollTo(name, {\n      duration: 1000,\n      delay: 0,\n      smooth: true,\n      offset: -180\n    });\n  };\n\n  setActive = val => {\n    this.setState({ active: val });\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const menu = [\n      { key: formatMessage(messages.personal), value: \"personal\" },\n      { key: formatMessage(messages.work), value: \"work\" },\n      { key: formatMessage(messages.settings), value: \"setting\" }\n    ];\n\n    let menuElement = [];\n    menu.forEach((item, index) => {\n      menuElement.push(\n        <Menu.Item key={item.value}>\n          <Link\n            activeClass={\"active\"}\n            to={item.value}\n            spy={true}\n            isDynamic={false}\n            offset={-180}\n            delay={0}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.scrollToElement(item.value);\n            }}\n            onSetActive={() => {\n              this.setActive(item.value);\n            }}\n          >\n            <div\n              onClick={e => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.scrollToElement(item.value);\n              }}\n            >\n              {item.key}\n            </div>\n          </Link>\n        </Menu.Item>\n      );\n    });\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        className={\"flex align-items-start justify-content-space-between\"}\n        selectedKeys={[this.state.active]}\n      >\n        {menuElement}\n      </Menu>\n    );\n  }\n}\n\nexport default injectIntl(MenuBar);\n","import PersonalSection from \"../common/personalSection\";\nimport WorkSection from \"./workSection\";\nimport SettingSection from \"../common/settingSection\";\nimport Menubar from \"./menuBar\";\n\nexport default {\n  PersonalSection,\n  WorkSection,\n  SettingSection,\n  Menubar\n};\n","import React from \"react\";\nimport { Form, Select } from \"antd\";\n\nconst FormItem = Form.Item;\nexport default ({\n  className,\n  initialValue,\n  getFieldDecorator,\n  fieldName,\n  onChange\n}) => {\n  return (\n    <FormItem>\n      {getFieldDecorator(fieldName, {\n        initialValue: initialValue !== \"\" ? initialValue : null\n      })(\n        <Select\n          className={`iqvia-tag ${className}`}\n          dropdownStyle={{ display: \"none\" }}\n          mode=\"tags\"\n          style={{ width: \"100%\" }}\n          tokenSeparators={[\",\"]}\n          onChange={onChange}\n        />\n      )}\n    </FormItem>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Input, Select, Form } from \"antd\";\nimport { Element } from \"react-scroll\";\nimport TagInput from \"../../../Common/tag\";\n\nimport dropdown from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport CountryCity from \"../../../../Containers/CountryCity\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nconst dropdownIcon = <img alt=\"\" src={dropdown} />;\n\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\n\n//fields\nconst ORGANISATION_NAME = \"work.organizationName\";\nconst SPECIALITY = \"work.speciality\";\nconst SERVICES = \"work.services\";\nconst BIO = \"work.about\";\nconst LICENSE_NUMBER = \"work.licenseNumber\";\nconst ADDRESSLINE1 = \"work.officeAddress.addressLine1\";\nconst ADRESSLINE2 = \"work.officeAddress.addressLine2\";\nconst ZIP_CODE = \"work.officeAddress.zipCode\";\nconst CITY = \"work.officeAddress.city\";\nconst COUNTRY = \"work.officeAddress.country\";\n\nconst FIELDS = [\n  ORGANISATION_NAME,\n  SPECIALITY,\n  BIO,\n  LICENSE_NUMBER,\n  ADDRESSLINE1,\n  ADRESSLINE2,\n  ZIP_CODE,\n  CITY,\n  COUNTRY\n];\n\nclass WorkSection extends Component {\n  formatMessage = data => {\n    this.props.intl.formatMessage(data);\n  };\n\n  notBlank = (rule, value, callback) => {\n    if (!value || value.length === 0) {\n      callback(this.formatMessage(messages.notBlank));\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const { work = {} } = this.props.userData;\n    const {\n      organizationName,\n      speciality,\n      officeAddress = {},\n      licenseNumber,\n      services: servicesValue,\n      about\n    } = work;\n\n    const {\n      addressLine1,\n      addressLine2,\n      city,\n      country,\n      zipCode\n    } = officeAddress;\n\n    const specialities = [\n      <Option key={1} value=\"xyz\">\n        xyz\n      </Option>\n    ];\n\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const fieldError = {};\n\n    const { customFieldsError } = this.props;\n    FIELDS.forEach(field => {\n      if (customFieldsError) {\n        if (!isFieldTouched(field) && customFieldsError[field]) {\n          fieldError[field] = getFieldError(field);\n        }\n      } else {\n        fieldError[field] = isFieldTouched(field) && getFieldError(field);\n      }\n    });\n\n    return (\n      <div id=\"work\">\n        <Element name=\"work\">\n          <div className=\"bold mt40 pb16 fontsize18\">Work</div>\n          <div>\n            <FormItem\n              label={formatMessage(messages.organisationName)}\n              validateStatus={fieldError[ORGANISATION_NAME] ? \"error\" : \"\"}\n              help={fieldError[ORGANISATION_NAME] || \"\"}\n            >\n              {getFieldDecorator(ORGANISATION_NAME, {\n                initialValue: organizationName\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.speciality)}\n              validateStatus={fieldError[SPECIALITY] ? \"error\" : \"\"}\n              help={fieldError[SPECIALITY] || \"\"}\n            >\n              {getFieldDecorator(SPECIALITY, {\n                rules: [],\n                initialValue: speciality\n              })(\n                <Select\n                  className={\"full-width iqvia-style-select fontsize14\"}\n                  suffixIcon={dropdownIcon}\n                  placeholder=\"\"\n                >\n                  {specialities}\n                </Select>\n              )}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.licenseNumber)}\n              validateStatus={fieldError[LICENSE_NUMBER] ? \"error\" : \"\"}\n              help={fieldError[LICENSE_NUMBER] || \"\"}\n            >\n              {getFieldDecorator(LICENSE_NUMBER, {\n                initialValue: licenseNumber\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className=\"mt20\">\n            <div className=\"content-space-between pb5\">\n              <label className={\"label-color fontsize12\"}>\n                {formatMessage(messages.services)}\n              </label>\n              <div className={\"subdued fontsize12\"}>\n                {formatMessage(messages.useComma)}\n              </div>\n            </div>\n            <TagInput\n              className=\"\"\n              fieldName={SERVICES}\n              getFieldDecorator={getFieldDecorator}\n              initialValue={\n                servicesValue && servicesValue !== null && servicesValue !== \"\"\n                  ? servicesValue.split(\",\")\n                  : []\n              }\n            />\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.bio)}\n              validateStatus={fieldError[BIO] ? \"error\" : \"\"}\n              help={fieldError[BIO] || \"\"}\n            >\n              {getFieldDecorator(BIO, {\n                initialValue: about\n              })(<TextArea placeholder=\"\" autosize />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine1)}\n              validateStatus={fieldError[ADDRESSLINE1] ? \"error\" : \"\"}\n              help={fieldError[ADDRESSLINE1] || \"\"}\n            >\n              {getFieldDecorator(ADDRESSLINE1, {\n                initialValue: addressLine1\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine2)}\n              validateStatus={fieldError[ADRESSLINE2] ? \"error\" : \"\"}\n              help={fieldError[ADRESSLINE2] || \"\"}\n            >\n              {getFieldDecorator(ADRESSLINE2, {\n                initialValue: addressLine2\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.zipcode)}\n              validateStatus={fieldError[ZIP_CODE] ? \"error\" : \"\"}\n              help={fieldError[ZIP_CODE] || \"\"}\n            >\n              {getFieldDecorator(ZIP_CODE, {\n                initialValue: zipCode\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <CountryCity\n            form={this.props.form}\n            getFieldDecorator={getFieldDecorator}\n            cityLabel={formatMessage(messages.cityLabel)}\n            countryLabel={formatMessage(messages.countryLabel)}\n            city={city}\n            country={country}\n            cityField={CITY}\n            countryField={COUNTRY}\n          />\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(WorkSection);\n","import React, { Component } from \"react\";\nimport { Form, List, Checkbox } from \"antd\";\nimport { Element } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\nconst FormItem = Form.Item;\n\n//fields\nconst MEDICAL_SERVICES = \"services.medicalServices\";\nconst NURSING = \"services.homeHealthCare.nursing\";\nconst PHYSICAL_THERAPY = \"services.homeHealthCare.physicalTherapy\";\nconst OCCUPATIONAL_THERAPY = \"services.homeHealthCare.occupationalTherapy\";\nconst SPEECH_PATHOLOGY = \"services.homeHealthCare.speechPathology\";\nconst MEDICAL_COUNSELLING = \"services.homeHealthCare.medicalCounselling\";\nconst HEALTH_AIDE = \"services.homeHealthCare.healthAide\";\nconst CARDIAC_CARE = \"services.specialCare.cardiacCare\";\nconst DIABETES_CARE = \"services.specialCare.diabetesCare\";\nconst SMOKING_CESSATION = \"services.specialCare.smokingCessation\";\nconst RESPITE_CARE = \"services.nonMedicalServices.respiteCare\";\nconst HOME_MAKING = \"services.nonMedicalServices.homemaking\";\n\nclass ServiceSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const { getFieldDecorator } = this.props.form;\n\n    const {\n      medicalServices = false,\n      homeHealthCare = {},\n      specialCare = {},\n      nonMedicalServices = {}\n    } = this.props.userData.services;\n\n    const homeHealthCareServices = [\n      {\n        key: NURSING,\n        title: formatMessage(messages.nursingTitle),\n        value: homeHealthCare.nursing || false,\n        subtitle: formatMessage(messages.nursing)\n      },\n      {\n        key: PHYSICAL_THERAPY,\n        title: formatMessage(messages.physicalTherapyTitle),\n        value: homeHealthCare.physicalTherapy || false,\n        subtitle: formatMessage(messages.physicalTherapy)\n      },\n      {\n        key: OCCUPATIONAL_THERAPY,\n        title: formatMessage(messages.occupationalTherapyTitle),\n        value: homeHealthCare.occupationalTherapy || false,\n        subtitle: formatMessage(messages.occupationalTherapy)\n      },\n      {\n        key: SPEECH_PATHOLOGY,\n        title: formatMessage(messages.speechAndLanguagePathologyTitle),\n        value: homeHealthCare.speechPathology || false,\n        subtitle: formatMessage(messages.speechAndLanguagePathology)\n      },\n      {\n        key: MEDICAL_COUNSELLING,\n        title: formatMessage(messages.medicalCounsellingTitle),\n        value: homeHealthCare.medicalCounselling || false,\n        subtitle: formatMessage(messages.medicalCounselling)\n      },\n      {\n        key: HEALTH_AIDE,\n        title: formatMessage(messages.healthAideTitle),\n        value: homeHealthCare.healthAide || false,\n        subtitle: formatMessage(messages.healthAide)\n      }\n    ];\n\n    const specialCareValues = [\n      {\n        key: CARDIAC_CARE,\n        title: formatMessage(messages.cardiacCareTitle),\n        value: specialCare.cardiacCare || false,\n        subtitle: formatMessage(messages.cardiacCare)\n      },\n      {\n        key: DIABETES_CARE,\n        title: formatMessage(messages.diabetesCareTitle),\n        value: specialCare.diabetesCare || false,\n        subtitle: formatMessage(messages.diabetesCare)\n      },\n      {\n        key: SMOKING_CESSATION,\n        title: formatMessage(messages.smokingCessationTitle),\n        value: specialCare.smokingCessation || false,\n        subtitle: formatMessage(messages.smokingCessation)\n      }\n    ];\n\n    const nonMedicalService = [\n      {\n        key: RESPITE_CARE,\n        title: formatMessage(messages.respiteCareTitle),\n        value: nonMedicalServices.respiteCare || false,\n        subtitle: formatMessage(messages.respiteCare)\n      },\n      {\n        key: HOME_MAKING,\n        title: formatMessage(messages.homemakingTitle),\n        value: nonMedicalServices.homeMaking || false,\n        subtitle: formatMessage(messages.homemaking)\n      }\n    ];\n\n    let homeHealthCareServiceContent = [];\n\n    homeHealthCareServices.forEach((data, index) => {\n      homeHealthCareServiceContent.push(\n        <div key={index} className=\"full-width\">\n          <div className=\"content-space-between full-width flex align-items-center settings\">\n            <FormItem className={\"mb0\"}>\n              {getFieldDecorator(data.key, {\n                rules: [],\n                valuePropName: \"checked\",\n                initialValue: data.value\n              })(\n                <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                  <div>\n                    <div className=\"fontsize14 dark\">{data.title}</div>\n                    <div className=\"subdued fontsize12\">{data.subtitle}</div>\n                  </div>\n                </Checkbox>\n              )}\n            </FormItem>\n          </div>\n        </div>\n      );\n    });\n\n    let specialCareContent = [];\n\n    specialCareValues.forEach((data, index) => {\n      specialCareContent.push(\n        <div key={index} className=\"full-width\">\n          <div className=\"content-space-between full-width flex align-items-center settings\">\n            <FormItem className={\"mb0\"}>\n              {getFieldDecorator(data.key, {\n                rules: [],\n                valuePropName: \"checked\",\n                initialValue: data.value\n              })(\n                <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                  <div>\n                    <div className=\"fontsize14 dark\">{data.title}</div>\n                    <div className=\"subdued fontsize12\">{data.subtitle}</div>\n                  </div>\n                </Checkbox>\n              )}\n            </FormItem>\n          </div>\n        </div>\n      );\n    });\n\n    const nonMedicalServiceContent = [];\n    nonMedicalService.forEach((data, index) => {\n      nonMedicalServiceContent.push(\n        <div key={index} className=\"full-width\">\n          <div className=\"content-space-between full-width flex align-items-center settings\">\n            <FormItem className={\"mb0\"}>\n              {getFieldDecorator(data.key, {\n                rules: [],\n                valuePropName: \"checked\",\n                initialValue: data.value\n              })(\n                <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                  <div>\n                    <div className=\"fontsize14 dark\">{data.title}</div>\n                    <div className=\"subdued fontsize12\">{data.subtitle}</div>\n                  </div>\n                </Checkbox>\n              )}\n            </FormItem>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div id=\"services\">\n        <Element name=\"services\">\n          <div className=\"bold mt40 pb16 fontsize18\">\n            {formatMessage(messages.services)}\n          </div>\n          <div className=\"full-width\">\n            <div className=\"content-space-between full-width flex align-items-center settings mt20\">\n              <FormItem className={\"mb0\"}>\n                {getFieldDecorator(MEDICAL_SERVICES, {\n                  rules: [],\n                  valuePropName: \"checked\",\n                  initialValue: medicalServices\n                })(\n                  <Checkbox className={\"calendar_sync_line settings-checkbox\"}>\n                    <div>\n                      <div className=\"fontsize14 dark\">\n                        {formatMessage(messages.medicalServices)}\n                      </div>\n                    </div>\n                  </Checkbox>\n                )}\n              </FormItem>\n            </div>\n          </div>\n\n          <div className=\"mt20\">\n            <h5>{formatMessage(messages.homeHealthCare)}</h5>\n            <List\n              span={24}\n              bordered\n              dataSource={homeHealthCareServiceContent}\n              renderItem={item => <List.Item>{item}</List.Item>}\n            />\n          </div>\n          <div className=\"mt20\">\n            <h5>{formatMessage(messages.specialCare)}</h5>\n            <List\n              span={24}\n              bordered\n              dataSource={specialCareContent}\n              renderItem={item => <List.Item>{item}</List.Item>}\n            />\n          </div>\n          <div className=\"mt20\">\n            <h5>{formatMessage(messages.nonMedicalServices)}</h5>\n            <List\n              span={24}\n              bordered\n              dataSource={nonMedicalServiceContent}\n              renderItem={item => <List.Item>{item}</List.Item>}\n            />\n          </div>\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(ServiceSection);\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { scroller, Link } from \"react-scroll\";\nimport messages from \"../message\";\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"personal\"\n    };\n  }\n\n  scrollToElement = name => {\n    scroller.scrollTo(name, {\n      duration: 1000,\n      delay: 0,\n      smooth: true,\n      offset: -180\n    });\n  };\n\n  setActive = val => {\n    this.setState({ active: val });\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const menu = [\n      { key: formatMessage(messages.personal), value: \"personal\" },\n      //{ key: formatMessage(messages.services), value: \"services\" },\n      { key: formatMessage(messages.work), value: \"work\" },\n      { key: formatMessage(messages.settings), value: \"setting\" }\n    ];\n\n    let menuElement = [];\n    menu.forEach((item, index) => {\n      menuElement.push(\n        <Menu.Item key={item.value}>\n          <Link\n            activeClass={\"active\"}\n            to={item.value}\n            spy={true}\n            isDynamic={false}\n            offset={-180}\n            delay={0}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.scrollToElement(item.value);\n            }}\n            onSetActive={() => {\n              this.setActive(item.value);\n            }}\n          >\n            <div\n              onClick={e => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.scrollToElement(item.value);\n              }}\n            >\n              {item.key}\n            </div>\n          </Link>\n        </Menu.Item>\n      );\n    });\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        className={\"flex align-items-start justify-content-space-between\"}\n        selectedKeys={[this.state.active]}\n      >\n        {menuElement}\n      </Menu>\n    );\n  }\n}\n\nexport default injectIntl(MenuBar);\n","import PersonalSection from \"../common/personalSection\";\nimport WorkSection from \"./workSection\";\nimport SettingSection from \"../common/settingSection\";\nimport ServiceSection from \"./serviceSection\";\nimport Menubar from \"./menubar\";\n\nexport default {\n  PersonalSection,\n  ServiceSection,\n  WorkSection,\n  SettingSection,\n  Menubar\n};\n","import React from \"react\";\nimport Form from \"antd/lib/form\";\nimport { Input, Radio, Checkbox } from \"antd\";\n// import messageIcon from \"../../../../Assets/images/ico-message.svg\";\n// import callIcon from \"../../../../Assets/images/ico-phone.svg\";\nimport { MobileInput } from \"../../../MobileInput\";\nimport { Element } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst FormItem = Form.Item;\n\nconst PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst COUNTRY_CODE = \"contactNo.countryCode\";\n\nconst RELATIVES_NAME = \"contacts.relatives.name\";\nconst RELATIVES_COUNTRY_CODE = \"contacts.relatives.contactNo.countryCode\";\nconst RELATIVES_PHONE_NUMBER = \"contacts.relatives.contactNo.phoneNumber\";\nconst RELATIVES_RELATION = \"contacts.relatives.relation\";\n\nconst CONTACT_RELATIVE_IN_EMERGENCY = \"contacts.useRelativeAsEmergencyContact\";\nconst EMERGENCY_CONTACT_NAME = \"contacts.emergencyContact.name\";\nconst EMERGENCY_CONTACT_COUNTRY_CODE =\n  \"contacts.emergencyContact.contactNo.countryCode\";\nconst EMERGENCY_CONTACT_PHONE_NUMBER =\n  \"contacts.emergencyContact.contactNo.phoneNumber\";\n\nconst FIELDS = [\n  EMERGENCY_CONTACT_NAME,\n  EMERGENCY_CONTACT_COUNTRY_CODE,\n  EMERGENCY_CONTACT_PHONE_NUMBER,\n  RELATIVES_COUNTRY_CODE,\n  RELATIVES_PHONE_NUMBER,\n  RELATIVES_NAME\n];\n\nclass ContactSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  isAnyContactAvailable = () => {\n    const form = this.props.form;\n\n    return form.getFieldValue(RELATIVES_NAME).length &&\n      form.getFieldValue(RELATIVES_PHONE_NUMBER).length > 0\n      ? true\n      : false;\n  };\n\n  handleChangeEmergencyContact = value => {\n    //to force validate Emergency Contact field\n    this.props.form.validateFields();\n    this.setState(\n      {\n        isEnableEmergencyContact: value.target.checked\n      },\n      () => {\n        let countryCode = \"\";\n        const {\n          validateFields,\n          setFieldsValue,\n          getFieldValue\n        } = this.props.form;\n        if (this.state.isEnableEmergencyContact) {\n          countryCode = getFieldValue(RELATIVES_COUNTRY_CODE);\n          setFieldsValue({\n            [EMERGENCY_CONTACT_COUNTRY_CODE]: countryCode,\n            [EMERGENCY_CONTACT_PHONE_NUMBER]: getFieldValue(\n              RELATIVES_PHONE_NUMBER\n            ),\n            [EMERGENCY_CONTACT_NAME]: getFieldValue(RELATIVES_NAME)\n          });\n          validateFields([RELATIVES_PHONE_NUMBER]);\n        } else {\n          setFieldsValue({\n            [EMERGENCY_CONTACT_COUNTRY_CODE]: undefined,\n            [EMERGENCY_CONTACT_PHONE_NUMBER]: undefined,\n            [EMERGENCY_CONTACT_NAME]: undefined\n          });\n          validateFields([\n            EMERGENCY_CONTACT_COUNTRY_CODE,\n            EMERGENCY_CONTACT_NAME,\n            EMERGENCY_CONTACT_PHONE_NUMBER\n          ]);\n        }\n        this.setState({\n          emergencyContactCountryCode: countryCode\n        });\n      }\n    );\n  };\n\n  isRelativeNotEqlToPersonalPhone = (rule, value, callback) => {\n    const { getFieldValue } = this.props.form;\n\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const personalNumber = getFieldValue(PHONE_NUMBER);\n    const personalCountryCode = getFieldValue(COUNTRY_CODE);\n\n    const relativeCountryCode = getFieldValue(RELATIVES_COUNTRY_CODE);\n    if (value && value.length > 0) {\n      if (\n        personalCountryCode === relativeCountryCode &&\n        value === personalNumber\n      ) {\n        callback(formatMessage(messages.relativeNumberError));\n      } else {\n        callback();\n      }\n    } else {\n      callback();\n    }\n  };\n\n  isRelativeCodeNotEqlToPersonalPhone = (rule, value, callback) => {\n    const { validateFields } = this.props.form;\n    if (value && value.length > 0) {\n      validateFields([RELATIVES_PHONE_NUMBER]);\n      callback();\n    } else {\n      callback();\n    }\n  };\n\n  isEmergencyNotEqlToPersonalPhone = (rule, value, callback) => {\n    const { getFieldValue } = this.props.form;\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const personalNumber = getFieldValue(PHONE_NUMBER);\n    const personalCountryCode = getFieldValue(COUNTRY_CODE);\n\n    const emergencycountryCode = getFieldValue(EMERGENCY_CONTACT_COUNTRY_CODE);\n    if (value && value.length > 0) {\n      if (\n        personalCountryCode === emergencycountryCode &&\n        value === personalNumber\n      ) {\n        callback(formatMessage(messages.emergencyNumberError));\n      } else {\n        callback();\n      }\n    } else {\n      callback();\n    }\n  };\n\n  isEmergencyCodeNotEqlToPersonalPhone = (rule, value, callback) => {\n    const { validateFields } = this.props.form;\n\n    if (value && value.length > 0) {\n      validateFields([EMERGENCY_CONTACT_PHONE_NUMBER]);\n      callback();\n    } else {\n      callback(this.props.intl.formatMessage(messages.notBeBlank));\n    }\n  };\n\n  canUseEmergencyCheckboxEnable = () => {\n    const { getFieldValue } = this.props.form;\n    const rname = getFieldValue(RELATIVES_NAME);\n    const rcountrycode = getFieldValue(RELATIVES_COUNTRY_CODE);\n    const rcontactno = getFieldValue(RELATIVES_PHONE_NUMBER);\n\n    if (\n      rname &&\n      rcountrycode &&\n      rcontactno &&\n      rname.length > 0 &&\n      rcountrycode.length > 0 &&\n      rcontactno.length > 0\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  notBlank = (rule, value, callback) => {\n    if (!value || value.length === 0) {\n      callback(this.props.intl.formatMessage(messages.notBeBlank));\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      personalInfo: { contacts = {} }\n    } = this.props.userData;\n    const {\n      careCoaches = {},\n      caseDoctors = {},\n      hospitals = {},\n      userData: { programIds = [] },\n      intl: { formatMessage }\n    } = this.props;\n\n    let careCoach = {};\n    let caseDoctor = {};\n    let hospital = {};\n\n    if (programIds.length > 0) {\n      const {\n        careCoach: careCoachId,\n        doctor: doctorId,\n        hospitalId\n      } = programIds[0];\n      careCoach = careCoaches[careCoachId] || {};\n      caseDoctor = caseDoctors[doctorId] || {};\n      hospital = hospitals[hospitalId];\n    }\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const {\n      relatives = {},\n      emergencyContact = {},\n      useRelativeAsEmergencyContact: isEmergencyContactSet = false\n    } = contacts;\n\n    const {\n      name: relativeName,\n      contactNo: relativeContactNo = {},\n      relation: relativeRelation = \"Parent\"\n    } = relatives;\n    const {\n      name: emergencyContactName,\n      contactNo: emergencyContactNo = {}\n    } = emergencyContact;\n\n    const forEmergencyContactName = this.state.isEnableEmergencyContact\n      ? getFieldValue(EMERGENCY_CONTACT_NAME)\n      : emergencyContactName;\n\n    const emergencyCountryCode =\n      this.state.emergencyContactCountryCode === undefined\n        ? emergencyContactNo.countryCode\n        : this.state.emergencyContactCountryCode;\n\n    const fieldError = {};\n    const { isFieldTouched, getFieldError } = this.props.form;\n    const { customFieldsError } = this.props;\n    FIELDS.forEach(field => {\n      if (customFieldsError) {\n        if (!isFieldTouched(field) && customFieldsError[field]) {\n          fieldError[field] = getFieldError(field);\n        } else {\n          fieldError[field] = isFieldTouched(field) && getFieldError(field);\n        }\n      } else {\n        fieldError[field] = isFieldTouched(field) && getFieldError(field);\n      }\n    });\n\n    return (\n      <div id=\"contact\">\n        <Element name=\"contact\">\n          <div>\n            <div className=\"bold mt40 pb16 fontsize18\">\n              {formatMessage(messages.contacts)}\n            </div>\n            <div className=\"mt10\">\n              <div className={\"mb0 label-color fontsize12\"}>\n                {formatMessage(messages.caseDoctor)}\n              </div>\n              {caseDoctor.name === undefined ? (\n                <div className=\"fontsize16 blacks \">\n                  {formatMessage(messages.notAssigned)}\n                </div>\n              ) : (\n                <div className=\"flex row justify-content-space-between align-items-center\">\n                  <div className=\"fontsize16 black\">{caseDoctor.name}</div>\n\n                  <div>\n                    <div>\n                      {/* <img\n                        alt=\"\"\n                        className=\"call-message pr4\"\n                        src={messageIcon}\n                      />\n                      <img alt=\"\" className=\"call-message\" src={callIcon} /> */}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"mt10\">\n              <div>\n                <div className={\"mb0 label-color fontsize12\"}>\n                  {formatMessage(messages.careCoach)}\n                </div>\n                {careCoach.name === undefined ? (\n                  <div className=\"fontsize16 blacks \">\n                    {formatMessage(messages.notAssigned)}\n                  </div>\n                ) : (\n                  <div className=\"flex row justify-content-space-between align-items-center\">\n                    <div className=\"fontsize16 black\">{careCoach.name}</div>\n\n                    {/* <div>\n                      <div>\n                        <img\n                          alt=\"\"\n                          className=\"call-message pr4\"\n                          src={messageIcon}\n                        />\n                        <img alt=\"\" className=\"call-message\" src={callIcon} />\n                      </div>\n                    </div> */}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"mt10\">\n              <div>\n                <div className={\"mb0 label-color fontsize12\"}>\n                  {formatMessage(messages.hospital)}\n                </div>\n                {hospital === undefined ? (\n                  <div className=\"fontsize16 blacks \">\n                    {formatMessage(messages.notAssigned)}\n                  </div>\n                ) : (\n                  <div className=\"flex row justify-content-space-between align-items-center\">\n                    <div className=\"fontsize16 black\">{hospital.name}</div>\n                    {/* <div>\n                      <div>\n                        <img\n                          alt=\"\"\n                          className=\"call-message pr4\"\n                          src={messageIcon}\n                        />\n                        <img alt=\"\" className=\"call-message\" src={callIcon} />\n                      </div>\n                    </div> */}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"mt24\">\n              <div className=\"flex row align-items-center justify-content-space-between\">\n                <div className={\"label-color fontsize12 pb5\"}>\n                  {formatMessage(messages.relativeName)}\n                </div>\n                <FormItem className={\"tab-radio-button\"}>\n                  {getFieldDecorator(RELATIVES_RELATION, {\n                    initialValue: relativeRelation,\n                    type: \"string\"\n                  })(\n                    <RadioGroup size=\"small\">\n                      <RadioButton value=\"Parent\">\n                        {formatMessage(messages.parent)}\n                      </RadioButton>\n                      <RadioButton value=\"Spouse\">\n                        {formatMessage(messages.spouse)}\n                      </RadioButton>\n                      <RadioButton value=\"Guardian\">\n                        {formatMessage(messages.guardian)}\n                      </RadioButton>\n                    </RadioGroup>\n                  )}\n                </FormItem>\n              </div>\n              <FormItem\n                validateStatus={fieldError[RELATIVES_NAME] ? \"error\" : \"\"}\n                help={fieldError[RELATIVES_NAME] || \"\"}\n              >\n                {getFieldDecorator(RELATIVES_NAME, {\n                  initialValue: relativeName\n                })(<Input placeholder=\"\" className=\"mt2\" />)}\n              </FormItem>\n\n              <div className=\"fontsize12 pb5 label-color\">\n                {formatMessage(messages.relativeMobile)}\n              </div>\n              <MobileInput\n                fieldError={fieldError}\n                countryCode={\n                  relativeContactNo.countryCode === null\n                    ? undefined\n                    : relativeContactNo.countryCode\n                }\n                phoneNumber={relativeContactNo.phoneNumber}\n                phoneField={RELATIVES_PHONE_NUMBER}\n                countryCodeField={RELATIVES_COUNTRY_CODE}\n                rulesCountryCode={[\n                  { validator: this.isRelativeCodeNotEqlToPersonalPhone }\n                ]}\n                rulesPhoneNumber={[\n                  {\n                    message: formatMessage(messages.phoneNumberRule)\n                  },\n                  {\n                    validator: this.isRelativeNotEqlToPersonalPhone\n                  }\n                ]}\n                {...this.props}\n              />\n            </div>\n            <div className=\"mt24\">\n              <div>\n                <div className=\"content-space-between full-width flex align-items-center settings\">\n                  <FormItem className={\"mb0\"}>\n                    {getFieldDecorator(CONTACT_RELATIVE_IN_EMERGENCY, {\n                      valuePropName: \"checked\",\n                      initialValue: isEmergencyContactSet || false,\n                      onChange: this.handleChangeEmergencyContact\n                    })(\n                      <Checkbox\n                        className={\"calendar_sync_line settings-checkbox\"}\n                        disabled={this.canUseEmergencyCheckboxEnable()}\n                      >\n                        <div className={\"label-color medium fontsize14\"}>\n                          {formatMessage(messages.contactRelative)}\n                        </div>\n                      </Checkbox>\n                    )}\n                  </FormItem>\n                </div>\n                <div className=\"mt10\">\n                  <FormItem\n                    label={formatMessage(messages.emergencyContactName)}\n                    validateStatus={\n                      fieldError[EMERGENCY_CONTACT_NAME] ? \"error\" : \"\"\n                    }\n                    help={fieldError[EMERGENCY_CONTACT_NAME] || \"\"}\n                  >\n                    {getFieldDecorator(EMERGENCY_CONTACT_NAME, {\n                      rules: [\n                        {\n                          required: true,\n                          message: formatMessage(messages.emergencyContactRule)\n                        }\n                      ],\n                      initialValue: forEmergencyContactName\n                    })(\n                      <Input\n                        placeholder=\"\"\n                        disabled={\n                          this.state.isEnableEmergencyContact === undefined\n                            ? isEmergencyContactSet\n                            : this.state.isEnableEmergencyContact\n                        }\n                      />\n                    )}\n                  </FormItem>\n                </div>\n                <div className=\"mt10\">\n                  <label className=\"mb5 fontsize12 label-color ant-form-item-required\">\n                    {formatMessage(messages.emergencyContactMobile)}\n                  </label>\n                  <MobileInput\n                    fieldError={fieldError}\n                    countryCode={emergencyCountryCode}\n                    phoneNumber={emergencyContactNo.phoneNumber}\n                    phoneField={EMERGENCY_CONTACT_PHONE_NUMBER}\n                    countryCodeField={EMERGENCY_CONTACT_COUNTRY_CODE}\n                    disabled={\n                      this.state.isEnableEmergencyContact === undefined\n                        ? isEmergencyContactSet\n                        : this.state.isEnableEmergencyContact\n                    }\n                    rulesCountryCode={[\n                      {\n                        required: true,\n                        message: formatMessage(messages.phoneNumberRule)\n                      }\n                      // { validator: this.isEmergencyCodeNotEqlToPersonalPhone }\n                    ]}\n                    rulesPhoneNumber={[\n                      {\n                        required: true,\n                        message: formatMessage(messages.phoneNumberRule)\n                      },\n                      { validator: this.isEmergencyNotEqlToPersonalPhone }\n                    ]}\n                    {...this.props}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(ContactSection);\n","import React, { Component } from \"react\";\nimport { Input, Button, Icon, Form, Select, Radio } from \"antd\";\nimport forIn from \"lodash-es/forIn\";\nimport get from \"lodash-es/get\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport forEachRight from \"lodash-es/forEachRight\";\nimport dropdown from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport { Element } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\nimport TagInput from \"../../../Common/tag\";\n\nconst FormItem = Form.Item;\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\n\nconst dropdownIcon = <img alt=\"\" src={dropdown} />;\n\n//fields\nconst CHIEF_COMPLAINT = \"medicalCondition.basicCondition.chiefComplaint\";\nconst ALLERGIES = \"medicalCondition.basicCondition.allergies\";\nconst SURGERIES_OR_FRACTURE =\n  \"medicalCondition.basicCondition.surgeriesOrFracture\";\nconst OTHERS = \"medicalCondition.basicCondition.others\";\n\nconst TEMPERATURE_UNIT = \"medicalCondition.vitals.temperatureUnit\";\nconst TEMPERATURE = \"medicalCondition.vitals.temperature\";\nconst RESPIRATION_RATE = \"medicalCondition.vitals.respirationRate\";\nconst PULSE = \"medicalCondition.vitals.pulse\";\nconst BLOOD_PRESSURE = \"medicalCondition.vitals.bloodPressure\";\nconst DIAGNOSIS_METHOD = \"medicalCondition.clinicalReadings\";\n\nconst DIAGNOSISMETHOD = \"Diagnosis method\";\nconst SUFFIX = \"suffix\";\n\nclass MedicalSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clinicalReadings: [],\n      testTemplate: {},\n      index: 0,\n      selectedTests: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      clinical_test_templates,\n      userData: { programIds } = {},\n      medicalsData: { clinicalReadings = {} } = {}\n    } = this.props;\n    const { id: programId } = programIds[0];\n\n    const allTest = Object.keys(clinicalReadings);\n    let previousTest = {};\n    allTest.forEach((test, index) => {\n      previousTest = { ...previousTest, [index]: test };\n    });\n\n    this.setState(\n      {\n        testTemplate: clinical_test_templates[programId],\n        selectedTests: previousTest,\n        clinicalReadings: allTest\n      },\n      () => {}\n    );\n  }\n\n  getInputElement = (test, section, content) => {\n    let inputs = [];\n    const { getFieldDecorator } = this.props.form;\n    forIn(content, (value, key) => {\n      inputs.push(\n        <div key={key} className=\"mb8 mt10\">\n          <div className=\"content-space-between fontsize12 label-color pb5\">\n            {value.label}\n          </div>\n          <FormItem>\n            {getFieldDecorator(test + \".\" + section + \".\" + key, {\n              initialValue: value.value\n            })(<Input placeholder=\"\" />)}\n            <div className=\"suffix-placeholder\">\n              <div>{value.type}</div>\n            </div>\n          </FormItem>\n        </div>\n      );\n    });\n    return inputs;\n  };\n\n  getReadingAttributeForTest = (test, content) => {\n    let contents = [];\n\n    forIn(content, (value, key) => {\n      contents.push(\n        <div key={key} className=\"mt10 mb30\">\n          <div className=\"bold fontsize14\">{value.label}</div>\n          {this.getInputElement(test, key, value.content)}\n        </div>\n      );\n    });\n    return contents;\n  };\n\n  getClinicalReadingForm = index => {\n    const { testTemplate, clinicalReadings } = this.state;\n    let testTemplateReading = {};\n    const allTestTemplates = Object.keys(testTemplate);\n    const testName = clinicalReadings[index];\n    if (allTestTemplates.length > 0 && testName !== DIAGNOSISMETHOD) {\n      testTemplateReading.type = testTemplate[testName].label;\n      testTemplateReading.content = this.gettestreading(\n        testTemplate[testName].content,\n        testName\n      );\n    }\n    const test = this.state.clinicalReadings[index];\n    // (\"===this.state=====\", testReading)\n    if (test === DIAGNOSISMETHOD) {\n      return null;\n    } else {\n      return this.getReadingAttributeForTest(\n        DIAGNOSIS_METHOD + \".\" + test,\n        testTemplateReading.content\n      );\n    }\n  };\n\n  addMoreTest = () => {\n    let tests = this.state.clinicalReadings;\n    tests.push(DIAGNOSISMETHOD);\n    //status : 0 for new, 1 for old\n    this.setState(\n      {\n        clinicalReadings: tests\n      },\n      () => {}\n    );\n  };\n\n  // changeTUnit = () => {\n  // \tconst current = this.state.tunit;\n  // \tthis.setState({\n  // \t\ttunit: current === \"c\" ? \"f\" : \"c\"\n  // \t});\n  // };\n\n  getseconreading = (data, label, sectionlabel, testName) => {\n    let sections = {};\n    const { medicals_data } = this.props;\n    let clinicalReading = {};\n    if (medicals_data) {\n      const { clinicalReadings = {} } = medicals_data;\n      clinicalReading = clinicalReadings;\n    }\n\n    const suffix = data[SUFFIX];\n    let inputs = {};\n    forIn(data, (value, key) => {\n      if (key !== SUFFIX) {\n        let data = {};\n        if (!isEmpty(clinicalReading)) {\n          const { data: readings = {} } = clinicalReading[testName] || {};\n          data = readings;\n        }\n\n        inputs[key] = {\n          value: get(data, `${label}.${key}`, \"\"),\n          type: suffix,\n          label: value\n        };\n      }\n    });\n    sections.content = inputs;\n    sections.label = sectionlabel;\n    //\n    return sections;\n  };\n\n  gettestreading = (data, testName) => {\n    let section = {};\n    forIn(data, (value, key) => {\n      //\n      if (value.hasOwnProperty(\"content\")) {\n        section[key] = this.getseconreading(\n          value.content,\n          key,\n          value.label,\n          testName\n        );\n      }\n    });\n\n    return section;\n  };\n\n  changeClinicalReadingType = (e, index) => {\n    const { selectedTests } = this.state;\n    let tests = this.state.clinicalReadings;\n    tests[index] = e;\n\n    this.setState({\n      clinicalReadings: tests,\n      index: index,\n      selectedTests: { ...selectedTests, [index]: e }\n    });\n  };\n\n  getTestOptions = () => {\n    const { testTemplate, selectedTests } = this.state;\n    const currentTestKeys = Object.keys(selectedTests);\n    const currentTests = currentTestKeys.map(value => selectedTests[value]);\n    const allTests = Object.keys(testTemplate);\n\n    const testAvailabele = allTests.filter(test => {\n      return !currentTests.includes(test);\n    });\n    // (\"************alltest*************\", testAvailabele)\n    const testOption = testAvailabele.map((test, index) => {\n      return (\n        <Option key={index} value={test}>\n          {test}\n        </Option>\n      );\n    });\n    return testOption;\n  };\n\n  render() {\n    const {\n      medicalsData = {},\n      intl: { formatMessage }\n    } = this.props;\n    const { basicCondition = {}, vitals = {} } = medicalsData;\n    const {\n      chiefComplaint = \"\",\n      allergies = \"\",\n      surgeriesOrFracture = \"\",\n      others = \"\"\n    } = basicCondition;\n    const {\n      temperatureUnit = \"c\",\n      temperature,\n      respirationRate,\n      pulse,\n      bloodPressure\n    } = vitals;\n\n    const { getFieldDecorator } = this.props.form;\n    const { getTestOptions } = this;\n    //\n\n    let medicalReadings = [];\n    let tests = this.state.clinicalReadings;\n    const testOption = getTestOptions();\n\n    forEachRight(tests, (element, index) => {\n      medicalReadings.push(\n        <div key={index} className=\"mb20\">\n          <Select\n            className={\"full-width iqvia-style-select fontsize14\"}\n            suffixIcon={dropdownIcon}\n            defaultValue={element}\n            onChange={e => {\n              this.changeClinicalReadingType(e, index);\n            }}\n          >\n            {testOption}\n          </Select>\n          <div>{this.getClinicalReadingForm(index)}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div id=\"medical\">\n        <Element name=\"medical\">\n          <div className=\"bold mt40 pb16 fontsize18\">\n            {formatMessage(messages.medical)}\n          </div>\n          <div className=\"medium fontsize16\">\n            {formatMessage(messages.basic)}\n          </div>\n          <div className=\"mt10\">\n            <FormItem label={formatMessage(messages.chiefComplaint)}>\n              {getFieldDecorator(CHIEF_COMPLAINT, {\n                initialValue: chiefComplaint\n              })(<Input />)}\n            </FormItem>\n          </div>\n          <div className=\"mt20\">\n            <div className=\"content-space-between pb5\">\n              <label className={\"label-color fontsize12\"}>\n                {formatMessage(messages.allergies)}\n              </label>\n              <div className={\"subdued fontsize12\"}>\n                {formatMessage(messages.useComma)}\n              </div>\n            </div>\n            <TagInput\n              className=\"\"\n              fieldName={ALLERGIES}\n              getFieldDecorator={getFieldDecorator}\n              initialValue={\n                allergies && allergies !== null && allergies !== \"\"\n                  ? allergies.split(\",\")\n                  : []\n              }\n            />\n          </div>\n          <div className=\"mt20\">\n            <div className=\"content-space-between  pb5\">\n              <label className={\"label-color fontsize12\"}>\n                {formatMessage(messages.surgeriesFracture)}\n              </label>\n              <div className={\"subdued fontsize12\"}>\n                {formatMessage(messages.useComma)}\n              </div>\n            </div>\n            <TagInput\n              className=\"\"\n              fieldName={SURGERIES_OR_FRACTURE}\n              getFieldDecorator={getFieldDecorator}\n              initialValue={\n                surgeriesOrFracture &&\n                surgeriesOrFracture !== null &&\n                surgeriesOrFracture !== \"\"\n                  ? surgeriesOrFracture.split(\",\")\n                  : []\n              }\n            />\n          </div>\n          <div className=\"mt20\">\n            <div className=\"content-space-between  pb5\">\n              <label className={\"label-color fontsize12\"}>\n                {formatMessage(messages.otherConditions)}\n              </label>\n              <div className={\"subdued fontsize12\"}>\n                {formatMessage(messages.useComma)}\n              </div>\n            </div>\n            <TagInput\n              className=\"\"\n              fieldName={OTHERS}\n              getFieldDecorator={getFieldDecorator}\n              initialValue={\n                others && others !== null && others !== \"\"\n                  ? others.split(\",\")\n                  : []\n              }\n            />\n          </div>\n          <div className=\"mt30\">\n            <div className=\"medium mb8\">{formatMessage(messages.vital)}</div>\n            <div className=\"fontsize12 subdued mb20\">\n              {formatMessage(messages.vitalSubtitle)}\n            </div>\n            <div>\n              <div className=\"flex row align-items-center full-width justify-content-space-between\">\n                <div className=\"label-color fontsize12 pb5\">\n                  {formatMessage(messages.bodyTemperature)}\n                </div>\n                <FormItem className={\"tab-radio-button\"}>\n                  {getFieldDecorator(TEMPERATURE_UNIT, {\n                    initialValue: temperatureUnit,\n                    type: \"string\"\n                  })(\n                    <RadioGroup size=\"small\">\n                      <RadioButton className=\"medium\" value=\"c\">\n                        ℃\n                      </RadioButton>\n                      <RadioButton className=\"medium\" value=\"f\">\n                        ℉\n                      </RadioButton>\n                    </RadioGroup>\n                  )}\n                </FormItem>\n              </div>\n              <FormItem>\n                {getFieldDecorator(TEMPERATURE, {\n                  initialValue: temperature\n                })(<Input placeholder=\"\" className=\"mt2\" />)}\n              </FormItem>\n            </div>\n            <div className=\"mt20\">\n              <div className=\"fontsize12 label-color pb5\">\n                {formatMessage(messages.respirationRate)}\n              </div>\n              <FormItem>\n                {getFieldDecorator(RESPIRATION_RATE, {\n                  initialValue: respirationRate\n                })(<Input placeholder=\"\" />)}\n                <div className=\"suffix-placeholder\">\n                  <div>{formatMessage(messages.respirationRate)}</div>\n                </div>\n              </FormItem>\n            </div>\n            <div className=\"mt20\">\n              <div className=\"content-space-between fontsize12 label-color pb5\">\n                {formatMessage(messages.pulseRate)}\n              </div>\n              <FormItem>\n                {getFieldDecorator(PULSE, {\n                  initialValue: pulse\n                })(<Input placeholder=\"\" />)}\n                <div className=\"suffix-placeholder\">\n                  <div>{formatMessage(messages.bpm)}</div>\n                </div>\n              </FormItem>\n            </div>\n            <div className=\"mt20\">\n              <div className=\"content-space-between fontsize12 label-color pb5\">\n                {formatMessage(messages.bloodPressure)}\n              </div>\n              <FormItem>\n                {getFieldDecorator(BLOOD_PRESSURE, {\n                  initialValue: bloodPressure\n                })(<Input placeholder=\"\" />)}\n                <div className=\"suffix-placeholder\">\n                  <div>{formatMessage(messages.bpUnit)}</div>\n                </div>\n              </FormItem>\n            </div>\n          </div>\n\n          <div className=\"mt30\">\n            <div className=\"flex row align-items-center justify-content-space-between bold mt30\">\n              <div className=\"medium fontsize16\">\n                {formatMessage(messages.clinicalReadings)}\n              </div>\n              <Button\n                style={{ height: \"32px\", width: \"32px\" }}\n                className={\"border-none\"}\n                onClick={e => {\n                  e.preventDefault();\n                  this.addMoreTest();\n                }}\n              >\n                <Icon type=\"plus\" />\n              </Button>\n            </div>\n            <div className=\"mb16 fontsize12 subdued\">\n              {formatMessage(messages.clinicalReadingsSubtitle)}\n            </div>\n            <div className=\"mt20\">\n              <div>{medicalReadings}</div>\n            </div>\n          </div>\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(MedicalSection);\n","import React, { Component } from \"react\";\nimport { Input, Select, Form, DatePicker } from \"antd\";\nimport { Element } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport messages from \"../message\";\nimport calendar from \"../../../../../Assets/images/button-select-date.svg\";\nimport searchIcon from \"../../../../../Assets/images/ico-search.svg\";\n\nconst SearchIcon = <img alt=\"\" src={searchIcon} />;\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nfunction disabledDate(current) {\n  // select days after today only\n  return current && current < moment().endOf(\"day\");\n}\n\n//insurance field\nconst INSURANCE_PROVIDER = \"insurance.provider\";\nconst INSURANCE_POLICY = \"insurance.policy\";\nconst INSURANCE_EXPIRES_ON = \"insurance.expiresOn\";\n\nconst FIELDS = [INSURANCE_PROVIDER, INSURANCE_EXPIRES_ON, INSURANCE_POLICY];\n\nclass InsuranceSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.getInsuranceProvider();\n  }\n\n  formatMessage = data => {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    return formatMessage(data);\n  };\n\n  insuranceProviders = () => {\n    const { insurance_provider_data = {} } = this.props;\n    let options = [];\n    for (const key in insurance_provider_data) {\n      const insurance = insurance_provider_data[key];\n      options.push(\n        <Option key={`${insurance._id},${key}`} value={insurance._id}>\n          {insurance.name}\n        </Option>\n      );\n    }\n    return options;\n  };\n\n  openCalendar = e => {\n    e.preventDefault();\n    window.document\n      .getElementsByClassName(\"ant-calendar-picker-input\")[1]\n      .click();\n  };\n\n  render() {\n    const { insuranceProviders, formatMessage } = this;\n    const {\n      form: { getFieldDecorator, getFieldError, isFieldTouched },\n      userData: {\n        insurance: {\n          provider: insuranceProvider,\n          policy: insurancePolicy,\n          expiresOn\n        } = {}\n      }\n    } = this.props;\n\n    let insuranceExpiresOn;\n    if (expiresOn && expiresOn !== null && expiresOn.length > 0) {\n      insuranceExpiresOn = moment(expiresOn);\n    }\n\n    const fieldError = {};\n\n    FIELDS.forEach(field => {\n      fieldError[field] = isFieldTouched(field) && getFieldError(field);\n    });\n\n    return (\n      <Element name=\"insurance\">\n        <div className=\"dark bold fontsize18 mt40 mb16\">\n          {formatMessage(messages.insurance)}\n        </div>\n        <FormItem\n          label={formatMessage(messages.insuranceProvider)}\n          validateStatus={fieldError[INSURANCE_PROVIDER] ? \"error\" : \"\"}\n          help={fieldError[INSURANCE_PROVIDER] || \"\"}\n        >\n          {getFieldDecorator(INSURANCE_PROVIDER, {\n            rules: [],\n            initialValue: insuranceProvider,\n            onChange: () => {}\n          })(\n            <Select\n              className={\"full-width iqvia-style-select fontsize14\"}\n              placeholder=\"\"\n              suffixIcon={SearchIcon}\n              showSearch\n              autoComplete=\"off\"\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                option.props.children\n                  .toLowerCase()\n                  .indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {insuranceProviders()}\n            </Select>\n          )}\n        </FormItem>\n        <FormItem\n          label={formatMessage(messages.insurancePolicy)}\n          validateStatus={fieldError[INSURANCE_POLICY] ? \"error\" : \"\"}\n          help={fieldError[INSURANCE_POLICY] || \"\"}\n        >\n          {getFieldDecorator(INSURANCE_POLICY, {\n            rules: [],\n            initialValue: insurancePolicy\n          })(<Input />)}\n        </FormItem>\n        <div className=\"mt20 flex row align-items-center iqvia-date-picker\">\n          <div className=\"full-width \">\n            <FormItem\n              label={formatMessage(messages.insuranceExpiresOn)}\n              validateStatus={fieldError[INSURANCE_EXPIRES_ON] ? \"error\" : \"\"}\n              help={fieldError[INSURANCE_EXPIRES_ON] || \"\"}\n            >\n              {getFieldDecorator(INSURANCE_EXPIRES_ON, {\n                rules: [],\n                initialValue: insuranceExpiresOn,\n                onChange: () => {\n                  this.setState({ open: false });\n                }\n              })(\n                <DatePicker\n                  showToday={false}\n                  disabledDate={disabledDate}\n                  className=\"full-width\"\n                />\n              )}\n\n              <img\n                alt=\"\"\n                className=\"calendar\"\n                onClick={this.openCalendar}\n                src={calendar}\n              />\n            </FormItem>\n          </div>\n        </div>\n      </Element>\n    );\n  }\n}\n\nexport default injectIntl(InsuranceSection);\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { scroller, Link } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"personal\"\n    };\n  }\n\n  scrollToElement = name => {\n    scroller.scrollTo(name, {\n      duration: 1000,\n      delay: 0,\n      smooth: true,\n      offset: -180\n    });\n  };\n\n  setActive = val => {\n    this.setState({ active: val });\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const menu = [\n      { key: formatMessage(messages.personal), value: \"personal\" },\n      { key: formatMessage(messages.insurance), value: \"insurance\" },\n      { key: formatMessage(messages.contacts), value: \"contact\" },\n      { key: formatMessage(messages.medical), value: \"medical\" },\n      { key: formatMessage(messages.settings), value: \"setting\" }\n    ];\n\n    let menuElement = [];\n    menu.forEach((item, index) => {\n      menuElement.push(\n        <Menu.Item key={item.value}>\n          <Link\n            activeClass={\"active\"}\n            to={item.value}\n            spy={true}\n            isDynamic={false}\n            offset={-180}\n            delay={0}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.scrollToElement(item.value);\n            }}\n            onSetActive={() => {\n              this.setActive(item.value);\n            }}\n          >\n            <div\n              onClick={e => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.scrollToElement(item.value);\n              }}\n            >\n              {item.key}\n            </div>\n          </Link>\n        </Menu.Item>\n      );\n    });\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        className={\"flex align-items-start justify-content-space-between\"}\n        selectedKeys={[this.state.active]}\n        style={{}}\n      >\n        {menuElement}\n      </Menu>\n    );\n  }\n}\n\nexport default injectIntl(MenuBar);\n","import PersonalSection from \"../common/personalSection\";\nimport ContactSection from \"./contacts.js\";\nimport SettingSection from \"../common/settingSection\";\nimport MedicalSection from \"./medicalSection\";\nimport InsuranceSections from \"./insuranceSections\";\nimport Menubar from \"./menubar\";\n\nexport default {\n  PersonalSection,\n  ContactSection,\n  MedicalSection,\n  SettingSection,\n  InsuranceSections,\n  Menubar\n};\n","import React, { Component } from \"react\";\nimport { Input, Form } from \"antd\";\nimport { Element } from \"react-scroll\";\nimport CountryCity from \"../../../../Containers/CountryCity\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nconst FormItem = Form.Item;\n\n//fields\nconst ORGANISATION_NAME = \"work.organizationName\";\nconst ADDRESSLINE1 = \"work.officeAddress.addressLine1\";\nconst ADRESSLINE2 = \"work.officeAddress.addressLine2\";\nconst ZIP_CODE = \"work.officeAddress.zipCode\";\nconst CITY = \"work.officeAddress.city\";\nconst COUNTRY = \"work.officeAddress.country\";\n\nconst FIELDS = [\n  ORGANISATION_NAME,\n  ADDRESSLINE1,\n  ADRESSLINE2,\n  ZIP_CODE,\n  CITY,\n  COUNTRY\n];\n\nclass WorkSection extends Component {\n  render() {\n    const { work = {} } = this.props.userData;\n    const { organizationName, officeAddress = {} } = work;\n\n    const {\n      addressLine1,\n      addressLine2,\n      city,\n      country,\n      zipCode\n    } = officeAddress;\n\n    const {\n      getFieldDecorator,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const fieldError = {};\n    const {\n      customFieldsError,\n      intl: { formatMessage }\n    } = this.props;\n    FIELDS.forEach(field => {\n      if (customFieldsError) {\n        if (!isFieldTouched(field) && customFieldsError[field]) {\n          fieldError[field] = getFieldError(field);\n        } else {\n          fieldError[field] = isFieldTouched(field) && getFieldError(field);\n        }\n      } else {\n        fieldError[field] = isFieldTouched(field) && getFieldError(field);\n      }\n    });\n\n    return (\n      <div id=\"work\">\n        <Element name=\"work\">\n          <div className=\"bold mt40 pb16 fontsize18\">Work</div>\n          <div>\n            <FormItem\n              label={formatMessage(messages.organisationName)}\n              validateStatus={fieldError[ORGANISATION_NAME] ? \"error\" : \"\"}\n              help={fieldError[ORGANISATION_NAME] || \"\"}\n            >\n              {getFieldDecorator(ORGANISATION_NAME, {\n                initialValue: organizationName\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine1)}\n              validateStatus={fieldError[ADDRESSLINE1] ? \"error\" : \"\"}\n              help={fieldError[ADDRESSLINE1] || \"\"}\n            >\n              {getFieldDecorator(ADDRESSLINE1, {\n                initialValue: addressLine1\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.addressLine2)}\n              validateStatus={fieldError[ADRESSLINE2] ? \"error\" : \"\"}\n              help={fieldError[ADRESSLINE2] || \"\"}\n            >\n              {getFieldDecorator(ADRESSLINE2, {\n                initialValue: addressLine2\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <div className={\"mt20\"}>\n            <FormItem\n              label={formatMessage(messages.zipcode)}\n              validateStatus={fieldError[ZIP_CODE] ? \"error\" : \"\"}\n              help={fieldError[ZIP_CODE] || \"\"}\n            >\n              {getFieldDecorator(ZIP_CODE, {\n                initialValue: zipCode\n              })(<Input placeholder=\"\" />)}\n            </FormItem>\n          </div>\n          <CountryCity\n            form={this.props.form}\n            getFieldDecorator={getFieldDecorator}\n            cityLabel={formatMessage(messages.cityLabel)}\n            countryLabel={formatMessage(messages.countryLabel)}\n            city={city}\n            country={country}\n            cityField={CITY}\n            countryField={COUNTRY}\n          />\n        </Element>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(WorkSection);\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { scroller, Link } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"personal\"\n    };\n  }\n\n  scrollToElement = name => {\n    scroller.scrollTo(name, {\n      duration: 1000,\n      delay: 0,\n      smooth: true,\n      offset: -180\n    });\n  };\n\n  setActive = val => {\n    this.setState({ active: val });\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const menu = [\n      { key: formatMessage(messages.personal), value: \"personal\" },\n      { key: formatMessage(messages.work), value: \"work\" },\n      { key: formatMessage(messages.settings), value: \"setting\" }\n    ];\n\n    let menuElement = [];\n    menu.forEach((item, index) => {\n      menuElement.push(\n        <Menu.Item key={item.value}>\n          <Link\n            activeClass={\"active\"}\n            to={item.value}\n            spy={true}\n            isDynamic={false}\n            offset={-180}\n            delay={0}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.scrollToElement(item.value);\n            }}\n            onSetActive={() => {\n              this.setActive(item.value);\n            }}\n          >\n            <div\n              onClick={e => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.scrollToElement(item.value);\n              }}\n            >\n              {item.key}\n            </div>\n          </Link>\n        </Menu.Item>\n      );\n    });\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        className={\"flex align-items-start justify-content-space-between\"}\n        selectedKeys={[this.state.active]}\n        style={{}}\n      >\n        {menuElement}\n      </Menu>\n    );\n  }\n}\n\nexport default injectIntl(MenuBar);\n","import PersonalSection from \"../common/personalSection\";\nimport WorkSection from \"./workSection\";\nimport SettingSection from \"../common/settingSection\";\nimport Menubar from \"./menuBar\";\n\nexport default {\n  PersonalSection,\n  WorkSection,\n  SettingSection,\n  Menubar\n};\n","import React, { Component, Fragment } from \"react\";\nimport { Form, Button, Row, Col } from \"antd\";\nimport forIn from \"lodash-es/forIn\";\nimport DoctorSection from \"../doctor\";\nimport CareCoachSection from \"../careCoach\";\nimport PatientSection from \"../patient\";\nimport ProgramAdminSection from \"../programAdmin\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"./message\";\nimport goBackIcon from \"../../../../../Assets/images/ico-back.svg\";\n//import AppointmentsHistory from \"../../../AppointmentsHistory\";\n\n//fields\nconst EMERGENCY_CONTACT_NAME = \"contacts.emergencyContact.name\";\nconst EMERGENCY_CONTACT_COUNTRY_CODE =\n  \"contacts.emergencyContact.contactNo.countryCode\";\nconst EMERGENCY_CONTACT_PHONE_NUMBER =\n  \"contacts.emergencyContact.contactNo.phoneNumber\";\nconst SPECIALITY = \"work.speciality\";\nconst CITY = \"homeAddress.city\";\nconst COUNTRY = \"homeAddress.country\";\nconst ADDRESSLINE2 = \"homeAddress.addressLine2\";\nconst ZIP_CODE = \"homeAddress.zipCode\";\nconst DOB = \"dob\";\nconst GENDER = \"gender\";\nconst NAME = \"name\";\nconst PHONE_NUMBER = \"contactNo.phoneNumber\";\nconst COUNTRY_CODE = \"contactNo.countryCode\";\n\nconst DOCTOR = \"doctor\";\nconst CARECOACH = \"careCoach\";\nconst PATIENT = \"patient\";\nconst PROGRAMADMIN = \"programAdmin\";\n\nconst WORK_CITY = \"work.officeAddress.city\";\nconst WORK_COUNTRY = \"work.officeAddress.country\";\nconst HOSPITALS = \"hospitals\";\n\nconst REQUIRED_FIELD = {\n  [DOCTOR]: [\n    NAME,\n    COUNTRY,\n    CITY,\n    SPECIALITY,\n    WORK_CITY,\n    WORK_COUNTRY,\n    HOSPITALS\n  ],\n  [CARECOACH]: [\n    NAME,\n    COUNTRY,\n    CITY,\n    PHONE_NUMBER,\n    COUNTRY_CODE,\n    ADDRESSLINE2,\n    ZIP_CODE\n  ],\n  [PATIENT]: [\n    NAME,\n    COUNTRY,\n    CITY,\n    PHONE_NUMBER,\n    COUNTRY_CODE,\n    ADDRESSLINE2,\n    ZIP_CODE,\n    DOB,\n    GENDER,\n    EMERGENCY_CONTACT_COUNTRY_CODE,\n    EMERGENCY_CONTACT_PHONE_NUMBER,\n    EMERGENCY_CONTACT_NAME\n  ],\n  [PROGRAMADMIN]: [NAME, COUNTRY, CITY]\n};\n\nconst SkipAndGotoDashBoard = ({\n  gotoDashBoard,\n  getFieldsError,\n  isProfileCompleted,\n  intl,\n  editingOtherUser\n}) => {\n  const disabled = getFieldsError();\n  const { formatMessage } = intl;\n  return (\n    <div className=\"pull-right\">\n      {!editingOtherUser && isProfileCompleted ? (\n        <Button\n          className=\"iqvia-outline-btn\"\n          onClick={e => {\n            e.preventDefault();\n            gotoDashBoard();\n          }}\n          ghost\n        >\n          {formatMessage(messages.goToDashBoard)}\n        </Button>\n      ) : null}\n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        className=\"ml10 iqvia-primary-btn\"\n        disabled={disabled}\n      >\n        {formatMessage(messages.save)}\n      </Button>\n    </div>\n  );\n};\n\nclass EditForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n    this.hasErrors = this.hasErrors.bind(this);\n  }\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      onSave,\n      form: { validateFields }\n    } = this.props;\n    console.log(\"this.props\", this.props);\n    try {\n      validateFields((err, values) => {\n        console.log(\"err\", err, values);\n        if (!err) {\n          onSave(values);\n        }\n      });\n    } catch (error) {\n      console.log(\"error============>\", error);\n    }\n  };\n\n  hasErrors() {\n    const { getFieldError } = this.props.form;\n    const {\n      basicInfo: { category }\n    } = this.props.userData;\n    const required = REQUIRED_FIELD[category];\n    for (let field in required) {\n      if (getFieldError(required[field])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getMenuBar = category => {\n    let menubar = null;\n    switch (category) {\n      case DOCTOR:\n        menubar = DoctorSection.Menubar;\n        break;\n      case CARECOACH:\n        menubar = CareCoachSection.Menubar;\n        break;\n      case PATIENT:\n        menubar = PatientSection.Menubar;\n        break;\n      case PROGRAMADMIN:\n        menubar = ProgramAdminSection.Menubar;\n        break;\n      default:\n        break;\n    }\n    return menubar;\n  };\n\n  getComponentToShow = category => {\n    let component = null;\n    switch (category) {\n      case DOCTOR: {\n        const { PersonalSection, WorkSection, SettingSection } = DoctorSection;\n        component = (\n          <div>\n            <PersonalSection {...this.props} />\n            <WorkSection {...this.props} />\n            <SettingSection {...this.props} />\n          </div>\n        );\n        break;\n      }\n      case CARECOACH: {\n        const {\n          PersonalSection,\n          WorkSection,\n          SettingSection\n        } = CareCoachSection;\n        component = (\n          <div>\n            <PersonalSection {...this.props} />\n            <WorkSection {...this.props} />\n            {/* <ServiceSection {...this.props} /> */}\n            <SettingSection {...this.props} />\n          </div>\n        );\n        break;\n      }\n\n      case PATIENT: {\n        const {\n          PersonalSection,\n          MedicalSection,\n          ContactSection,\n          SettingSection,\n          InsuranceSections\n        } = PatientSection;\n        component = (\n          <div>\n            <PersonalSection {...this.props} />\n            <InsuranceSections {...this.props} />\n            <ContactSection {...this.props} />\n            <MedicalSection {...this.props} />\n            <SettingSection {...this.props} />\n          </div>\n        );\n        break;\n      }\n\n      case PROGRAMADMIN: {\n        const {\n          PersonalSection,\n          WorkSection,\n          SettingSection\n        } = ProgramAdminSection;\n        component = (\n          <div>\n            <PersonalSection {...this.props} />\n            <WorkSection {...this.props} />\n            <SettingSection {...this.props} />\n          </div>\n        );\n        break;\n      }\n\n      default:\n        break;\n    }\n    return component;\n  };\n\n  setFieldsError = errors => {\n    if (errors) {\n      const { setFields } = this.props.form;\n      let fieldsError = {};\n      forIn(errors, (value, key) => {\n        fieldsError[key] = {\n          value: value.value,\n          errors: [value.msg]\n        };\n      });\n      setFields(fieldsError);\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage, locale },\n      editingOtherUser,\n      handleGoBack\n    } = this.props;\n\n    //\n    // const { getFieldsError } = this.props.form;\n    const { gotoDashBoard, userData } = this.props;\n    const {\n      basicInfo = {},\n      // settings = {},\n      isProfileCompleted = false\n    } = userData;\n    const { category, name } = basicInfo;\n    // const {\n    //   isCalendarSynced = false,\n    //   preferences: {\n    //     smsAlerts = false,\n    //     emailAlerts = false,\n    //     pushAlerts = false,\n    //     reminderAlerts = false\n    //   }\n    // } = settings;\n    const Menubar = this.getMenuBar(category);\n    const Sections = this.getComponentToShow(category);\n    const disabled = this.hasErrors();\n\n    return (\n      <Form id=\"edit-form\" onSubmit={this.handleSubmit}>\n        <Row>\n          <Col xs={0} sm={0} md={0} lg={12} xl={12} xxl={12} className=\"h100\">\n            <Row className={\"fixed_header_sticky h100\"}>\n              <Col\n                xs={0}\n                sm={0}\n                md={0}\n                lg={2}\n                xl={2}\n                xxl={2}\n                className={\"h100\"}\n              >\n                {editingOtherUser ? (\n                  <div\n                    className={\n                      \"flex align-items-center justify-content-start h100 pl20\"\n                    }\n                  >\n                    <img\n                      className={\"mr16 clickable\"}\n                      alt=\"go back\"\n                      src={goBackIcon}\n                      onClick={handleGoBack}\n                    />\n                    <div className=\"fontsize12 dark\">{`Edit ${name}'s Details`}</div>\n                  </div>\n                ) : (\n                  <div\n                    className={\n                      \"flex align-items-center justify-content-start h100 fontsize22 regular pl20\"\n                    }\n                  >\n                    {formatMessage(messages.myProfile)}\n                  </div>\n                )}\n              </Col>\n\n              <Col\n                xs={0}\n                sm={0}\n                md={0}\n                lg={7}\n                xl={7}\n                xxl={7}\n                className={\"h100 menubar\"}\n              >\n                <Menubar />\n              </Col>\n              <Col\n                xs={0}\n                sm={0}\n                md={0}\n                lg={3}\n                xl={3}\n                xxl={3}\n                className={\"h100\"}\n              >\n                <div className=\"pull-right flex align-items-center justify-content-center h100 pr20\">\n                  {!editingOtherUser && isProfileCompleted ? (\n                    <Button\n                      className=\"iqvia-outline-btn\"\n                      ghost\n                      onClick={e => {\n                        e.preventDefault();\n                        gotoDashBoard();\n                      }}\n                    >\n                      {formatMessage(messages.goToDashBoard)}\n                    </Button>\n                  ) : null}\n\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"ml10 iqvia-primary-btn\"\n                    disabled={disabled}\n                  >\n                    {formatMessage(messages.save)}\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <div className=\"flex align-items-center justify-content-center\">\n          <div className=\"main-iqvia-container\">\n            <Row type=\"flex\" justify=\"center\" className=\"pt66\">\n              <Col xs={12} sm={12} md={7} lg={7} xl={7} xxl={7}>\n                <Row>\n                  {!editingOtherUser && (\n                    <Fragment>\n                      <Col span={24}>\n                        <div className=\"fonsize14 mb8\">\n                          {formatMessage(messages.profileSetupText)}\n                        </div>\n                      </Col>\n                      <Col span={24} className={\"mb30\"}>\n                        <div className={\" fontsize 12 subdued\"}>\n                          {formatMessage(messages.subduedProfileSetupText)}\n                        </div>\n                      </Col>\n                      <Col xs={12} sm={12} md={12} lg={0} xl={0} xxl={0}>\n                        <div className={\"fontsize22 pb10 \"}>\n                          {formatMessage(messages.myProfile)}\n                        </div>\n                      </Col>\n                    </Fragment>\n                  )}\n                  <Col className=\"iqvia-form \" span={12}>\n                    {Sections}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </div>\n        <Row\n          className=\"stick-bottom\"\n          style={{ backgroundColor: \"white\", borderTop: \"solid 1px #d4d7d9\" }}\n        >\n          <Col\n            xs={12}\n            sm={12}\n            md={12}\n            lg={0}\n            xl={0}\n            xxl={0}\n            className=\"nav-menu-flex\"\n          >\n            <Menubar />\n          </Col>\n          <Col xs={12} sm={12} md={12} lg={0} xl={0} xxl={0}>\n            <div className={\"pt10 pb10 pr10 pl10 clearfix\"}>\n              <SkipAndGotoDashBoard\n                gotoDashBoard={gotoDashBoard}\n                editingOtherUser={editingOtherUser}\n                getFieldsError={this.hasErrors}\n                category={this.props.userData.category}\n                isProfileCompleted={isProfileCompleted}\n                intl={{ formatMessage, locale }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default injectIntl(EditForm);\n","import { connect } from \"react-redux\";\nimport { clearMsg } from \"../../../modules/successMsg\";\nimport SuccessMsg from \"../../Components/CommonMessage\";\n\nconst mapStateToProps = state => {\n  const {\n    successMsg: { msg }\n  } = state;\n  return {\n    msg\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { close: () => dispatch(clearMsg()) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SuccessMsg);\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  step1: {\n    id: \"app.profile-setup.step1\",\n    description: \"first step\",\n    defaultMessage: \"1. Upload consent form\"\n  },\n  step2: {\n    id: \"app.profile-setup.step2\",\n    description: \"second step\",\n    defaultMessage: \"2. Upload ID Proof\"\n  },\n  step3: {\n    id: \"app.profile-setup.step3\",\n    description: \"third step\",\n    defaultMessage: \"3. Setup Profile\"\n  },\n  consentForm: {\n    id: \"app.profile-setup.consentForm\",\n    description: \"consent form text\",\n    defaultMessage: \"Upload consent form\"\n  },\n  consentFormTitle: {\n    id: \"app.profile-setup.consentForm.title\",\n    description: \"\",\n    defaultMessage:\n      \"Please upload scanned copy of consent form duly signed by you\"\n  },\n  consentFormSubTitle: {\n    id: \"app.profile-setup.consentForm.subtitle\",\n    description: \"\",\n    defaultMessage: \"View/re-upload the same from “profile settings” later\"\n  },\n  idProof: {\n    id: \"app.profile-setup.idProof\",\n    description: \"id proof\",\n    defaultMessage: \"Upload ID Proof\"\n  },\n  idProofTitle: {\n    id: \"app.profile-setup.idProof.title\",\n    description: \"\",\n    defaultMessage: \"Please upload scanned copy of ID proof\"\n  },\n  idProofSubTitle: {\n    id: \"app.profile-setup.idProof.subtitle\",\n    description: \"\",\n    defaultMessage: \"View/re-upload the same from “profile settings” later\"\n  },\n  documentUploadHelp1: {\n    id: \"app.profile-setup.documentUploadHelp1\",\n    description: \"\",\n    defaultMessage: \"Or simpy drag & drop \"\n  },\n  documentUploadHelp2: {\n    id: \"app.profile-setup.documentUploadHelp2\",\n    description: \"\",\n    defaultMessage: \" image files here\"\n  },\n  uploadButton: {\n    id: \"app.profile-setup.uploadButton\",\n    description: \"\",\n    defaultMessage: \"Select one or more files from your computer\"\n  },\n  uploading: {\n    id: \"app.profile-setup.uploading\",\n    description: \"\",\n    defaultMessage: \"Uploading\"\n  }\n});\n","import React from \"react\";\nimport { Steps, Icon } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"./message\";\n\nconst Step = Steps.Step;\nconst circleIcon = <Icon type=\"check-circle\" theme=\"filled\" />;\n\nconst SetUpStep = props => {\n  const {\n    intl: { formatMessage },\n    current,\n    className = \"\"\n  } = props;\n\n  const step1 = (\n    <div className=\"fontsize12\">{formatMessage(messages.step1)}</div>\n  );\n  const step2 = (\n    <div className=\"fontsize12\">{formatMessage(messages.step2)}</div>\n  );\n  const step3 = (\n    <div className=\"fontsize12\">{formatMessage(messages.step3)}</div>\n  );\n  return (\n    <Steps\n      className={`setup-step ${className}`}\n      labelPlacement=\"vertical\"\n      current={current}\n    >\n      <Step title={step1} icon={circleIcon} />\n      <Step title={step2} icon={circleIcon} />\n      <Step title={step3} icon={circleIcon} />\n    </Steps>\n  );\n};\n\nexport default injectIntl(SetUpStep);\n","import SetupStep from \"../../../Components/ProfileSetup/SetUpStep\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  const {\n    page: { profileSetUp }\n  } = state;\n  return {\n    current: profileSetUp.current\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetupStep);\n","import React, { Component } from \"react\";\nimport set from \"lodash-es/set\";\nimport get from \"lodash-es/get\";\nimport forIn from \"lodash-es/forIn\";\nimport { Form, Layout } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport AppHeader from \"../../../Containers/Header\";\nimport EditForm from \"./common/editForm\";\nimport ErrorComponent from \"../../CommonError\";\nimport CommonMessage from \"../../../Containers/CommonSuccessMsg\";\nimport SetUpStep from \"../../../Containers/Page/profileSetup/SetUpStep\";\nimport { path, USER_CATEGORY } from \"../../../../constant\";\nimport \"./style.less\";\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.gotoDashBoard = this.gotoDashBoard.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.EditForm = Form.create()(EditForm);\n    this.gotoMyProfile = this.gotoMyProfile.bind(this);\n    this.state = {};\n    // this.AddPatientForm = Form.create()(AddPatient);\n    // this.AddDoctorForm = Form.create()(AddDoctor);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    if (id) {\n      this.props.getData(id);\n    } else {\n      this.props.getData();\n    }\n  }\n\n  clearMsg = e => {\n    const { clearMsg } = this.props;\n    clearMsg();\n    // e.preventDefault();\n    this.setState({\n      data_save_done: false,\n      success_msg: null\n    });\n  };\n\n  clearError = e => {\n    const { cleanOtpState } = this.props;\n    cleanOtpState();\n    e.preventDefault();\n    this.setState({\n      error_msg: null\n    });\n  };\n\n  onSave(fields) {\n    const { cleanOtpState, user_data = {}, hospitals_data = {} } = this.props;\n    cleanOtpState();\n    let formData = {};\n    const { basicInfo = {} } = user_data;\n    forIn(fields, (value, key) => {\n      set(formData, key, value);\n    });\n    if (basicInfo.category === USER_CATEGORY.DOCTOR) {\n      const hospitalId = get(formData, \"hospitals[0]\", \"\");\n      if (hospitalId !== \"\" && hospitals_data !== {}) {\n        const hospitalName = hospitals_data[hospitalId].name;\n        set(formData, \"work.organizationName\", hospitalName);\n      }\n    }\n    set(formData, \"userId\", basicInfo._id);\n    this.props.updateUser(formData);\n  }\n\n  gotoMyProfile(e) {\n    e.preventDefault();\n    this.props.history.push(path.MY_PROFILE);\n  }\n\n  // openAddPatientModal = e => {\n  //   e.preventDefault();\n  //   this.state.openAddPatient\n  //     ? this.setState({ openAddPatient: false })\n  //     : this.setState({ openAddPatient: true });\n  // };\n\n  // openAddDoctorModal = e => {\n  //   e.preventDefault();\n  //   this.state.openAddDoctor\n  //     ? this.setState({ openAddDoctor: false })\n  //     : this.setState({ openAddDoctor: true });\n  // };\n\n  gotoDashBoard() {\n    this.props.history.push(path.DASHBOARD.HOME);\n  }\n\n  // goToChangePassword = () => {\n  //   this.props.history.push(path.CHANGE_PASSWORD);\n  // };\n\n  setFieldsError = errors => {\n    if (errors) {\n      const { setFields } = this.EditForm;\n      let fieldsError = {};\n      forIn(errors, (value, key) => {\n        fieldsError[key] = {\n          value: value.value,\n          errors: [new Error(\"invalid value for field\")]\n        };\n      });\n      setFields(fieldsError);\n    }\n  };\n\n  handleGoBack = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { match: { params: { id } = {} } = {} } = this.props;\n\n    const {\n      user_data,\n      care_coaches,\n      case_doctors,\n      medicals_data,\n      hospitals_data,\n      //success_msg,\n      is_profile_error,\n      //is_profile_saved,\n      profile_error,\n      isLoading = true\n    } = this.props;\n    if (isLoading) {\n      return <AppHeader />;\n    }\n\n    const { isProfileCompleted } = user_data;\n\n    const { handleGoBack } = this;\n\n    const isSetUpStep = isProfileCompleted;\n    const { EditForm } = this;\n    const { basicInfo = {} } = user_data;\n    const { category } = basicInfo;\n\n    const editingOtherUser = id ? true : false;\n\n    // const menu = (\n    //   <Menu>\n    //     <Menu.Item>\n    //       <a onClick={this.openAddPatientModal}>Add Patient</a>\n    //     </Menu.Item>\n    //     <Menu.Item>\n    //       <a onClick={this.openAddDoctorModal}>Add Doctor</a>\n    //     </Menu.Item>\n    //     <Menu.Item>\n    //       <a onClick={this.gotoMyProfile}>\n    //         {formatMessage(messages.myProfile)}\n    //       </a>\n    //     </Menu.Item>\n    //   </Menu>\n    // );\n    const fieldsError = this.props.error\n      ? this.props.error.fieldError\n        ? this.props.error.fieldsError\n        : null\n      : null;\n\n    return (\n      <Layout\n        className={\"edit_form_page_wrapper\"}\n        style={{ backgroundColor: \"white\" }}\n      >\n        <AppHeader />\n        {/* {this.state.openAddPatient && (\n          <AddPatientForm\n            handleCancel={this.openAddPatientModal}\n            visible={this.state.openAddPatient}\n          />\n        )}\n\n        {this.state.openAddDoctor && (\n          <AddDoctorForm {...this.props} visible={this.state.openAddDoctor} />\n        )} */}\n\n        {!isSetUpStep && category === USER_CATEGORY.PATIENT && (\n          <SetUpStep className=\"iqvia-step\" />\n        )}\n\n        <EditForm\n          {...this.props}\n          userData={user_data}\n          medicalsData={medicals_data}\n          careCoaches={care_coaches}\n          hospitals={hospitals_data}\n          caseDoctors={case_doctors}\n          onSave={this.onSave}\n          gotoDashBoard={this.gotoDashBoard}\n          gotoChangePassword={this.goToChangePassword}\n          customFieldsError={fieldsError}\n          editingOtherUser={editingOtherUser}\n          handleGoBack={handleGoBack}\n        />\n\n        <CommonMessage />\n\n        {is_profile_error && (\n          <ErrorComponent msg={profile_error.message} close={this.clearMsg} />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default injectIntl(EditProfile);\n","import EditProfile from \"../../../Components/page/EditProfile\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { changeProfilePic } from \"../../../../modules/page/changeProfilePic\";\n\nimport {\n  openOtpModal,\n  openProfilePicModal,\n  closeOtpModal,\n  closeProfilePicModal,\n  saveUserData,\n  clearMsg,\n  fetchUser\n} from \"../../../../modules/page/EditProfile\";\n\nimport { open } from \"../../../../modules/modals\";\n\nimport { GLOBAL_MODALS } from \"../../../../constant\";\n\nimport {\n  makeGetUserById,\n  makeGetCareCoaches,\n  makeGetCaseDoctors\n} from \"../../../../modules/user/selector\";\nimport { makeGetMedicalDataOfUser } from \"../../../../modules/medical/selector\";\n\nimport { sendOtp, verifyOtp, reset } from \"../../../../modules/phone\";\nimport { fetchInsuranceData } from \"../../../../modules/insuarnceProvider\";\nimport { fetchHospitals } from \"../../../../modules/hospital\";\n\nconst mapStateToProps = state => {\n  const {\n    users,\n    auth: { authenticated_user: loggedInUser },\n    page: { editProfile },\n    medicals,\n    insuranceProviders,\n    hospitals,\n    clinicalTestTemplates\n  } = state;\n  const getUser = makeGetUserById();\n  const getMedicalData = makeGetMedicalDataOfUser();\n  const getDoctors = makeGetCaseDoctors();\n  const getCareCoaches = makeGetCareCoaches();\n  return {\n    user_data: getUser(users, editProfile.current_user_id),\n    insurance_provider_data: insuranceProviders,\n    hospitals_data: hospitals,\n    medicals_data: getMedicalData(medicals, editProfile.current_user_id),\n    show_otp_modal: editProfile.show_otp_modal,\n    case_doctors: getDoctors(users, editProfile.current_user_id),\n    care_coaches: getCareCoaches(users, editProfile.current_user_id),\n    show_profile_pic_modal: editProfile.show_profile_pic_modal,\n    is_profile_error: editProfile.is_profile_error,\n    is_profile_saved: editProfile.is_profile_saved,\n    profile_error: editProfile.profile_error,\n    success_msg: editProfile.success_msg,\n    isLoading: editProfile.isLoading,\n    clinical_test_templates: clinicalTestTemplates,\n    showPassword: editProfile.current_user_id === loggedInUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearMsg: () => dispatch(clearMsg()),\n    openOtpModal: () => dispatch(openOtpModal()),\n    openProfilePicModal: () => dispatch(openProfilePicModal()),\n    closeOtpModal: () => dispatch(closeOtpModal()),\n    closeProfilePicModal: () => dispatch(closeProfilePicModal()),\n    changeProfilePic: (data, id) => dispatch(changeProfilePic(data, id)),\n    getData: id => dispatch(fetchUser(id)),\n    updateUser: data => dispatch(saveUserData(data)),\n    sendOtp: (data, id) => dispatch(sendOtp(data, id)),\n    verifyOtp: (data, id) => dispatch(verifyOtp(data, id)),\n    getInsuranceProvider: () => dispatch(fetchInsuranceData()),\n    getHospital: (countryId, cityId) =>\n      dispatch(fetchHospitals(countryId, cityId)),\n    cleanOtpState: data => dispatch(reset()),\n    openChangePassword: id => dispatch(open(GLOBAL_MODALS.CHANGE_PASSWORD, id)),\n    openDocumentsVerification: (id, purpose) =>\n      dispatch(open(GLOBAL_MODALS.DOCUMENTS_MODAL, id, purpose))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(EditProfile)\n);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  changePassword: {\n    id: \"app.myprofile.change-password\",\n    description: \"change password\",\n    defaultMessage: \"Change password\"\n  },\n  calendarSync: {\n    id: \"app.myprofile.calendar-sync\",\n    description: \"calendar Sync\",\n    defaultMessage: \"Calendar Sync\"\n  },\n  smsAlerts: {\n    id: \"app.myprofile.sms-alerts\",\n    description: \"sms alerts\",\n    defaultMessage: \"SMS Alerts\"\n  },\n  smsAlertsDetail: {\n    id: \"app.myprofile.sms-alerts-detail\",\n    description: \"sms alerts description\",\n    defaultMessage: \"SMS will be sent to your registered mobile contact\"\n  },\n  emailAlerts: {\n    id: \"app.myprofile.email-alerts\",\n    description: \"email alerts\",\n    defaultMessage: \"Email Alerts\"\n  },\n  emailAlertsDetail: {\n    id: \"app.myprofile.email-alerts-detail\",\n    description: \"email alerts description\",\n    defaultMessage: \"Email will be sent to your registered email address\"\n  },\n  pushAlerts: {\n    id: \"app.myprofile.push-alerts\",\n    description: \"push alerts\",\n    defaultMessage: \"In-app / Push Alerts\"\n  },\n  pushAlertsDetail: {\n    id: \"app.myprofile.push-alerts-detail\",\n    description: \"push alerts description\",\n    defaultMessage: \"These alerts are notified within the RPM web app.\"\n  },\n  reminderAlerts: {\n    id: \"app.myprofile.reminder-alerts\",\n    description: \"reminder alerts\",\n    defaultMessage: \"Reminder Alerts\"\n  },\n  reminderAlertsDetail: {\n    id: \"app.myprofile.reminder-alerts-detail\",\n    description: \"reminder alerts description\",\n    defaultMessage: \"All reminders will be sent via SMS/Email/Calendar\"\n  },\n  nursingTitle: {\n    id: \"app.myprofile.nursing-title\",\n    description: \"nursing title\",\n    defaultMessage: \"Nursing\"\n  },\n  physicalTherapyTitle: {\n    id: \"app.myprofile.physical-therapy-title\",\n    description: \"physical therapy title\",\n    defaultMessage: \"Physical Therapy\"\n  },\n  occupationalTherapyTitle: {\n    id: \"app.myprofile.occupational-therapy-title\",\n    description: \"occupational therapy title\",\n    defaultMessage: \"Occupational Therapy\"\n  },\n  speechAndLanguagePathologyTitle: {\n    id: \"app.myprofile.speech-and-language-pathology-title\",\n    description: \"speech and language pathology title\",\n    defaultMessage: \"Speech and Language Pathology\"\n  },\n  medicalCounsellingTitle: {\n    id: \"app.myprofile.medical-counselling-title\",\n    description: \"medical counselling title\",\n    defaultMessage: \"Medical Counselling\"\n  },\n  healthAideTitle: {\n    id: \"app.myprofile.health-aide-title\",\n    description: \"health aide title\",\n    defaultMessage: \"Health Aide\"\n  },\n  nursing: {\n    id: \"app.myprofile.nursing\",\n    description: \"nursing\",\n    defaultMessage:\n      \"Physical assessments, which include monitoring of vital signs, administer oral and intravenous medications as well as monitoring of cardiac and respiratory status\"\n  },\n  physicalTherapy: {\n    id: \"app.myprofile.physical-therapy\",\n    description: \"physical therapy\",\n    defaultMessage: \"Assist patients to condition muscles and regain strength\"\n  },\n  occupationalTherapy: {\n    id: \"app.myprofile.occupational-therapy\",\n    description: \"occupational therapy\",\n    defaultMessage:\n      \"Assist patients to perform functional skills such as bathing, eating, cooking, and many other skills\"\n  },\n  speechAndLanguagePathology: {\n    id: \"app.myprofile.speech-and-language-pathology\",\n    description: \"speech and language pathology\",\n    defaultMessage:\n      \"Assist patients to regain their ability to speak, swallow, and eat after a stroke or other neurological injuries\"\n  },\n  medicalCounselling: {\n    id: \"app.myprofile.medical-counselling\",\n    description: \"medical counselling\",\n    defaultMessage:\n      \"Assistance with medications, provision of counseling, assistance with financial matters, transportation, and in accessing educational and treatment resources\"\n  },\n  healthAide: {\n    id: \"app.myprofile.health-aide\",\n    description: \"health aide\",\n    defaultMessage:\n      \"Assist patients with their activities of daily living while patients are limited in mobility and strength which includes tasks such as bathing, grooming, and preparing meals\"\n  },\n  cardiacCareTitle: {\n    id: \"app.myprofile.cardiac-care-title\",\n    description: \"cardiac care title\",\n    defaultMessage: \"Cardiac Care\"\n  },\n  diabetesCareTitle: {\n    id: \"app.myprofile.diabetes-care-title\",\n    description: \"diabetes care title\",\n    defaultMessage: \"Diabetes Care\"\n  },\n  smokingCessationTitle: {\n    id: \"app.myprofile.smoking-cessation-title\",\n    description: \"smoking cessation title\",\n    defaultMessage: \"Smoking Cessation\"\n  },\n  respiteCareTitle: {\n    id: \"app.myprofile.respite-care-title\",\n    description: \"respite care title\",\n    defaultMessage: \"Respite Care\"\n  },\n  homemakingTitle: {\n    id: \"app.myprofile.homemaking-title\",\n    description: \"homemaking title\",\n    defaultMessage: \"Homemaking\"\n  },\n  cardiacCare: {\n    id: \"app.myprofile.cardiac-care\",\n    description: \"Cardiac Care\",\n    defaultMessage:\n      \"Assist patients with cardiac disease to manage their disease and to help slow down progression of their disease, monitor the cardiac status, prompt efficient treatment that will prevent re- hospitalization\"\n  },\n  diabetesCare: {\n    id: \"app.myprofile.diabetes-care\",\n    description: \"Diabetes Care\",\n    defaultMessage:\n      \"Assist patient with diabetes and their families in learning to manage their diabetes, educate diet, exercise, self- blood glucose monitoring, and about complications of uncontrolled diabetes\"\n  },\n  smokingCessation: {\n    id: \"app.myprofile.smoking-cessation\",\n    description: \"Smoking Cessation\",\n    defaultMessage: \"Provide nicotine replacement therapy\"\n  },\n  respiteCare: {\n    id: \"app.myprofile.respite-care\",\n    description: \"Respite Care\",\n    defaultMessage:\n      \"Assist patients with Adult Care, Alzheimer’s Care, Hospital Support\"\n  },\n  homemaking: {\n    id: \"app.myprofile.homemaking\",\n    description: \"Homemaking\",\n    defaultMessage:\n      \"Provide patients with daily assistance including meal preparation, housekeeping, laundary & maintaining chores\"\n  },\n  goToDashBoard: {\n    id: \"app.myprofile.go-to-dashboard\",\n    description: \"go to dashboard\",\n    defaultMessage: \"Go to Dashboard\"\n  },\n  edit: {\n    id: \"app.myprofile.edit\",\n    description: \"edit profile button\",\n    defaultMessage: \"Edit Profile\"\n  },\n  myProfile: {\n    id: \"app.myprofile.my-profile\",\n    description: \"my profile\",\n    defaultMessage: \"My Profile\"\n  },\n  personal: {\n    id: \"app.myprofile.personal\",\n    description: \"personal\",\n    defaultMessage: \"Personal\"\n  },\n  email: {\n    id: \"app.myprofile.email\",\n    description: \"email\",\n    defaultMessage: \"Email\"\n  },\n  verified: {\n    id: \"app.myprofile.verified\",\n    description: \"verified\",\n    defaultMessage: \"Verified\"\n  },\n  notVerified: {\n    id: \"app.myprofile.not-verified\",\n    description: \"not verified\",\n    defaultMessage: \"Not Verified\"\n  },\n  mobile: {\n    id: \"app.myprofile.mobile\",\n    description: \"mobile\",\n    defaultMessage: \"Mobile\"\n  },\n  fullName: {\n    id: \"app.myprofile.full-name\",\n    description: \"full name\",\n    defaultMessage: \"Full name\"\n  },\n  dob: {\n    id: \"app.myprofile.dob\",\n    description: \"date of birth\",\n    defaultMessage: \"Date of Birth\"\n  },\n  gender: {\n    id: \"app.myprofile.gender\",\n    description: \"gender\",\n    defaultMessage: \"Gender\"\n  },\n  work: {\n    id: \"app.myprofile.work\",\n    description: \"work\",\n    defaultMessage: \"Work\"\n  },\n  speciality: {\n    id: \"app.myprofile.speciality\",\n    description: \"speciality\",\n    defaultMessage: \"Speciality\"\n  },\n  licenseNumber: {\n    id: \"app.myprofile.license-number\",\n    description: \"license number\",\n    defaultMessage: \"License Number\"\n  },\n  bio: {\n    id: \"app.myprofile.bio\",\n    description: \"bio\",\n    defaultMessage: \"Bio\"\n  },\n  addressLine1: {\n    id: \"app.myprofile.address-line1\",\n    description: \"address line 1\",\n    defaultMessage: \"Flat / House / Floor / Building\"\n  },\n  addressLine2: {\n    id: \"app.myprofile.address-line2\",\n    description: \"address line 2\",\n    defaultMessage: \"Street / Locality / Area\"\n  },\n  zipcode: {\n    id: \"app.myprofile.zipcode\",\n    description: \"zip code\",\n    defaultMessage: \"PO box / Zipcode\"\n  },\n  services: {\n    id: \"app.myprofile.services\",\n    description: \"services\",\n    defaultMessage: \"Services\"\n  },\n  medicalServices: {\n    id: \"app.myprofile.medical-services\",\n    description: \"medical services\",\n    defaultMessage: \"Medical Services\"\n  },\n  homeHealthCare: {\n    id: \"app.myprofile.home-health-care\",\n    description: \"home health care\",\n    defaultMessage: \"Home Health Care\"\n  },\n  specialCare: {\n    id: \"app.myprofile.special-care\",\n    description: \"special care\",\n    defaultMessage: \"Special Care\"\n  },\n  nonMedicalServices: {\n    id: \"app.myprofile.non-medical-services\",\n    description: \"non medical services\",\n    defaultMessage: \"Non-medical Services\"\n  },\n  contacts: {\n    id: \"app.myprofile.contacts\",\n    description: \"contacts\",\n    defaultMessage: \"Contacts\"\n  },\n  caseDoctor: {\n    id: \"app.myprofile.case-doctor\",\n    description: \"case doctor\",\n    defaultMessage: \"Case Doctor\"\n  },\n  careCoach: {\n    id: \"app.myprofile.care-coach\",\n    description: \"care coach\",\n    defaultMessage: \"Care Coach\"\n  },\n  notAssigned: {\n    id: \"app.myprofile.not-assigned\",\n    description: \"not assigned\",\n    defaultMessage: \"Not Assigned\"\n  },\n  relativeName: {\n    id: \"app.myprofile.relative-name\",\n    description: \"relative name\",\n    defaultMessage: \"Relative Name\"\n  },\n  relativeNo: {\n    id: \"app.myprofile.relative-no\",\n    description: \"relative mobile no\",\n    defaultMessage: \"Relative Mobile\"\n  },\n  isEmergencyContactSet: {\n    id: \"app.myprofile.is-emergency-contact-set\",\n    description: \"is emergency contact set\",\n    defaultMessage: \"Contact Relative for Emergency\"\n  },\n  emergencyContactName: {\n    id: \"app.myprofile.emergency-contact-name\",\n    description: \"emergency contact name\",\n    defaultMessage: \"Emergency Contact Name\"\n  },\n  emergencyContactNo: {\n    id: \"app.myprofile.emergency-contact-no\",\n    description: \"emergency contact no\",\n    defaultMessage: \"Emergency Contact Mobile\"\n  },\n  medical: {\n    id: \"app.myprofile.medical\",\n    description: \"medical\",\n    defaultMessage: \"Medical\"\n  },\n  basic: {\n    id: \"app.myprofile.basic\",\n    description: \"basic\",\n    defaultMessage: \"Basic\"\n  },\n  chiefComplaint: {\n    id: \"app.myprofile.chief-complaint\",\n    description: \"chief complaint\",\n    defaultMessage: \"Chief Complaint\"\n  },\n  noAllergies: {\n    id: \"app.myprofile.no-allergies\",\n    description: \"no allergies text\",\n    defaultMessage: \"You have “No Allergies”\"\n  },\n  noSurgeries: {\n    id: \"app.myprofile.no-surgeries\",\n    description: \"no surgeries text\",\n    defaultMessage: \"You have “No surgeries/Fractures”\"\n  },\n  noOtherCondition: {\n    id: \"app.myprofile.no-other-condition\",\n    description: \"no other condition text\",\n    defaultMessage: \"You have mentioned “No Other Conditions”\"\n  },\n  allergies: {\n    id: \"app.myprofile.allergies\",\n    description: \"allergies\",\n    defaultMessage: \"Allergies\"\n  },\n  otherCondition: {\n    id: \"app.myprofile.other-condition\",\n    description: \"other condition\",\n    defaultMessage: \"Other Condition\"\n  },\n  bodyTemperature: {\n    id: \"app.myprofile.body-temperature\",\n    description: \"body temperature\",\n    defaultMessage: \"Body Temperature\"\n  },\n  respirationRate: {\n    id: \"app.myprofile.respiration-rate\",\n    description: \"respiration rate\",\n    defaultMessage: \"Respiration Rate\"\n  },\n  breathePerMinute: {\n    id: \"app.myprofile.breathe-per-minute\",\n    description: \"breathe per minute\",\n    defaultMessage: \"breathe per minute\"\n  },\n  pulseRate: {\n    id: \"app.myprofile.pulse-rate\",\n    description: \"pulse rate\",\n    defaultMessage: \"Pulse Rate\"\n  },\n  bpm: {\n    id: \"app.myprofile.bpm\",\n    description: \"bpm\",\n    defaultMessage: \"bpm\"\n  },\n  bloodPressure: {\n    id: \"app.myprofile.blood-pressure\",\n    description: \"blood pressure\",\n    defaultMessage: \"Blood Pressure\"\n  },\n  bpUnit: {\n    id: \"app.myprofile.bp-unit\",\n    description: \"bp unit\",\n    defaultMessage: \"systolic/diastolic in mmHg\"\n  },\n  clinicalReadings: {\n    id: \"app.myprofile.clinical-readings\",\n    description: \"clinical readings\",\n    defaultMessage: \"Clinical Readings\"\n  },\n  settings: {\n    id: \"app.myprofile.settings\",\n    description: \"settings\",\n    defaultMessage: \"Settings\"\n  },\n  accounts: {\n    id: \"app.myprofile.accounts\",\n    description: \"accounts\",\n    defaultMessage: \"Accounts\"\n  },\n  notifications: {\n    id: \"app.myprofile.notifications\",\n    description: \"notifications\",\n    defaultMessage: \"Notifications\"\n  },\n  consentForm: {\n    id: \"app.edit-profile.settingSection.consentForm\",\n    description: \"\",\n    defaultMessage: \"Consent Form\"\n  },\n  idProof: {\n    id: \"app.edit-profile.settingSection.Idproof\",\n    description: \"\",\n    defaultMessage: \"ID Proof\"\n  },\n  uploadedOn: {\n    id: \"app.edit-profile.settingSection.uploadedOn\",\n    description: \"\",\n    defaultMessage: \"Uploaded on\"\n  },\n  hospital: {\n    id: \"app.edit-profile.contactSection.hospital\",\n    description: \"\",\n    defaultMessage: \"Hospital\"\n  },\n  insurance: {\n    id: \"app.edit-profile.InsuranceSection.insurance\",\n    description: \"\",\n    defaultMessage: \"Insurance\"\n  },\n\n  insuranceProvider: {\n    id: \"app.edit-profile.InsuranceSection.provider\",\n    description: \"\",\n    defaultMessage: \"Medical Insurance Provider\"\n  },\n  insurancePolicy: {\n    id: \"app.edit-profile.InsuranceSection.policy\",\n    description: \"\",\n    defaultMessage: \"Insurance Policy\"\n  },\n  insuranceExpiresOn: {\n    id: \"app.edit-profile.InsuranceSection.validTill\",\n    description: \"\",\n    defaultMessage: \"Valid Till\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport { Button, Col, Row, List } from \"antd\";\nimport moment from \"moment\";\nimport forIn from \"lodash-es/forIn\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport { Element } from \"react-scroll\";\nimport { injectIntl } from \"react-intl\";\n\nimport verifiedIcon from \"../../../../Assets/images/ico-verified.svg\";\nimport notVerifiedIcon from \"../../../../Assets/images/ico-caution.svg\";\nimport placeHolder from \"../../../../Assets/images/ico_placeholder_userdp.png\";\nimport messageIcon from \"../../../../Assets/images/ico-message.svg\";\nimport rightArrow from \"../../../../Assets/images/material-icons-black-arrow-drop-down.png\";\nimport checkBoxTrue from \"../../../../Assets/images/checked-box.svg\";\nimport checkBoxFalse from \"../../../../Assets/images/unchecked-box.svg\";\nimport callIcon from \"../../../../Assets/images/ico-phone.svg\";\n\nimport DoctorSection from \"../EditProfile/doctor\";\nimport CareCoachSection from \"../EditProfile/careCoach\";\nimport PatientSection from \"../EditProfile/patient\";\nimport ProgramAdminSection from \"../EditProfile/programAdmin\";\nimport AppHeader from \"../../../Containers/Header\";\nimport { MobileLabel } from \"../../MobileInput\";\nimport messages from \"./message\";\nimport CommonMessage from \"../../../Containers/CommonSuccessMsg\";\nimport { path } from \"../../../../constant\";\nimport config from \"../../../../config\";\nconst DOCTOR = \"doctor\";\nconst CARECOACH = \"careCoach\";\nconst PATIENT = \"patient\";\nconst PROGRAMADMIN = \"programAdmin\";\nconst CONTENTFORM = \"ContentForm\";\nconst IDPROOF = \"IdProof\";\n\n// const testTemplate = {\n//   ABI_TEST: {\n//     content: {\n//       arm: {\n//         content: {\n//           left: \"Left\",\n//           right: \"Right\",\n//           suffix: \"mmHg\"\n//         },\n//         label: \"Arm\"\n//       },\n//       leftAnkle: {\n//         content: {\n//           pt: \"PT\",\n//           dt: \"DT\",\n//           suffix: \"mmHg\"\n//         },\n//         label: \"Left Ankle\"\n//       },\n//       rightAnkle: {\n//         content: {\n//           pt: \"PT\",\n//           dt: \"DT\",\n//           suffix: \"mmHg\"\n//         },\n//         label: \"Right Ankle\"\n//       },\n//       abiIndex: {\n//         content: {\n//           overAllAbiIndex: \"Over All ABI Index\",\n//           suffix: \"mmHg\"\n//         },\n//         label: \"ABI Index\"\n//       }\n//     },\n//     label: \"ABI Test\"\n//   }\n// };\n\nconst isBlank = data => {\n  return data.length === 0 ? true : false;\n};\n\nconst SkipAndGotoDashBoard = ({ gotoDashBoard, gotoEditProfile, intl }) => {\n  const { formatMessage } = intl;\n  return (\n    <div className=\"pull-right\">\n      <Button\n        className=\"iqvia-outline-btn\"\n        ghost\n        onClick={() => {\n          gotoDashBoard();\n        }}\n      >\n        {formatMessage(messages.goToDashBoard)}\n      </Button>\n      <Button\n        type=\"primary\"\n        className=\"ml10 iqvia-primary-btn\"\n        onClick={gotoEditProfile}\n      >\n        {formatMessage(messages.edit)}\n      </Button>\n    </div>\n  );\n};\n\nconst UPDATEDAT = \"updatedAt\";\n\nclass MyProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testTemplate: {}\n    };\n    this.gotoDashBoard = this.gotoDashBoard.bind(this);\n    this.gotoEditProfile = this.gotoEditProfile.bind(this);\n  }\n\n  componentDidMount() {\n    const { getData } = this.props;\n    getData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.clinicalTestTemplates_data !==\n      prevProps.clinicalTestTemplates_data\n    ) {\n      const {\n        clinicalTestTemplates_data,\n        user_data: { programIds }\n      } = this.props;\n      const { id: programId } = programIds[0];\n\n      this.setState({ testTemplate: clinicalTestTemplates_data[programId] });\n    }\n  }\n\n  gotoDashBoard() {\n    this.props.history.push(path.DASHBOARD.HOME);\n  }\n\n  gotoEditProfile() {\n    this.props.history.push(path.EDIT_PROFILE);\n  }\n\n  openConsentForm = purpose => {\n    // e.preventDefault();\n\n    // this.props.history.push(path.CONSENT_FORM);\n    const {\n      openDocumentsVerification,\n      user_data: {\n        basicInfo: { _id }\n      }\n    } = this.props;\n\n    openDocumentsVerification(_id, purpose);\n  };\n\n  openIdProof = e => {\n    e.preventDefault();\n    this.props.history.push(path.ID_PROOF);\n  };\n\n  getMenuBar = category => {\n    let menubar = null;\n    switch (category) {\n      case DOCTOR:\n        menubar = DoctorSection.Menubar;\n        break;\n      case CARECOACH:\n        menubar = CareCoachSection.Menubar;\n        break;\n      case PATIENT:\n        menubar = PatientSection.Menubar;\n        break;\n      case PROGRAMADMIN:\n        menubar = ProgramAdminSection.Menubar;\n        break;\n      default:\n        break;\n    }\n    return menubar;\n  };\n\n  getTags = (data = []) => {\n    let content = [];\n\n    data.forEach((value, index) => {\n      if (!isBlank(value)) {\n        content.push(\n          <span className=\"iqvia-tag mr8\" key={index}>\n            {value}\n          </span>\n        );\n      }\n    });\n    return content;\n  };\n\n  getInputElement = (currentContext, content) => {\n    let inputs = [];\n\n    //\n    forIn(content, (value, key) => {\n      inputs.push(\n        <div key={key} className=\"mt8\">\n          <div className=\"fontSize12 label-color\">{currentContext[key]}</div>\n          <div className=\"flex baseline mr30\">\n            <span className=\" fontsize16 mr8\">{value}</span>\n            <span className=\" fontsize12 subdued\">{currentContext.suffix}</span>\n          </div>\n        </div>\n      );\n    });\n    return inputs;\n  };\n\n  getReadingAttributeForTest = (currentContext, content) => {\n    let contents = [];\n    // (currentContext, content)\n    forIn(content, (value, key) => {\n      if (key !== UPDATEDAT) {\n        contents.push(\n          <div key={key} className=\"mb20\">\n            <div className=\"fontsize14 medium\">{currentContext[key].label}</div>\n            <div className=\"flex\">\n              {this.getInputElement(currentContext[key].content, value)}\n            </div>\n          </div>\n        );\n      }\n    });\n    return contents;\n  };\n  getClinicalReadings = (data, currentTest) => {\n    let medicalReadings = [];\n    const { testTemplate } = this.state;\n\n    if (testTemplate) {\n      data.forEach((element, index) => {\n        medicalReadings.push(\n          <div key={index} className=\"mt16\">\n            <div\n              className=\"fontsize14 mt10 mb10 \"\n              style={{ fontFamily: \"AvenirNext-Bold\" }}\n            >\n              {testTemplate[currentTest].label}\n            </div>\n            <div>\n              {this.getReadingAttributeForTest(\n                testTemplate[currentTest].content,\n                element\n              )}\n            </div>\n          </div>\n        );\n      });\n    }\n    return medicalReadings;\n  };\n\n  openChangePassword = e => {\n    e.preventDefault();\n    this.props.history.push(\"/change-password\");\n  };\n\n  handleOpenChangePasswordModal = () => {\n    const {\n      openChangePassword,\n      user_data: {\n        basicInfo: { _id }\n      }\n    } = this.props;\n\n    openChangePassword(_id);\n  };\n\n  gotoMyProfile = e => {\n    e.preventDefault();\n    this.props.history.push(\"/my-profile\");\n  };\n\n  render() {\n    const {\n      user_data,\n      isLoading = true,\n      citySelector,\n      countrySelector,\n      care_coaches,\n      case_doctors,\n      hospital_data: hospitals = {},\n      medicals_data: medicalsData = {},\n      insurance_provider_data = {},\n      intl: { formatMessage, locale }\n    } = this.props;\n\n    if (isLoading) {\n      return <div />;\n    }\n    const {\n      basicInfo = {},\n      work = {},\n      settings = {},\n      personalInfo = {},\n      programIds = [],\n      documents = {},\n      insurance: { provider, policy, expiresOn: validTill } = {}\n    } = user_data;\n\n    let expiresOn;\n    if (validTill) {\n      expiresOn = new moment(validTill).format(\"DD/MM/YYYY\");\n    }\n\n    let providerName;\n    if (provider) {\n      const providerData = insurance_provider_data[provider];\n      providerName = providerData.name;\n    }\n\n    const { idProof = [], consentForm = [] } = documents;\n\n    let idProofUploadDate;\n    let consentFormUploadDate;\n    const { uploadedOn: idProofUploadedOn } = idProof[0] || {};\n    const { uploadedOn: consentFormUploadedOn } = consentForm[0] || {};\n\n    if (idProofUploadedOn)\n      idProofUploadDate = new moment(idProofUploadedOn).format(\n        \"DD/MM/YYYY hh:mm A\"\n      );\n    if (consentFormUploadedOn)\n      consentFormUploadDate = new moment(consentFormUploadedOn).format(\n        \"DD/MM/YYYY hh:mm A\"\n      );\n\n    let careCoach = {};\n    let caseDoctor = {};\n    let hospital = {};\n    if (programIds.length > 0) {\n      const {\n        careCoach: careCoachId,\n        doctor: doctorId,\n        hospitalId\n      } = programIds[0];\n      careCoach = care_coaches[careCoachId] || {};\n      caseDoctor = case_doctors[doctorId] || {};\n      hospital = hospitals[hospitalId];\n    }\n\n    // let hospital = {};\n    // if (hospitalId) {\n    //   hospital = hospitals[hospitalId];\n    // }\n\n    const {\n      category,\n      name,\n      //id: currentUserId,\n      profilePicLink = placeHolder\n    } = basicInfo;\n    const {\n      homeAddress = {},\n      contactNo = {},\n      email,\n      dob: DOB,\n      gender\n    } = personalInfo;\n    const {\n      isCalendarSynced = false,\n      preferences: {\n        smsAlerts = false,\n        emailAlerts = false,\n        pushAlerts = false,\n        reminderAlerts = false\n      } = {}\n    } = settings;\n\n    const {\n      organizationName,\n      speciality,\n      officeAddress = {},\n      licenseNumber,\n      about,\n      services: servicesValue = \"\"\n    } = work;\n\n    const {\n      addressLine1: workAddressLine1,\n      addressLine2: workAddressLine2,\n      city: workCity = false,\n      country: workCountry = false,\n      zipCode: workZipCode\n    } = officeAddress;\n\n    const {\n      addressLine1,\n      addressLine2,\n      city = false,\n      country = false,\n      zipCode\n    } = homeAddress;\n\n    const homeCountryName = country ? countrySelector(country) : \"\";\n    const homeCityName = city ? citySelector(country, city) : \"\";\n\n    console.log(\"ajsbfkjashfkjasf\", homeCityName);\n\n    const workCountryName = workCountry ? countrySelector(workCountry) : \"\";\n    const workCityName = workCity ? citySelector(workCountry, workCity) : \"\";\n\n    const Menubar = this.getMenuBar(category);\n\n    const { services = {}, personalInfo: { contacts = {} } = {} } = user_data;\n    const dateOfBirth = moment(DOB);\n\n    let dob = \"\";\n    if (dateOfBirth.isValid()) {\n      const today = moment();\n      const age = today.get(\"year\") - dateOfBirth.get(\"year\");\n      dob = `${dateOfBirth.format(\"DD/MM/YYYY\")}, ${age}  years old`;\n    }\n\n    const { countryCode = \"+91\", phoneNumber = \"\" } = contactNo;\n\n    let accountsContent = [];\n    accountsContent.push(\n      <div\n        key=\"1\"\n        className=\"content-space-between full-width flex align-items-center settings clickable\"\n        onClick={this.handleOpenChangePasswordModal}\n      >\n        <div className=\"fontsize14\">\n          {formatMessage(messages.changePassword)}\n        </div>\n        <img alt=\"\" style={{ marginRight: \"-4px\" }} src={rightArrow} />\n      </div>\n    );\n    if (config.CALENDAR_SYNC === true) {\n      accountsContent.push(\n        <div\n          key=\"2\"\n          className=\"content-space-between full-width flex align-items-center settings\"\n        >\n          <div className=\"fontsize14\">\n            {formatMessage(messages.calendarSync)}\n          </div>\n          <img alt=\"\" src={isCalendarSynced ? checkBoxTrue : checkBoxFalse} />\n        </div>\n      );\n    }\n\n    if (category === PATIENT) {\n      accountsContent.push(\n        <div\n          key=\"3\"\n          onClick={e => this.openConsentForm(CONTENTFORM)}\n          className=\"content-space-between full-width flex align-items-center\"\n        >\n          <div className=\"full-width\">\n            <div>{formatMessage(messages.consentForm)}</div>\n            <div className=\"fontsize12 cool-grey\">{`${formatMessage(\n              messages.uploadedOn\n            )} ${consentFormUploadDate} `}</div>\n          </div>\n          <img alt=\"\" style={{ marginRight: \"-4px\" }} src={rightArrow} />\n        </div>\n      );\n\n      accountsContent.push(\n        <div\n          key=\"4\"\n          onClick={e => this.openConsentForm(IDPROOF)}\n          className=\"content-space-between full-width flex align-items-center\"\n        >\n          <div className=\"full-width\">\n            <div>{formatMessage(messages.idProof)}</div>\n            <div className=\"fontsize12 cool-grey\">{`${formatMessage(\n              messages.uploadedOn\n            )} ${idProofUploadDate} `}</div>\n          </div>\n          <img alt=\"\" style={{ marginRight: \"-4px\" }} src={rightArrow} />\n        </div>\n      );\n    }\n\n    let notificationsContent = [];\n\n    notificationsContent.push(\n      <div key={1} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <div className=\"fontsize14\">{formatMessage(messages.smsAlerts)}</div>\n          <img alt=\"\" src={smsAlerts ? checkBoxTrue : checkBoxFalse} />\n        </div>\n        <div className=\" fontsize12 subdued\">\n          {formatMessage(messages.smsAlertsDetail)}\n        </div>\n      </div>\n    );\n    notificationsContent.push(\n      <div key={2} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <div className=\"fontsize14\" onClick={e => {}}>\n            {formatMessage(messages.emailAlerts)}\n          </div>\n          <img alt=\"\" src={emailAlerts ? checkBoxTrue : checkBoxFalse} />\n        </div>\n        <div className=\" fontsize12 subdued\">\n          {formatMessage(messages.emailAlertsDetail)}\n        </div>\n      </div>\n    );\n    notificationsContent.push(\n      <div key={3} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <p className=\"fontsize14\">{formatMessage(messages.pushAlerts)}</p>\n          <img alt=\"\" src={pushAlerts ? checkBoxTrue : checkBoxFalse} />\n        </div>\n        <div className=\" fontsize12 subdued\">\n          {formatMessage(messages.pushAlertsDetail)}\n        </div>\n      </div>\n    );\n    notificationsContent.push(\n      <div key={4} className=\"full-width\">\n        <div className=\"content-space-between full-width flex align-items-center settings\">\n          <div>{formatMessage(messages.reminderAlerts)}</div>\n          <img alt=\"\" src={reminderAlerts ? checkBoxTrue : checkBoxFalse} />\n        </div>\n        <div className=\"subdued\">\n          {formatMessage(messages.reminderAlertsDetail)}\n        </div>\n      </div>\n    );\n\n    const {\n      homeHealthCare = {},\n      specialCare = {},\n      nonMedicalServices = {}\n    } = services;\n\n    const homeHealthCareServices = [\n      {\n        title: formatMessage(messages.nursingTitle),\n        value: homeHealthCare.nursing || false,\n        subtitle: formatMessage(messages.nursing)\n      },\n      {\n        title: formatMessage(messages.physicalTherapyTitle),\n        value: homeHealthCare.physicalTherapy || false,\n        subtitle: formatMessage(messages.physicalTherapy)\n      },\n      {\n        title: formatMessage(messages.occupationalTherapyTitle),\n        value: homeHealthCare.occupationalTherapy || false,\n        subtitle: formatMessage(messages.occupationalTherapy)\n      },\n      {\n        title: formatMessage(messages.speechAndLanguagePathologyTitle),\n        value: homeHealthCare.speechPathology || false,\n        subtitle: formatMessage(messages.speechAndLanguagePathology)\n      },\n      {\n        title: formatMessage(messages.medicalCounsellingTitle),\n        value: homeHealthCare.medicalCounselling || false,\n        subtitle: formatMessage(messages.medicalCounselling)\n      },\n      {\n        title: formatMessage(messages.healthAideTitle),\n        value: homeHealthCare.healthAide || false,\n        subtitle: formatMessage(messages.healthAide)\n      }\n    ];\n\n    const specialCareValues = [\n      {\n        title: formatMessage(messages.cardiacCareTitle),\n        value: specialCare.cardiacCare || false,\n        subtitle: formatMessage(messages.cardiacCare)\n      },\n      {\n        title: formatMessage(messages.diabetesCareTitle),\n        value: specialCare.diabetesCare || false,\n        subtitle: formatMessage(messages.diabetesCare)\n      },\n      {\n        title: formatMessage(messages.smokingCessationTitle),\n        value: specialCare.smokingCessation || false,\n        subtitle: formatMessage(messages.smokingCessation)\n      }\n    ];\n\n    const nonMedicalService = [\n      {\n        title: formatMessage(messages.respiteCareTitle),\n        value: nonMedicalServices.respiteCare || false,\n        subtitle: formatMessage(messages.respiteCare)\n      },\n      {\n        title: formatMessage(messages.homemakingTitle),\n        value: nonMedicalServices.homeMaking || false,\n        subtitle: formatMessage(messages.homemaking)\n      }\n    ];\n\n    let homeHealthCareServiceContent = [];\n\n    homeHealthCareServices.forEach((data, index) => {\n      homeHealthCareServiceContent.push(\n        <div key={index} className=\"full-width\">\n          <div className=\"content-space-between full-width flex align-items-center settings\">\n            <div className=\"fontsize14\">{data.title}</div>\n            <img alt=\"\" src={data.value ? checkBoxTrue : checkBoxFalse} />\n          </div>\n          <div className=\" fontsize12 subdued\">{data.subtitle}</div>\n        </div>\n      );\n    });\n\n    let specialCareContent = [];\n\n    specialCareValues.forEach((data, index) => {\n      specialCareContent.push(\n        <div key={index} className=\"full-width\">\n          <div className=\"content-space-between full-width flex align-items-center settings\">\n            <div className=\"fontsize14\">{data.title}</div>\n            <img alt=\"\" src={data.value ? checkBoxTrue : checkBoxFalse} />\n          </div>\n          <div className=\" fontsize12 subdued\">{data.subtitle}</div>\n        </div>\n      );\n    });\n\n    const nonMedicalServiceContent = [];\n    nonMedicalService.forEach((data, index) => {\n      nonMedicalServiceContent.push(\n        <div key={index} className=\"full-width\">\n          <div className=\"content-space-between full-width flex align-items-center settings\">\n            <div className=\"fontsize14\">{data.title}</div>\n            <img alt=\"\" src={data.value ? checkBoxTrue : checkBoxFalse} />\n          </div>\n          <div className=\"fontsize12 subdued\">{data.subtitle}</div>\n        </div>\n      );\n    });\n\n    const {\n      relatives = {},\n      emergencyContact = {},\n      useRelativeAsEmergencyContact = false\n    } = contacts;\n\n    const {\n      name: relativeName,\n      contactNo: relativeContactNo = {},\n      relation: relativeRelation\n    } = relatives;\n\n    const {\n      countryCode: relativeCountryCode = \"\",\n      phoneNumber: relativeNo = \"\"\n    } = relativeContactNo;\n\n    const relativePhoneNumber = relativeNo;\n\n    const {\n      name: emergencyContactName,\n      contactNo: emergencyContactNo = {}\n    } = emergencyContact;\n\n    const {\n      countryCode: emergencyCountryCode = \"\",\n      phoneNumber: emergencyNo = \"\"\n    } = emergencyContactNo;\n\n    const emergencyPhoneNumber = emergencyNo;\n    const {\n      basicCondition = {},\n      vitals = {},\n      clinicalReadings = []\n    } = medicalsData;\n    const {\n      chiefComplaint = \"\",\n      allergies = \"\",\n      surgeriesOrFracture = \"\",\n      others = \"\"\n    } = basicCondition;\n    const {\n      temperatureUnit = \"c\",\n      temperature,\n      respirationRate,\n      pulse,\n      bloodPressure\n    } = vitals;\n\n    let temperatureVal = \"\";\n\n    if (temperature) {\n      const val = parseInt(temperature);\n      if (temperatureUnit === \"c\") {\n        temperatureVal =\n          temperature +\n          \"℃ / \" +\n          Math.round(((val * 9) / 5 + 32) * 100) / 100 +\n          \"℉\";\n      } else {\n        temperatureVal =\n          (Math.round(((val - 32) * 5) / 9) * 100) / 100 +\n          \"℃ / \" +\n          temperature +\n          \"℉\";\n      }\n    }\n\n    const testsTakenByPatient = Object.keys(clinicalReadings);\n    const { testTemplate } = this.state;\n\n    // let allTests = clinicalReadings;\n\n    let medicalReadings = [];\n    if (!isEmpty(testTemplate)) {\n      medicalReadings = testsTakenByPatient.map(test => {\n        let allTests = [];\n        allTests.push(clinicalReadings[test].data);\n\n        return this.getClinicalReadings(allTests, test);\n      });\n    }\n    const allergiesTags = this.getTags(allergies.split(\",\"));\n    const surgeriesOrFractureTags = this.getTags(\n      surgeriesOrFracture.split(\",\")\n    );\n    const othersTags = this.getTags(others.split(\",\"));\n    const servicesTags = this.getTags(servicesValue.split(\",\"));\n\n    return (\n      <div id=\"my-profile\">\n        <AppHeader />\n\n        <Row>\n          <Col xs={0} sm={0} md={0} lg={12} xl={12} xxl={12} className=\"h100\">\n            <Row className={\"fixed_header_sticky h100\"}>\n              <Col\n                xs={0}\n                sm={0}\n                md={0}\n                lg={2}\n                xl={2}\n                xxl={2}\n                className={\"h100\"}\n              >\n                <div\n                  className={\n                    \"flex align-items-center justify-content-start h100 fontsize22 regular pl20\"\n                  }\n                >\n                  {formatMessage(messages.myProfile)}\n                </div>\n              </Col>\n              <Col\n                xs={0}\n                sm={0}\n                md={0}\n                lg={7}\n                xl={7}\n                xxl={7}\n                className={\"h100 menubar\"}\n              >\n                <Menubar />\n              </Col>\n              <Col\n                xs={0}\n                sm={0}\n                md={0}\n                lg={3}\n                xl={3}\n                xxl={3}\n                className={\"h100\"}\n              >\n                <div className=\"pull-right flex align-items-center justify-content-center h100 pr20\">\n                  <Button\n                    className=\"iqvia-outline-btn\"\n                    ghost\n                    onClick={this.gotoDashBoard}\n                  >\n                    {formatMessage(messages.goToDashBoard)}\n                  </Button>\n                  <Button\n                    type=\"primary\"\n                    className=\"ml10 iqvia-primary-btn\"\n                    onClick={this.gotoEditProfile}\n                  >\n                    {formatMessage(messages.edit)}\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <div className=\"flex column align-items-center\">\n          <div className=\" main-iqvia-container flex row align-items-center justify-content-center pb-100 my_profile_wrapper \">\n            <Row\n              type=\"flex\"\n              align=\"middle\"\n              justify=\"center\"\n              className=\"full-width\"\n            >\n              <Col\n                xs={12}\n                sm={12}\n                md={7}\n                lg={0}\n                xl={0}\n                xxl={0}\n                className={\"mt30\"}\n              >\n                <div className={\"fontsize22 pb10 \"}>\n                  {formatMessage(messages.myProfile)}\n                </div>\n              </Col>\n              <Col xs={12} sm={12} md={7} lg={7} xl={7} xxl={7}>\n                <div id=\"personal\">\n                  <Element name=\"personal\">\n                    <div className=\"bold pb10 fontsize18\">\n                      {formatMessage(messages.personal)}\n                    </div>\n                    <div\n                      className=\"flex align-items-center justify-content-center relative\"\n                      style={{ margin: \"20px 0\" }}\n                    >\n                      <div\n                        className={\"block br50 relative\"}\n                        style={{ width: \"100px\", height: \"100px\" }}\n                      >\n                        <img\n                          alt=\"\"\n                          src={profilePicLink}\n                          className={\"block w100\"}\n                        />\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"flex\">\n                        <div className=\"mr-10 label-color fontsize12\">\n                          {formatMessage(messages.email)}\n                        </div>\n                        <img\n                          alt=\"\"\n                          style={{ width: \"13px\", marginRight: \"5px\" }}\n                          src={verifiedIcon}\n                        />\n                        <div\n                          className={\"fontsize12\"}\n                          style={{ color: \"#43b02a\" }}\n                        >\n                          {formatMessage(messages.verified)}\n                        </div>\n                      </label>\n                      <div className={\"fontsize16 \"}>{email}</div>\n                    </div>\n\n                    <div className={\"mt16\"}>\n                      <label className=\"flex row align-items-center justify-content-start  mb5\">\n                        <div className=\"mr-10 fontsize12 label-color\">\n                          {formatMessage(messages.mobile)}\n                        </div>\n                        <img\n                          alt=\"\"\n                          style={{ width: \"13px\", marginRight: \"5px\" }}\n                          src={\n                            contactNo.verified === true\n                              ? verifiedIcon\n                              : notVerifiedIcon\n                          }\n                        />\n                        {contactNo.verified === true ? (\n                          <div\n                            className={\"fontsize12\"}\n                            style={{ color: \"#43b02a\" }}\n                          >\n                            {formatMessage(messages.verified)}\n                          </div>\n                        ) : (\n                          <div\n                            className={\"fontsize12\"}\n                            style={{ color: \"#fe8a12\" }}\n                          >\n                            {formatMessage(messages.notVerified)}\n                          </div>\n                        )}\n                      </label>\n\n                      <MobileLabel\n                        countryCode={countryCode}\n                        phoneNumber={phoneNumber}\n                      />\n                    </div>\n                    <div className={\"mt16\"}>\n                      <div className={\"fontsize12 label-color\"}>\n                        {formatMessage(messages.fullName)}\n                      </div>\n                      <div className={\"fontsize16 \"}>{name}</div>\n                    </div>\n\n                    {category === PATIENT && (\n                      <div>\n                        <div className=\"mt16\">\n                          <div className={\"fontsize12 label-color\"}>\n                            {formatMessage(messages.dob)}\n                          </div>\n                          <div className={\"fontsize16 \"}>{dob}</div>\n                        </div>\n\n                        <div className=\"mt16\">\n                          <div className={\"fontsize12 label-color\"}>\n                            {formatMessage(messages.gender)}\n                          </div>\n                          <div className={\"fontsize16 \"}>\n                            {gender === \"M\" ? \"Male\" : \"Female\"}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    <div className={\"mt16\"}>\n                      <div className={\"fontsize12 label-color\"}>\n                        {formatMessage(messages.addressLine1)}\n                      </div>\n                      <div className={\"fontsize16 \"}>{addressLine1}</div>\n                    </div>\n\n                    <div className={\"mt16\"}>\n                      <div className={\"fontsize12 label-color\"}>\n                        {formatMessage(messages.addressLine2)}\n                      </div>\n                      <div className={\"fontsize16 \"}>{addressLine2}</div>\n                    </div>\n                    <div className={\"mt16\"}>\n                      <div className={\"fontsize12 label-color\"}>\n                        {formatMessage(messages.zipcode)}\n                      </div>\n                      <div className={\"fontsize16 \"}>{zipCode}</div>\n                    </div>\n                    <div className={\"mt16\"}>\n                      {city && country && (\n                        <div className={\"fontsize14 medium\"}>\n                          {homeCityName + \", \" + homeCountryName}\n                        </div>\n                      )}\n                    </div>\n                  </Element>\n                </div>\n\n                {category === PATIENT && (\n                  <div id=\"insurance\">\n                    <Element name=\"insurance\">\n                      <div className=\"bold mt40 pb16 fontsize18\">\n                        {formatMessage(messages.insurance)}\n                      </div>\n                      <div className=\"pb16\">\n                        <div className=\"fontsize12 label-color\">\n                          {formatMessage(messages.insuranceProvider)}\n                        </div>\n                        <div className=\"fontsize16 \">{providerName}</div>\n                      </div>\n\n                      <div className=\"pb16\">\n                        <div className=\"fontsize12 label-color\">\n                          {formatMessage(messages.insurancePolicy)}\n                        </div>\n                        <div className=\"fontsize16 \">{policy}</div>\n                      </div>\n\n                      <div className=\"pb16\">\n                        <div className=\"fontsize12 label-color\">\n                          {formatMessage(messages.insuranceExpiresOn)}\n                        </div>\n                        <div className=\"fontsize16 \">{expiresOn}</div>\n                      </div>\n                    </Element>\n                  </div>\n                )}\n\n                {category !== PATIENT && (\n                  <div id=\"work\">\n                    <Element name=\"work\">\n                      <div className=\"bold mt40 pb16 fontsize18\">\n                        {formatMessage(messages.work)}\n                      </div>\n                      <div>\n                        <div className=\"fontsize12 label-color\">\n                          {category === PROGRAMADMIN || category === CARECOACH\n                            ? \"Organisation\"\n                            : \"Hospital\"}\n                        </div>\n                        <div className=\"fontsize16 \">{organizationName}</div>\n                      </div>\n                      {category !== PROGRAMADMIN && (\n                        <div>\n                          <div className={\"mt16\"}>\n                            <div className=\"fontsize12 label-color\">\n                              {formatMessage(messages.speciality)}\n                            </div>\n                            <div className=\"fontsize16 \">{speciality}</div>\n                          </div>\n                          <div className={\"mt16\"}>\n                            <div className=\"fontsize12 label-color\">\n                              {formatMessage(messages.licenseNumber)}\n                            </div>\n                            <div className=\"fontsize16 \">{licenseNumber}</div>\n                          </div>\n                          <div className={\"mt16\"}>\n                            <div className=\"fontsize12 label-color\">\n                              {formatMessage(messages.bio)}\n                            </div>\n                            <p className=\"\">{about}</p>\n                          </div>\n                        </div>\n                      )}\n\n                      {category === CARECOACH && (\n                        <div className=\"mt16\">\n                          <div className=\"fontsize12 label-color\">Services</div>\n                          <div className=\"fontsize14 mt8\">{servicesTags}</div>\n                        </div>\n                      )}\n                      <div className={\"mt16\"}>\n                        <div className={\"fontsize12 label-color\"}>\n                          {formatMessage(messages.addressLine1)}\n                        </div>\n                        <div className={\"fontsize16 \"}>{workAddressLine1}</div>\n                      </div>\n\n                      <div className={\"mt16\"}>\n                        <div className={\"fontsize12 label-color\"}>\n                          {formatMessage(messages.addressLine2)}\n                        </div>\n                        <div className={\"fontsize16 \"}>{workAddressLine2}</div>\n                      </div>\n                      <div className={\"mt16\"}>\n                        <div className={\"fontsize12 label-color\"}>\n                          {formatMessage(messages.zipcode)}\n                        </div>\n                        <div className={\"fontsize16 \"}>{workZipCode}</div>\n                      </div>\n                      <div className={\"mt16\"}>\n                        {workCity && workCountry && (\n                          <div className={\"fontsize14 medium\"}>\n                            {workCityName + \", \" + workCountryName}\n                          </div>\n                        )}\n                      </div>\n                    </Element>\n                  </div>\n                )}\n\n                {/* {category === CARECOACH && (\n                  <div id=\"services\">\n                    <Element name=\"services\">\n                      <div className=\"bold mt40 pb16 fontsize18\">\n                        {formatMessage(messages.services)}\n                      </div>\n\n                      <div className=\"content-space-between mt16\">\n                        <h4>{formatMessage(messages.medicalServices)}</h4>\n                        <img\n                          alt=\"\"\n                          src={medicalServices ? checkBoxTrue : checkBoxFalse}\n                        />\n                      </div>\n\n                      <div className=\"mt16\">\n                        <h5>{formatMessage(messages.homeHealthCare)}</h5>\n                        <List\n                          span={24}\n                          bordered\n                          dataSource={homeHealthCareServiceContent}\n                          renderItem={item => <List.Item>{item}</List.Item>}\n                        />\n                      </div>\n                      <div className=\"mt16\">\n                        <h5>{formatMessage(messages.specialCare)}</h5>\n                        <List\n                          span={24}\n                          bordered\n                          dataSource={specialCareContent}\n                          renderItem={item => <List.Item>{item}</List.Item>}\n                        />\n                      </div>\n                      <div className=\"mt16\">\n                        <h5>{formatMessage(messages.nonMedicalServices)}</h5>\n                        <List\n                          span={24}\n                          bordered\n                          dataSource={nonMedicalServiceContent}\n                          renderItem={item => <List.Item>{item}</List.Item>}\n                        />\n                      </div>\n                    </Element>\n                  </div>\n                )} */}\n\n                {category === PATIENT && (\n                  <div>\n                    <div id=\"contact\">\n                      <Element name=\"contact\">\n                        <div className=\"bold mt40 pb16 fontsize18\">\n                          {formatMessage(messages.contacts)}\n                        </div>\n\n                        <div className=\"mt10\">\n                          <div className={\"mb0 label-color fontsize12\"}>\n                            {formatMessage(messages.caseDoctor)}\n                          </div>\n                          {isEmpty(caseDoctor) ? (\n                            <div className=\"fontsize16 blacks\">\n                              {formatMessage(messages.notAssigned)}\n                            </div>\n                          ) : (\n                            <div className=\"flex row justify-content-space-between align-items-center\">\n                              <div className=\"fontsize16 black\">\n                                {caseDoctor.name}\n                              </div>\n\n                              <div>\n                                <div>\n                                  {/* <img\n                                    alt=\"\"\n                                    className=\"call-message pr4\"\n                                    src={messageIcon}\n                                  />\n                                  <img\n                                    alt=\"\"\n                                    className=\"call-message\"\n                                    src={callIcon}\n                                  /> */}\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"mt10\">\n                          <div>\n                            <div className={\"mb0 label-color fontsize12\"}>\n                              {formatMessage(messages.careCoach)}\n                            </div>\n                            {isEmpty(careCoach) ? (\n                              <div className=\"fontsize16 blacks\">\n                                {formatMessage(messages.notAssigned)}\n                              </div>\n                            ) : (\n                              <div className=\"flex row justify-content-space-between align-items-center\">\n                                <div className=\"fontsize16 black\">\n                                  {careCoach.name}\n                                </div>\n\n                                <div>\n                                  <div>\n                                    {/* <img\n                                      alt=\"\"\n                                      className=\"call-message pr4\"\n                                      src={messageIcon}\n                                    />\n                                    <img\n                                      alt=\"\"\n                                      className=\"call-message\"\n                                      src={callIcon}\n                                    /> */}\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"mt10\">\n                          <div>\n                            <div className={\"mb0 label-color fontsize12\"}>\n                              {formatMessage(messages.hospital)}\n                            </div>\n                            {isEmpty(hospital) ? (\n                              <div className=\"fontsize16 blacks\">\n                                {formatMessage(messages.notAssigned)}\n                              </div>\n                            ) : (\n                              <div className=\"flex row justify-content-space-between align-items-center\">\n                                <div className=\"fontsize16 black\">\n                                  {hospital.name}\n                                </div>\n\n                                <div>\n                                  <div>\n                                    <img\n                                      alt=\"\"\n                                      className=\"call-message pr4\"\n                                      src={messageIcon}\n                                    />\n                                    <img\n                                      alt=\"\"\n                                      className=\"call-message\"\n                                      src={callIcon}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"mt20\">\n                          <div className=\"content-space-between\">\n                            <div className={\"fontsize12 label-color\"}>\n                              {formatMessage(messages.relativeName)}\n                            </div>\n                            <div className=\"fontsize14 dark medium \">\n                              {relativeName && relativeRelation}\n                            </div>\n                          </div>\n                          <div className=\"fontsize16 \">{relativeName}</div>\n                          <div className=\"mt16\">\n                            <div className={\"fontsize12 label-color\"}>\n                              {formatMessage(messages.relativeNo)}\n                            </div>\n                            <div className=\"\">\n                              <MobileLabel\n                                countryCode={relativeCountryCode}\n                                phoneNumber={relativePhoneNumber}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"mt20\">\n                          <div>\n                            <div className=\"content-space-between\">\n                              <div className=\"fontsize14 label-color medium\">\n                                {formatMessage(messages.isEmergencyContactSet)}\n                              </div>\n                              <img\n                                alt=\"\"\n                                src={\n                                  useRelativeAsEmergencyContact\n                                    ? checkBoxTrue\n                                    : checkBoxFalse\n                                }\n                              />\n                            </div>\n                            <div className=\"mt16\">\n                              <div className={\"fontsize12 label-color\"}>\n                                {formatMessage(messages.emergencyContactName)}\n                              </div>\n                              <div className=\"fontsize16 \">\n                                {emergencyContactName}\n                              </div>\n                            </div>\n                            <div className=\"mt16\">\n                              <div className={\"fontsize12 label-color\"}>\n                                {formatMessage(messages.emergencyContactNo)}\n                              </div>\n                              <div className=\"\">\n                                <MobileLabel\n                                  countryCode={emergencyCountryCode}\n                                  phoneNumber={emergencyPhoneNumber}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Element>\n                    </div>\n\n                    <div id=\"medical\">\n                      <Element name=\"medical\">\n                        <div className=\"bold mt40 pb16 fontsize18\">\n                          {formatMessage(messages.medical)}\n                        </div>\n                        <div className=\"fontsize16 medium\">\n                          {formatMessage(messages.basic)}\n                        </div>\n                        <div className=\"mt16\">\n                          <div className=\"mt10\">\n                            <div className={\"fontsize12 label-color\"}>\n                              {formatMessage(messages.chiefComplaint)}\n                            </div>\n                            <div className=\"fontsize16 \">{chiefComplaint}</div>\n                          </div>\n                          <div className=\"mt10\">\n                            {allergiesTags.length === 0 ? (\n                              <div className={\"fontsize14 pt8 label-color\"}>\n                                {formatMessage(messages.noAllergies)}\n                              </div>\n                            ) : (\n                              <div>\n                                <div className={\"fontsize12 label-color\"}>\n                                  {formatMessage(messages.allergies)}\n                                </div>\n\n                                <div className=\"mt16 pb24 \">\n                                  <div className=\"fontsize14\">\n                                    {allergiesTags}\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"mt10\">\n                            {surgeriesOrFractureTags.length === 0 ? (\n                              <div className={\"fontsize14 pt8 label-color\"}>\n                                {formatMessage(messages.noAllergies)}\n                              </div>\n                            ) : (\n                              <div>\n                                <div className={\"fontsize12 label-color\"}>\n                                  {formatMessage(messages.noSurgeries)}\n                                </div>\n\n                                <div className=\"mt16 pb24 \">\n                                  <div className=\"fontsize14\">\n                                    {surgeriesOrFractureTags}\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"mt10\">\n                            {othersTags.length === 0 ? (\n                              <div className={\"fontsize14 pt8 label-color\"}>\n                                {formatMessage(messages.noOtherCondition)}\n                              </div>\n                            ) : (\n                              <div>\n                                <div className={\"fontsize12 label-color\"}>\n                                  {formatMessage(messages.otherCondition)}\n                                </div>\n                                <div className=\"mt16 pb24 \">\n                                  <div className=\"fontsize14\">{othersTags}</div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"mt30\">\n                          <div className=\"fontsize16 medium\">Vital</div>\n                          <div className=\"mt16\">\n                            <div className=\"mt10\">\n                              <div className={\"fontsize12 label-color\"}>\n                                {formatMessage(messages.bodyTemperature)}\n                              </div>\n                              <div className=\"flex baseline \">\n                                <span\n                                  className=\"fontsize16 mr8\"\n                                  style={{ color: \"#ff530d\" }}\n                                >\n                                  {temperatureVal}\n                                </span>\n                              </div>\n                            </div>\n\n                            <div className=\"mt10\">\n                              <div className={\"fontsize12 label-color\"}>\n                                {formatMessage(messages.respirationRate)}\n                              </div>\n                              {respirationRate && (\n                                <div className=\"flex baseline \">\n                                  <span\n                                    className=\"fontsize16 mr8\"\n                                    style={{ color: \"#ff530d\" }}\n                                  >\n                                    {respirationRate}\n                                  </span>\n                                  <span className=\"fontsize12 subdued\">\n                                    {formatMessage(messages.breathePerMinute)}\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n\n                            <div className=\"mt10\">\n                              <div className={\"fontsize12 label-color\"}>\n                                {formatMessage(messages.pulseRate)}\n                              </div>\n                              {pulse && (\n                                <div className=\"flex baseline \">\n                                  <span\n                                    className=\"fontsize16 mr8\"\n                                    style={{ color: \"#ff530d\" }}\n                                  >\n                                    {pulse}\n                                  </span>\n                                  <span className=\"fontsize12 subdued\">\n                                    {formatMessage(messages.bpm)}\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n\n                            <div className=\"mt10\">\n                              <div className={\"fontsize12 label-color\"}>\n                                {formatMessage(messages.bloodPressure)}\n                              </div>\n                              {bloodPressure && (\n                                <div className=\"flex baseline \">\n                                  <span\n                                    className=\"fontsize16 mr8\"\n                                    style={{ color: \"#ff530d\" }}\n                                  >\n                                    {bloodPressure}\n                                  </span>\n                                  <span className=\"fontsize12 subdued\">\n                                    {formatMessage(messages.bpUnit)}\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        {medicalReadings.length > 0 && (\n                          <div className=\"mt30\">\n                            <div className=\"content-space-between bold mt30\">\n                              <div className=\"medium fontsize16\">\n                                {formatMessage(messages.clinicalReadings)}\n                              </div>\n                            </div>\n\n                            <div className=\"mt16\">\n                              <div>{medicalReadings}</div>\n                            </div>\n                          </div>\n                        )}\n                      </Element>\n                    </div>\n                  </div>\n                )}\n\n                <div id=\"setting\" className=\"mb210\">\n                  <Element name=\"setting\">\n                    <div className=\"bold mt40 pb16 fontsize18\">\n                      {formatMessage(messages.settings)}\n                    </div>\n                    <div>\n                      <h4 className=\"medium mt10\">\n                        {formatMessage(messages.accounts)}\n                      </h4>\n                      <List\n                        span={24}\n                        bordered\n                        dataSource={accountsContent}\n                        renderItem={item => <List.Item>{item}</List.Item>}\n                      />\n                    </div>\n                    <div className=\"mt24\">\n                      <h4 className=\"medium\">\n                        {formatMessage(messages.notifications)}\n                      </h4>\n                      <List\n                        span={24}\n                        bordered\n                        dataSource={notificationsContent}\n                        renderItem={item => <List.Item>{item}</List.Item>}\n                      />\n                    </div>\n                  </Element>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </div>\n        <Row\n          className=\"stick-bottom\"\n          style={{ backgroundColor: \"white\", borderTop: \"solid 1px #d4d7d9\" }}\n        >\n          <Col\n            xs={12}\n            sm={12}\n            md={12}\n            lg={0}\n            xl={0}\n            xxl={0}\n            className=\"nav-menu-flex\"\n          >\n            <Menubar />\n          </Col>\n          <Col xs={12} sm={12} md={12} lg={0} xl={0} xxl={0}>\n            <div className={\"pt10 pb10 pr10 pl10 clearfix\"}>\n              <SkipAndGotoDashBoard\n                gotoDashBoard={this.gotoDashBoard}\n                gotoEditProfile={this.gotoEditProfile}\n                intl={{ formatMessage, locale }}\n              />\n            </div>\n          </Col>\n        </Row>\n        <CommonMessage />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(MyProfile);\n","import { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"../../../../modules/page/EditProfile\";\nimport {\n  makeGetUserById,\n  makeGetCareCoaches,\n  makeGetCaseDoctors\n} from \"../../../../modules/user/selector\";\nimport MyProfile from \"../../../Components/page/MyProfile\";\nimport {\n  makeCitySelector,\n  makeCountrySelector\n} from \"../../../../modules/countryCity/selector\";\nimport { makeGetMedicalDataOfUser } from \"../../../../modules/medical/selector\";\n\nimport { open } from \"../../../../modules/modals\";\n\nimport { GLOBAL_MODALS } from \"../../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    users,\n    auth,\n    countryCities,\n    page: { editProfile },\n    medicals,\n    insuranceProviders,\n    hospital,\n    programs,\n    clinicalTestTemplates\n  } = state;\n  const getUser = makeGetUserById();\n  const getCountry = makeCountrySelector();\n  const getCity = makeCitySelector();\n  const getMedicalData = makeGetMedicalDataOfUser();\n  const getDoctors = makeGetCaseDoctors();\n  const getCareCoaches = makeGetCareCoaches();\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    insurance_provider_data: insuranceProviders,\n    hospital_data: hospital,\n    medicals_data: getMedicalData(medicals, auth.authenticated_user),\n    case_doctors: getDoctors(users, auth.authenticated_user),\n    care_coaches: getCareCoaches(users, auth.authenticated_user),\n    countrySelector: id => getCountry(countryCities, id),\n    citySelector: (countryId, cityId) =>\n      getCity(countryCities, countryId, cityId),\n    isLoading: editProfile.isLoading,\n    programs,\n    clinicalTestTemplates_data: clinicalTestTemplates\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => dispatch(fetchUser()),\n    openChangePassword: id => dispatch(open(GLOBAL_MODALS.CHANGE_PASSWORD, id)),\n    openDocumentsVerification: (id, purpose) =>\n      dispatch(open(GLOBAL_MODALS.DOCUMENTS_MODAL, id, purpose))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyProfile)\n);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  allSurveys: {\n    id: \"app.surveyDetail.allSurveys\",\n    description: \"allSurveys in surveyDetail Page\",\n    defaultMessage: \"All Surveys\"\n  },\n  endSurvey: {\n    id: \"app.surveyDetail.endSurvey\",\n    description: \"endSurvey in surveyDetail page\",\n    defaultMessage: \"End Survey\"\n  },\n  downloadReport: {\n    id: \"app.SurveyDetail.downloadReport\",\n    description: \"downloadReport in surveyDetail page\",\n    defaultMessage: \"Download Report\"\n  },\n  sendToMorePatients: {\n    id: \"app.surveyDetail.sendToMorePatients\",\n    description: \"send To More Patients in surveyDetail page\",\n    defaultMessage: \"Send to more Patients\"\n  },\n  survey: {\n    id: \"app.surveyDetail.survey\",\n    description: \"Survey in surveyDetail page\",\n    defaultMessage: \"Survey:\"\n  },\n  sortBy: {\n    id: \"app.surveyDetail.sortBy\",\n    description: \"sortBy in surveyDetail page\",\n    defaultMessage: \"SortBy:\"\n  },\n  name: {\n    id: \"app.surveyDetail.name\",\n    description: \"name in surveyDetail page\",\n    defaultMessage: \"Name\"\n  },\n  surveySentDate: {\n    id: \"app.surveyDetail.surveySentDate\",\n    description: \"surveySentDate in surveyDetail page\",\n    defaultMessage: \"Survey Sent Date\"\n  },\n  sendSurvey: {\n    id: \"app.surveyDetail.sendSurvey\",\n    description: \"sendSurvey in surveyDetail page\",\n    defaultMessage: \"Send Survey\"\n  },\n  patientSelected: {\n    id: \"app.surveyDetail.patientSelected\",\n    description: \"patientSelected in surveyDetail page\",\n    defaultMessage: \"Patient(s) selected\"\n  },\n  result: {\n    id: \"app.surveyDetail.result\",\n    description: \"result in surveyDetail page\",\n    defaultMessage: \"Result\"\n  },\n  previewQuestionnaire: {\n    id: \"app.surveyDetail.previewQuestionnaire\",\n    description: \"Preview Questionnaire in surveyDetail page\",\n    defaultMessage: \"Preview Questionnaire\"\n  }\n});\n\nexport default messages;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component, Fragment } from \"react\";\nimport { Button, Menu, Dropdown, Icon } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport GoBack from \"../../../Assets//images/ico-back.svg\";\nimport multi_select from \"../../../Assets/images/ico-multiselect.png\";\nimport More from \"../../../Assets/images/more_options.svg\";\nimport \"./style.less\";\nimport { doRequest } from \"../../../Helper/network\";\nimport messages from \"./message\";\nimport { Survey } from \"../../../Helper/urls\";\nimport { REQUEST_TYPE, SURVEY_STATUS } from \"../../../constant\";\nconst Json2csvParser = require(\"json2csv\").Parser;\nconst fileDownload = require(\"js-file-download\");\n\nclass SurveyDetailHeader extends Component {\n  downloadReport = () => {\n    const { match: { params: { surveyId } = {} } = {} } = this.props;\n    if (surveyId) {\n      // eslint-disable-next-line no-unused-vars\n      const response = doRequest({\n        method: REQUEST_TYPE.GET,\n        url: Survey.downloadSurveyReport(surveyId)\n      }).then(response => {\n        const { payload: { data = {} } = {} } = response;\n\n        let dataSource = [];\n        let csvHeader = \"\";\n        for (const user in data) {\n          const response = data[user];\n          let columns = [];\n\n          columns.push(\"Patient Name\");\n          let row = [];\n\n          row.push(user);\n          for (let i = 0; i < response.length; i++) {\n            columns.push(\"Q\" + (i + 1));\n            const answer = response[i].response;\n            if (answer.id && answer.value) {\n              row.push(answer.value);\n            } else {\n              row.push(answer);\n            }\n          }\n          dataSource.push({ ...row });\n\n          const columnKeys = columns.map(column => {\n            return column;\n          });\n          csvHeader = new Json2csvParser({\n            fields: columnKeys\n          }).parse();\n        }\n        const csvBody = new Json2csvParser({ header: false }).parse(dataSource);\n        const csv = csvHeader + \"\\n\" + csvBody;\n        fileDownload(csv, `${surveyId}_survey_report.csv`);\n      });\n    }\n  };\n\n  render() {\n    const {\n      handleGoBack,\n      selectedPatient,\n      showSendSurveyBarToggle,\n      handleOnSentSurvey,\n      handleEndSurvey,\n      status = \"\",\n      changeContent,\n      intl: { formatMessage },\n      surveys = {}\n    } = this.props;\n\n    const surveyId = this.props.match.params.surveyId;\n    const { participantsId = {} } = surveys;\n    const completedParticipant = participantsId[surveyId]\n      ? participantsId[surveyId][\"completed\"]\n      : [];\n    const isDownloadValid = completedParticipant.length <= 0 ? true : false;\n    const patientCount = selectedPatient.length;\n\n    const menu =\n      status !== SURVEY_STATUS.COMPLETED ? (\n        <Menu>\n          <Menu.Item\n            key=\"1\"\n            onClick={e => {\n              handleEndSurvey();\n            }}\n          >\n            {formatMessage(messages.endSurvey)}\n          </Menu.Item>\n          <Menu.Item\n            key=\"2\"\n            onClick={this.downloadReport}\n            disabled={isDownloadValid}\n          >\n            {formatMessage(messages.downloadReport)}\n          </Menu.Item>\n        </Menu>\n      ) : (\n        <Menu>\n          <Menu.Item\n            key=\"2\"\n            onClick={this.downloadReport}\n            disabled={isDownloadValid}\n          >\n            {formatMessage(messages.downloadReport)}\n          </Menu.Item>\n        </Menu>\n      );\n    console.log(\"menu\", menu);\n    return (\n      <div className=\"profileHead\">\n        <div className=\"MenuOption\">\n          <Menu\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"Result\"]}\n            className=\"menu-options\"\n          >\n            <Menu.Item className=\"fontsize14 bold\" key=\"Result\">\n              <a onClick={e => changeContent(\"Result\")}>\n                {formatMessage(messages.result)}\n              </a>\n            </Menu.Item>\n            {status !== SURVEY_STATUS.COMPLETED && (\n              <Menu.Item\n                className=\"fontsize14  bold\"\n                key=\"Send to more patients\"\n              >\n                <a onClick={e => changeContent(\"Send to more patients\")}>\n                  {formatMessage(messages.sendToMorePatients)}\n                </a>\n              </Menu.Item>\n            )}\n          </Menu>\n        </div>\n        {patientCount > 0 ? (\n          <div className=\"flex align-items-center justify-content-space-between mt16\">\n            <div className=\"flex align-items-center\">\n              <div\n                className=\"mr10 ml24\"\n                onClick={e => {\n                  showSendSurveyBarToggle(false);\n                }}\n              >\n                <img alt=\"\" src={multi_select} className=\"multiselect\" />\n              </div>\n              <div className=\"mt1\">\n                {patientCount} {formatMessage(messages.patientSelected)}\n              </div>\n            </div>\n            <div className=\"mr24\">\n              <Button\n                type=\"primary\"\n                className=\"iqvia-btn\"\n                onClick={handleOnSentSurvey}\n              >\n                {formatMessage(messages.sendSurvey)}\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <Fragment>\n            <div className=\"flex justify-content-space-between h100\">\n              <div className=\"flex align-items-center ml24\">\n                <img\n                  alt=\"\"\n                  src={GoBack}\n                  className=\"backButton clickable mr8\"\n                  onClick={handleGoBack}\n                />\n                <span className=\"previousLocation\">\n                  {formatMessage(messages.allSurveys)}\n                </span>\n              </div>\n\n              <Dropdown\n                overlay={menu}\n                trigger={[\"click\"]}\n                placement={\"topRight\"}\n              >\n                <div className=\"flex align-items-center justify-content-center mr16 more_options\">\n                  <img src={More} alt={\"moreOptions\"} />\n                </div>\n              </Dropdown>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SurveyDetailHeader);\n","import { Card, Checkbox } from \"antd\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Col from \"antd/es/grid/col\";\nimport defaultProfilePic from \"../../../Assets/images/ico-placeholder-userdp.svg\";\nimport errorIcon from \"../../../Assets/images/ico-err.svg\";\nimport { USER_STATUS, ENTITY } from \"../../../constant\";\nimport \"./style.less\";\n\nclass PatientCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    };\n  }\n\n  onChange = () => {\n    let {\n      showDischargeBarToggle,\n      onPatientCardSelect,\n      onPatientCardDeselect\n    } = this.props;\n    this.setState(\n      prevState => {\n        return { checked: !prevState.checked };\n      },\n      () => {\n        const { checked } = this.state;\n        checked\n          ? onPatientCardSelect(this.props.data.id)\n          : onPatientCardDeselect(this.props.data.id);\n        showDischargeBarToggle();\n      }\n    );\n  };\n\n  isChecked = id => {\n    const { patientDischargedList } = this.props;\n    if (patientDischargedList) {\n      return patientDischargedList.indexOf(id) !== -1;\n    } else if (\n      this.props.selectedPatient &&\n      this.props.selectedPatient.indexOf(id) !== -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  cardClicked = () => {\n    const { data, handleOnClick, surveyId } = this.props;\n    if (surveyId && handleOnClick) {\n      handleOnClick(surveyId, data.id);\n    }\n  };\n\n  openPatient = () => {\n    const { data, handleOnClick } = this.props;\n    if (handleOnClick) {\n      this.props.history.push(`/${ENTITY.PATIENT}/${data.id}`);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.uncheckAll !== this.props.uncheckAll) {\n      if (this.props.uncheckAll) {\n        this.setState({ checked: false });\n      }\n    }\n  }\n\n  render() {\n    const { data, checkbox, disabled, wantCheckBox = true } = this.props;\n    // console.log(\"this.state.checked ----\", this.props.selectedPatient);\n    return (\n      <Col key={this.state.checked} xs={12} sm={12} md={6} lg={6}>\n        <Card\n          className={`m patient-mobile ${\n            data.type &&\n            data.type === USER_STATUS.ENROLLED &&\n            this.state.checked\n              ? \"selected\"\n              : \"\"\n          }`}\n          onClick={this.cardClicked}\n          key={this.state.checked}\n        >\n          <div className=\"\">\n            <div className=\"flex align-items-center\">\n              <img\n                alt=\"\"\n                src={data.profilePicLink || defaultProfilePic}\n                className=\"patientDp mr16\"\n              />\n              <div\n                className={`${\n                  data.type && data.type === USER_STATUS.DISCHARGED\n                    ? \"subdued\"\n                    : \"dark\"\n                } patientInfo clickable`}\n                onClick={this.openPatient}\n              >\n                {data.title\n                  ? data.title.length < 13\n                    ? data.title\n                    : data.title.substr(0, 13) + \"...\"\n                  : \"\"}{\" \"}\n                ({data.age} {data.gender})\n              </div>\n              {data.checkbox && wantCheckBox ? (\n                <div className=\"selectPatient\">\n                  <Checkbox\n                    onChange={this.onChange}\n                    checked={checkbox ? checkbox : this.isChecked(data.id)}\n                    disabled={disabled}\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n              {data.type && data.type === USER_STATUS.INACTIVE ? (\n                <div className=\"selectPatient\">\n                  <img src={errorIcon} alt=\"Patient Not enrolled\" />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div>\n              <ul className=\"patients \">\n                <li>\n                  <span className=\"fontsize12 dark\">{data.doctor}</span>\n                </li>\n                <li>\n                  <span className=\"fontsize12 label-color\">\n                    {data.hospital}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withRouter(PatientCard);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  program: {\n    id: \"app.surveyDetail.program\",\n    description: \"program in surveyDetail Page\",\n    defaultMessage: \"Program\"\n  },\n  surveys: {\n    id: \"app.surveyDetail.surveys\",\n    description: \"surveys in surveyDetail page\",\n    defaultMessage: \"Survey start\"\n  },\n  endDate: {\n    id: \"app.SurveyDetail.endDate\",\n    description: \"end date in surveyDetail page\",\n    defaultMessage: \"End date\"\n  },\n  chooseFrom: {\n    id: \"app.surveyDetail.chooseFrom\",\n    description: \"choose from in surveyDetail page\",\n    defaultMessage: \"Choose from\"\n  },\n  showing: {\n    id: \"app.surveyDetail.showing\",\n    description: \"showing in surveyDetail page\",\n    defaultMessage: \"Showing:\"\n  },\n  sortBy: {\n    id: \"app.surveyDetail.sortBy\",\n    description: \"sortBy in surveyDetail page\",\n    defaultMessage: \"SortBy:\"\n  },\n  all: {\n    id: \"app.surveyDetail.all\",\n    description: \"all in surveyDetail page\",\n    defaultMessage: \"All\"\n  },\n  enrolled: {\n    id: \"app.surveyDetail.enrolled\",\n    description: \"enrolled in surveyDetail page\",\n    defaultMessage: \"Enrolled\"\n  },\n  inactive: {\n    id: \"app.surveyDetail.inactive\",\n    description: \"inactive in surveyDetail page\",\n    defaultMessage: \"Inactive\"\n  },\n  discharged: {\n    id: \"app.surveyDetail.discharged\",\n    description: \"discharged in surveyDetail page\",\n    defaultMessage: \"Discharged\"\n  },\n  name: {\n    id: \"app.surveyDetail.name\",\n    description: \"name in surveyDetail page\",\n    defaultMessage: \"Name\"\n  },\n  location: {\n    id: \"app.surveyDetail.location\",\n    description: \"location in surveyDetail page\",\n    defaultMessage: \"Location\"\n  },\n  dateAdded: {\n    id: \"app.surveyDetail.dateAdded\",\n    description: \"dateAdded in surveyDetail page\",\n    defaultMessage: \"Date Added\"\n  },\n  patientAt: {\n    id: \"app.surveyDetail.patientAt\",\n    description: \"patientAt in surveyDetail page\",\n    defaultMessage: \"patient at\"\n  },\n  programAt: {\n    id: \"app.surveyDetail.programAt\",\n    description: \"programAt in surveyDetail page\",\n    defaultMessage: \"program at\"\n  },\n  programIn: {\n    id: \"app.surveyDetail.programIn\",\n    description: \"programIn in surveyDetail page\",\n    defaultMessage: \"program\"\n  },\n  questionnairePreview: {\n    id: \"app.surveyDetail.questionnairePreview\",\n    description: \"questionnairePreview in surveyDetail page\",\n    defaultMessage: \"Questionnaire Preview\"\n  },\n  questions: {\n    id: \"app.surveyDetail.questions\",\n    description: \"questions in surveyDetail page\",\n    defaultMessage: \"Questions\"\n  },\n  toComplete: {\n    id: \"app.surveyDetail.toComplete\",\n    description: \"toComplete in surveyDetail page\",\n    defaultMessage: \"to complete\"\n  }\n});\n\nexport default messages;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport { Select, DatePicker, Input, Row, Col } from \"antd\";\nimport throttle from \"lodash-es/throttle\";\nimport DownArrow from \"../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport search from \"../../../Assets/images/ico-search.svg\";\nimport PatientCard from \"../Cards/patientCard\";\nimport getPatientCardData from \"../../../Helper/dataFormater/patientCard\";\nimport messages from \"./message\";\n\n// const data = {\n//   id: \"123546\",\n//   profilePicLink: placeholder,\n//   title: \"patient\",\n//   age: \"23\",\n//   gender: \"M\",\n//   doctor: \"Doctor\",\n//   hospital: \"hospital\"\n// };\n\nconst Option = Select.Option;\n\nfunction disabledDate(current) {\n  // Can not select days after today\n  return current && current < moment().endOf(\"day\");\n}\n\nclass PatientPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      patients: [],\n      surveyEndDate: null\n    };\n\n    this.getpatient = throttle(this.getpatient.bind(this), 1000);\n  }\n\n  // componentDidMount(){\n  //   const {\n  //     getValidProgramForSurvey,\n  //   } = this.props;\n  //   const templateId = this.props.match.params.templateId;\n  //   getValidProgramForSurvey(templateId);\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.selectedProgram !== prevProps.selectedProgram) {\n      const { programs_data, selectedProgram } = this.props;\n      const { patients } =\n        selectedProgram !== \"\" ? programs_data[selectedProgram] : [];\n      this.setState({ patients });\n    }\n    if (this.props.selectedsurvey !== prevProps.selectedsurvey) {\n      const { selectedsurvey } = this.props;\n      if (!isEmpty(selectedsurvey)) {\n        const { startDate = null, endDate = null } = selectedsurvey;\n        this.setState({ surveyEndDate: endDate, surveyStartDate: startDate });\n      }\n    }\n    if (this.props.programs_data !== prevProps.programs_data) {\n      const { programs_data, selectedProgram } = this.props;\n      const { patients } =\n        selectedProgram !== \"\" ? programs_data[selectedProgram] : [];\n      this.setState({ patients: patients });\n    }\n  }\n\n  getProgramsOption = () => {\n    const { programs_data, availableProgram, selectedsurvey } = this.props;\n\n    if (isEmpty(selectedsurvey)) {\n      const options = [];\n      if (availableProgram) {\n        availableProgram.forEach(programId => {\n          const { name, expiresOn } = programs_data[programId];\n          const checkIfExpired = moment().diff(expiresOn, \"years\", true);\n          if (checkIfExpired < 0) {\n            options.push(\n              <Option key={programId} value={programId}>\n                {name}\n              </Option>\n            );\n          }\n        });\n      }\n      return options;\n    } else {\n      const { program } = selectedsurvey;\n      const { name } = !isEmpty(programs_data) ? programs_data[program] : {};\n      const option = (\n        <Option key={program} value={program}>\n          {name}\n        </Option>\n      );\n      return option;\n    }\n  };\n\n  handleSearchChange = e => {\n    e.preventDefault();\n    this.setState({ query: e.target.value });\n    this.getpatient(e.target.value);\n  };\n\n  getpatient(query) {\n    const { handleSearch } = this.props;\n    handleSearch(query);\n    // const { programs_data, selectedProgram, selectedsurvey } = this.props;\n    // let currentProgram = selectedProgram;\n    // if (currentProgram !== \"\") {\n    //   if (!isEmpty(selectedsurvey)) {\n    //     const { program = \"\" } = selectedsurvey;\n    //     currentProgram = program;\n    //   }\n    //   const { patients: patientsList = {} } = programs_data[currentProgram];\n    //   let patientData = [];\n    //   const { users } = this.props;\n    //   patientData = patientsList.filter(patient => {\n    //     const { basicInfo } = users[patient];\n    //     const { name } = basicInfo;\n    //     const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n    //     // console.log(\"---name---\", regex,regex.test(name))\n\n    //     if (regex.test(name)) {\n    //       return true;\n    //     }\n    //     return false;\n    //   });\n    //   this.setState({ patients: patientData });\n    // }\n  }\n\n  getProgramPatient = patients => {\n    const patientData = [];\n    const { users, hospitals_data, user_data: currentUser } = this.props;\n    patients.forEach(patient => {\n      let data = {};\n      data = getPatientCardData({\n        users,\n        hospitals: hospitals_data,\n        currentUser,\n        patient: users[patient] ? users[patient] : \"\"\n      });\n      patientData.push(data);\n    });\n    return patientData;\n  };\n\n  getParentNode = t => t.parentNode;\n\n  render() {\n    const {\n      handleOnCheck,\n      handleOnSelect,\n      selectedProgram = \"\",\n      programs_data,\n      handleSelectChange,\n      handleSortByChange,\n      selectedPatient,\n      intl: { formatMessage },\n      uncheckAll,\n      showSendSurveyBarToggle,\n      handleDateChange,\n      selectedsurvey,\n      startDate,\n      endDate\n    } = this.props;\n    // const { patients: patientsList = [] } = programs_data[selectedProgram]\n    //   ? programs_data[selectedProgram]\n    //   : {};\n    const { patients: patientsList = [] } = this.state;\n    const { getProgramsOption, getProgramPatient, handleSearchChange } = this;\n    let surveyStartDate = moment();\n    let surveyEndDate;\n    let surveyPaticipants = [];\n    let surveyProgram = selectedProgram;\n    let programPatients = [];\n    if (!isEmpty(selectedsurvey)) {\n      const { participants = [], program = \"\" } = selectedsurvey;\n\n      surveyPaticipants = participants;\n      surveyProgram = program;\n      let { patients: surveyPatients } = programs_data[program]\n        ? programs_data[program]\n        : [];\n      programPatients = surveyPatients ? getProgramPatient(surveyPatients) : [];\n    }\n    const programOptions = getProgramsOption();\n\n    if (patientsList.length > 0) {\n      surveyStartDate = moment();\n      surveyEndDate = null;\n      programPatients = getProgramPatient(patientsList);\n    }\n    let patientCount = \"\";\n    if (selectedProgram !== \"\") {\n      const { patients } = programs_data[selectedProgram];\n      if (patients) {\n        patientCount = patients.length;\n      }\n    }\n    let programName = \"\";\n    let programCountry = \"\";\n    if (selectedProgram !== \"\") {\n      const currentProgram = programs_data[selectedProgram];\n      if (currentProgram) {\n        const { name, targetLocation = {} } = currentProgram;\n        const { country = \"\" } = targetLocation;\n        programName = name;\n        programCountry = country;\n      }\n    }\n    if (startDate) {\n      surveyStartDate = moment(startDate);\n    }\n    if (endDate) {\n      surveyEndDate = moment(endDate);\n    }\n\n    return (\n      <Fragment>\n        <div className=\"patients-selection\">\n          <Row gutter={{ sm: 24, md: 24 }} className=\"w100\">\n            <Col sm={12} md={6}>\n              <div className=\"w100 mb8\">\n                <div className=\"fontsize12 label-color mb8\">\n                  {formatMessage(messages.program)}\n                </div>\n                <Select\n                  className=\"select-program w100\"\n                  onChange={handleOnSelect}\n                  suffixIcon={\n                    <img\n                      alt=\"\"\n                      src={DownArrow}\n                      className=\"arrow-img-program-select\"\n                    />\n                  }\n                  value={surveyProgram}\n                  disabled={!isEmpty(selectedsurvey)}\n                  getPopupContainer={this.getParentNode}\n                >\n                  {programOptions}\n                </Select>\n              </div>\n            </Col>\n            <Col sm={12} md={6}>\n              <div className=\"flex align-items-center justify-content-center mb8\">\n                <div>\n                  <div className=\"fontsize12 label-color mb8 \">\n                    {formatMessage(messages.surveys)}\n                  </div>\n                  <div className=\"range-picker \">\n                    <DatePicker\n                      format=\"DD/MM/YYYY\"\n                      size={\"small\"}\n                      separator=\"-\"\n                      showToday={false}\n                      className=\"\"\n                      suffixIcon={null}\n                      disabled\n                      defaultValue={moment()}\n                      value={surveyStartDate}\n                      getCalendarContainer={this.getParentNode}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <div className=\"fontsize12 label-color mb8 ml16\">\n                    {formatMessage(messages.endDate)}{\" \"}\n                    <span className=\"warning-color fontsize12\">*</span>\n                  </div>\n                  <div className=\"range-picker ml16\">\n                    <DatePicker\n                      format=\"DD/MM/YYYY\"\n                      size={\"small\"}\n                      separator=\"-\"\n                      showToday={false}\n                      className=\"\"\n                      suffixIcon={null}\n                      allowClear={false}\n                      onChange={handleDateChange}\n                      value={surveyEndDate}\n                      disabledDate={disabledDate}\n                      getCalendarContainer={this.getParentNode}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"mt24 mb16\">\n            {selectedProgram !== \"\" && (\n              <div className=\"fontsize18 bold dark mt24 mb16\">\n                {formatMessage(messages.chooseFrom)} {patientCount}\n                {formatMessage(messages.patientAt)} {programName}\n                {formatMessage(messages.programAt)} {programCountry}\n                {formatMessage(messages.programIn)}\n              </div>\n            )}\n          </div>\n          {/* <div className=\"flex justify-content-center align-items-center flex-wrap\"> */}\n          <Row gutter={{ sm: 12, md: 24 }} className=\"w100\">\n            <Col sm={12} md={4}>\n              <Input\n                className=\"survey-detail-input w100 mb16\"\n                placeholder=\"Search patients\"\n                prefix={<img alt=\"\" src={search} className=\"search-icons\" />}\n                onChange={handleSearchChange}\n              />\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\" survey-detail-select flex align-items-center \">\n                <div className=\"fontsize14 medium dark pl8 \">\n                  {formatMessage(messages.showing)}\n                </div>\n                <Select\n                  optionFilterProp=\"children\"\n                  suffixIcon={\n                    <img alt=\"\" src={DownArrow} className=\"arrow-img\" />\n                  }\n                  defaultValue=\"All\"\n                  className=\"flex align-items-center flex-grow-1\"\n                  onChange={handleSelectChange}\n                  getPopupContainer={this.getParentNode}\n                >\n                  <Option key=\"All\">{formatMessage(messages.all)}</Option>\n                  <Option key=\"Enrolled\">\n                    {formatMessage(messages.enrolled)}\n                  </Option>\n                  {/* <Option key=\"Inactive\">\n                  {formatMessage(messages.inactive)}\n                </Option> */}\n                  <Option key=\"Discharged\">\n                    {formatMessage(messages.discharged)}\n                  </Option>\n                </Select>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\" survey-detail-select flex align-items-center\">\n                <div className=\"fontsize14 medium dark pl8\">\n                  {formatMessage(messages.sortBy)}{\" \"}\n                </div>\n                <Select\n                  optionFilterProp=\"children\"\n                  suffixIcon={\n                    <img alt=\"\" src={DownArrow} className=\"arrow-img\" />\n                  }\n                  onChange={handleSortByChange}\n                  defaultValue=\"name\"\n                  className=\"flex align-items-center flex-grow-1\"\n                  getPopupContainer={this.getParentNode}\n                >\n                  <Option key=\"name\">{formatMessage(messages.name)}</Option>\n                  {/*<Option key=\"Location\">*/}\n                  {/*  {formatMessage(messages.location)}*/}\n                  {/*</Option>*/}\n                  <Option key=\"createdAt\">\n                    {formatMessage(messages.dateAdded)}\n                  </Option>\n                </Select>\n              </div>\n            </Col>\n          </Row>\n          {/* </div> */}\n          <div className=\"the-cards flex align-items-center flex-wrap\">\n            <Row gutter={8} className=\"w100\">\n              {programPatients.map((patient, index) => {\n                let checkbox = false;\n                let disabled = false;\n                if (selectedPatient && selectedPatient.includes(patient.id)) {\n                  checkbox = true;\n                }\n                const particpantIndex = surveyPaticipants.findIndex(\n                  participant => participant.participantId === patient.id\n                );\n                if (particpantIndex !== -1) {\n                  disabled = true;\n                  checkbox = true;\n                }\n                return (\n                  <PatientCard\n                    key={patient.id}\n                    data={patient}\n                    onPatientCardSelect={handleOnCheck}\n                    onPatientCardDeselect={handleOnCheck}\n                    uncheckAll={uncheckAll}\n                    showDischargeBarToggle={showSendSurveyBarToggle}\n                    classname={\"patient-cards\"}\n                    selectedPatient={selectedPatient}\n                    handleOnClick={true}\n                    checkbox={checkbox}\n                    disabled={disabled}\n                  />\n                );\n              })}\n            </Row>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(PatientPane);\n","import React, { Component } from \"react\";\nimport { Input } from \"antd\";\n\nconst { TextArea } = Input;\n\nclass TextReadOnly extends Component {\n  render() {\n    return <TextArea disabled />;\n  }\n}\n\nexport default TextReadOnly;\n","import React, { Component, Fragment } from \"react\";\n\nclass RadioReadOnly extends Component {\n  render() {\n    const { data } = this.props;\n    const { options } = data;\n    return (\n      <Fragment>\n        {options &&\n          options.map(singleOption => {\n            const { id, value } = singleOption;\n            return (\n              <div key={id}>\n                {id}. {value}\n              </div>\n            );\n          })}\n      </Fragment>\n    );\n  }\n}\n\nexport default RadioReadOnly;\n","import React, { Component, Fragment } from \"react\";\n\nclass CheckBoxReadOnly extends Component {\n  render() {\n    const { data } = this.props;\n    const { options } = data;\n    return (\n      <Fragment>\n        {options &&\n          options.map(singleOption => {\n            const { id, value } = singleOption;\n            return (\n              <div key={id}>\n                {id}. {value}\n              </div>\n            );\n          })}\n      </Fragment>\n    );\n  }\n}\n\nexport default CheckBoxReadOnly;\n","import React, { Component } from \"react\";\nimport { Input } from \"antd\";\n\nconst { TextArea } = Input;\n\nclass TextWritable extends Component {\n  render() {\n    const { data, onTextChange } = this.props;\n    const { _id: questionId } = data;\n    return (\n      <TextArea\n        onChange={e => {\n          const value = e.target.value;\n          onTextChange(questionId, value);\n        }}\n      />\n    );\n  }\n}\n\nexport default TextWritable;\n","import React, { Component, Fragment } from \"react\";\nimport { Radio } from \"antd\";\n\nconst RadioGroup = Radio.Group;\nconst RadioButton = Radio.Button;\n\nclass RadioWriteable extends Component {\n  render() {\n    const { data, questionIndex, index, onRadioChange } = this.props;\n    const { options, _id: questionId } = data;\n    return (\n      <Fragment>\n        <RadioGroup\n          className=\"radio-group-tab\"\n          buttonStyle=\"solid\"\n          disabled={index > questionIndex}\n        >\n          {options &&\n            options.map(singleOption => {\n              const { id, value } = singleOption;\n              return (\n                <RadioButton\n                  key={id}\n                  className=\"full-width\"\n                  value={id}\n                  onChange={e => onRadioChange(questionId, id, value)}\n                >\n                  {value}\n                </RadioButton>\n              );\n            })}\n        </RadioGroup>\n      </Fragment>\n    );\n  }\n}\n\nexport default RadioWriteable;\n","import React, { Component, Fragment } from \"react\";\nimport { Checkbox } from \"antd\";\n\nclass CheckBoxWritable extends Component {\n  render() {\n    const { data, index, questionIndex, onCheckboxChange } = this.props;\n    const { options, _id: questionId } = data;\n    return (\n      <Fragment>\n        {options &&\n          options.map(singleOption => {\n            const { id, value } = singleOption;\n            return (\n              <div key={id} className=\"flex align-items-center ml16  mt16 mb16\">\n                <Checkbox\n                  className=\"mr16\"\n                  disabled={index > questionIndex}\n                  onChange={e => onCheckboxChange(questionId, id, value)}\n                />\n                <div className=\"fontsize16 dark\">{value}</div>\n              </div>\n            );\n          })}\n      </Fragment>\n    );\n  }\n}\n\nexport default CheckBoxWritable;\n","import React, { Component } from \"react\";\n\nclass TextResponse extends Component {\n  render() {\n    const { data, patientResponse = {} } = this.props;\n    const { _id: QuestionId } = data;\n    const responseId = Object.keys(patientResponse);\n    const validResponseId = responseId.filter(id => {\n      const Qresposne = patientResponse[id];\n      const { questionId = \"\" } = Qresposne;\n      if (questionId === QuestionId) {\n        return true;\n      }\n      return false;\n    });\n    const questionResponse = patientResponse[validResponseId]\n      ? patientResponse[validResponseId]\n      : {};\n    const { response = \"\" } = questionResponse;\n    return <div>{response}</div>;\n  }\n}\n\nexport default TextResponse;\n","import React, { Component, Fragment } from \"react\";\n\nclass RadioResposne extends Component {\n  render() {\n    const { data, patientResponse = {} } = this.props;\n    const { _id: QuestionId } = data;\n    const responseId = Object.keys(patientResponse);\n    const validResponseId = responseId.filter(id => {\n      const Qresposne = patientResponse[id];\n      const { questionId = \"\" } = Qresposne;\n      if (questionId === QuestionId) {\n        return true;\n      }\n      return false;\n    });\n    const questionResponse = patientResponse[validResponseId]\n      ? patientResponse[validResponseId]\n      : {};\n    const { response = {} } = questionResponse;\n    const { id, value } = response;\n    return (\n      <Fragment>\n        {\n          <div key={id}>\n            {id}. {value}\n          </div>\n        }\n      </Fragment>\n    );\n  }\n}\n\nexport default RadioResposne;\n","import React, { Component, Fragment } from \"react\";\n\nclass CheckBoxResponse extends Component {\n  render() {\n    const { data, patientResponse = {} } = this.props;\n    const { _id: QuestionId } = data;\n    const responseId = Object.keys(patientResponse);\n    const validResponseId = responseId.filter(id => {\n      const Qresposne = patientResponse[id];\n      const { questionId = \"\" } = Qresposne;\n      if (questionId === QuestionId) {\n        return true;\n      }\n      return false;\n    });\n    const questionResponse = patientResponse[validResponseId]\n      ? patientResponse[validResponseId]\n      : {};\n    const { response = [] } = questionResponse;\n\n    return (\n      <Fragment>\n        {response &&\n          response.map(singleOption => {\n            const { id, value } = singleOption;\n            return (\n              <div key={id}>\n                {id}. {value}\n              </div>\n            );\n          })}\n      </Fragment>\n    );\n  }\n}\n\nexport default CheckBoxResponse;\n","import React, { Component, Fragment } from \"react\";\nimport TextReadOnly from \"./text/readOnly\";\nimport RadioReadOnly from \"./radio/readOnly\";\nimport CheckBoxReadOnly from \"./checkbox/readOnly\";\nimport TextWriteable from \"./text/writable\";\nimport RadioWriteable from \"./radio/writable\";\nimport CheckBoxWriteable from \"./checkbox/writable\";\nimport TestResposne from \"./text/response\";\nimport RadioResponse from \"./radio/response\";\nimport ChechboxResposne from \"./checkbox/response\";\nimport { DISPLAY_TYPE, OPTION_TYPE } from \"../../../constant\";\n\nclass Questions extends Component {\n  getOptionComponent = (data, displayType) => {\n    const { type: opitionType } = data;\n    const {\n      index,\n      questionIndex,\n      onTextChange,\n      onCheckboxChange,\n      onRadioChange,\n      patientResponse = {}\n    } = this.props;\n\n    switch (opitionType) {\n      case OPTION_TYPE.TEXT:\n        if (displayType === DISPLAY_TYPE.READONLY) {\n          return <TextReadOnly />;\n        } else if (displayType === DISPLAY_TYPE.WRITABLE) {\n          return <TextWriteable data={data} onTextChange={onTextChange} />;\n        } else {\n          return <TestResposne data={data} patientResponse={patientResponse} />;\n        }\n\n      case OPTION_TYPE.RADIO:\n        if (displayType === DISPLAY_TYPE.READONLY) {\n          return <RadioReadOnly data={data} />;\n        } else if (displayType === DISPLAY_TYPE.WRITABLE) {\n          return (\n            <RadioWriteable\n              data={data}\n              index={index}\n              questionIndex={questionIndex}\n              onRadioChange={onRadioChange}\n            />\n          );\n        } else {\n          return (\n            <RadioResponse data={data} patientResponse={patientResponse} />\n          );\n        }\n\n      case OPTION_TYPE.CHECKBOX:\n        if (displayType === DISPLAY_TYPE.READONLY) {\n          return <CheckBoxReadOnly data={data} />;\n        } else if (displayType === DISPLAY_TYPE.WRITABLE) {\n          return (\n            <CheckBoxWriteable\n              data={data}\n              index={index}\n              questionIndex={questionIndex}\n              onCheckboxChange={onCheckboxChange}\n            />\n          );\n        } else {\n          return (\n            <ChechboxResposne data={data} patientResponse={patientResponse} />\n          );\n        }\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { data = {}, index, displayType } = this.props;\n    const { getOptionComponent } = this;\n    const { statement, type } = data;\n    const OptionComponent = getOptionComponent(data, displayType);\n    return (\n      <Fragment>\n        <div className=\"\">\n          <div\n            className={\n              displayType === DISPLAY_TYPE.WRITABLE\n                ? `fontsize22 dark mb8`\n                : `fontsize14 dark bold`\n            }\n          >\n            Q{index + 1}. {statement}{\" \"}\n          </div>\n          <span>\n            {type === OPTION_TYPE.CHECKBOX &&\n              displayType === DISPLAY_TYPE.READONLY &&\n              \"Check all that apply\"}\n            {type === OPTION_TYPE.CHECKBOX &&\n              displayType === DISPLAY_TYPE.RESPONSE &&\n              \"Check all that apply\"}\n          </span>\n        </div>\n        <div className=\"fontsize16 label-color\">\n          {type === OPTION_TYPE.CHECKBOX &&\n            displayType === DISPLAY_TYPE.WRITABLE &&\n            \"You can select multiple choices\"}\n        </div>\n        <div\n          className={\n            displayType === DISPLAY_TYPE.RESPONSE ? `mb16  mt24` : ` mb16`\n          }\n        >\n          {OptionComponent}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Questions;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport Questions from \"../Question\";\nimport messages from \"./message\";\n\nclass SurveyPane extends Component {\n  componentDidMount() {\n    const { fetchSurveyTemplates } = this.props;\n    fetchSurveyTemplates();\n  }\n\n  render() {\n    const {\n      surveytemplateId,\n      questions: surveyQuestion,\n      surveytemplates = [],\n      intl: { formatMessage }\n    } = this.props;\n    let questionsId = [];\n    let surveyDescription = \"\";\n    let timeToComplete = 0;\n    if (surveytemplates[surveytemplateId]) {\n      const { questions, description, time_to_complete } = surveytemplates[\n        surveytemplateId\n      ];\n      questionsId = questions;\n      surveyDescription = description;\n      timeToComplete = time_to_complete;\n    }\n    return (\n      <Fragment>\n        <div className=\"survey-content\">\n          <div className=\"fontsize18 bold dark \">\n            {formatMessage(messages.questionnairePreview)}\n          </div>\n          <div className=\"fonstsize12 dark mb8\">\n            {questionsId.length} {formatMessage(messages.questions)} •{\" \"}\n            {timeToComplete} {formatMessage(messages.toComplete)}\n          </div>\n          <div className=\"fontsize14 dark mb24\">{surveyDescription}</div>\n          {!isEmpty(surveyQuestion) &&\n            surveyQuestion.map((question, index) => {\n              const { _id } = question;\n              return (\n                <Fragment key={_id}>\n                  <Questions\n                    data={question}\n                    displayType={\"readonly\"}\n                    index={index}\n                  />\n                </Fragment>\n              );\n            })}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(SurveyPane);\n","import React, { Component, Fragment } from \"react\";\nimport { Row, Col } from \"antd\";\nimport PatientPane from \"../SurveyTabs/patientPane\";\nimport SurveyPane from \"../SurveyTabs/surveyPane\";\n\nclass SendToMorePatient extends Component {\n  render() {\n    const {\n      surveytemplateId,\n      handleOnCheck,\n      handleOnSelect,\n      selectedProgram,\n      handleSelectChange,\n      handleSortByChange,\n      selectedPatient,\n      uncheckAll,\n      showSendSurveyBarToggle,\n      surveys,\n      surveyId,\n      endDate,\n      startDate\n    } = this.props;\n    return (\n      <Fragment>\n        <PatientPane\n          handleOnCheck={handleOnCheck}\n          handleOnSelect={handleOnSelect}\n          {...this.props}\n          selectedProgram={selectedProgram}\n          handleSelectChange={handleSelectChange}\n          handleSortByChange={handleSortByChange}\n          selectedPatient={selectedPatient}\n          uncheckAll={uncheckAll}\n          showSendSurveyBarToggle={showSendSurveyBarToggle}\n          handleRangeChange={showSendSurveyBarToggle}\n          selectedsurvey={surveys[surveyId] ? surveys[surveyId] : {}}\n          startDate={startDate}\n          endDate={endDate}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default SendToMorePatient;\n","import React, { Component } from \"react\";\nimport { Row } from \"antd\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport getPatientCardData from \"../../../Helper/dataFormater/patientCard\";\nimport PatientCard from \"../Cards/patientCard\";\n\nclass PatientCompletedSurvey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    const { fetchPaticipantForSurveyBasedOnStatus } = this.props;\n    const surveyId = this.props.match.params.surveyId;\n    this.setState({ surveyId: surveyId });\n    fetchPaticipantForSurveyBasedOnStatus(surveyId, \"COMPLETED\");\n  }\n\n  render() {\n    const {\n      users,\n      completedParticipant,\n      user_data: currentUser,\n      hospital: hospitals_data,\n      handleOnClick\n    } = this.props;\n    const { surveyId } = this.state;\n    let data = [];\n    if (users && !isEmpty(users) && completedParticipant) {\n      completedParticipant.forEach(participant => {\n        let obj = {};\n        obj = getPatientCardData({\n          users,\n          hospitals_data,\n          currentUser,\n          patient: users[participant]\n        });\n        data.push(obj);\n      });\n    }\n    return (\n      <div className=\"flex align-items-center flex-wrap inprogress-participants w100\">\n        <Row gutter={8} className=\"w100\">\n          {data.map(patient => {\n            return (\n              <PatientCard\n                key={patient.id}\n                data={patient}\n                surveyId={surveyId}\n                handleOnClick={handleOnClick}\n                wantCheckBox={false}\n              />\n            );\n          })}{\" \"}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default PatientCompletedSurvey;\n","import React, { Component } from \"react\";\nimport { Row } from \"antd\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport getPatientCardData from \"../../../Helper/dataFormater/patientCard\";\nimport PatientCard from \"../Cards/patientCard\";\nimport \"./style.less\";\n\nclass PatientInprogressSurvey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    const { fetchPaticipantForSurveyBasedOnStatus } = this.props;\n    const surveyId = this.props.match.params.surveyId;\n    this.setState({ surveyId: surveyId });\n    fetchPaticipantForSurveyBasedOnStatus(surveyId, \"INPROGRESS\");\n  }\n  render() {\n    const {\n      users,\n      inprogressParticipant,\n      user_data: currentUser,\n      hospitals_data\n    } = this.props;\n    const { surveyId } = this.state;\n    let data = [];\n    if (users && !isEmpty(users) && inprogressParticipant) {\n      inprogressParticipant.forEach(participant => {\n        let obj = {};\n        obj = getPatientCardData({\n          users,\n          hospitals: hospitals_data,\n          currentUser,\n          patient: users[participant]\n        });\n        data.push(obj);\n      });\n    }\n    return (\n      <div className=\"flex align-items-center flex-wrap inprogress-participants w100\">\n        <Row gutter={8} className=\"w100\">\n          {data.map(patient => {\n            return (\n              <PatientCard\n                key={patient.id}\n                data={patient}\n                surveyId={surveyId}\n                wantCheckBox={false}\n              />\n            );\n          })}{\" \"}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default PatientInprogressSurvey;\n","import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Input, Select, Tabs } from \"antd\";\nimport moment from \"moment\";\nimport { injectIntl } from \"react-intl\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport DownArrow from \"../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport search from \"../../../Assets/images/ico-search.svg\";\nimport PatientCompletedSurvey from \"./patientCompleted\";\nimport PatientInprogressSurvey from \"./patientInprogress\";\nimport { ALL_SORT_BY } from \"../../../constant\";\nimport messages from \"./message\";\nimport \"./style.less\";\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nclass Result extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completed: [],\n      inprogress: [],\n      query: \"\",\n      patientStatus: \"Completed\",\n      sortBy: \"Name\"\n    };\n  }\n  componentDidMount() {}\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.surveys !== prevProps.surveys) {\n      const surveyId = this.props.match.params.surveyId;\n      const { surveys, patientStatus } = this.props;\n      const { participantsId = {} } = surveys;\n      const completedParticipant = participantsId[surveyId]\n        ? participantsId[surveyId][\"completed\"]\n        : [];\n      const inprogressParticipant = participantsId[surveyId]\n        ? participantsId[surveyId][\"inprogress\"]\n        : [];\n      this.setState(\n        {\n          completed: completedParticipant,\n          inprogress: inprogressParticipant,\n          patientStatus: patientStatus\n        },\n        () => {\n          this.sortParticipantsBy(\"Name\");\n        }\n      );\n    }\n  }\n\n  handleOnClick = (surveyId, participantsId) => {\n    this.props.history.replace(\n      `/survey/${surveyId}/participant/${participantsId}/response`\n    );\n  };\n  handleSearchChange = e => {\n    this.setState({ query: e.target.value });\n    this.getCompletedParticipants(e.target.value);\n    this.getCompletedParticipants(e.target.value);\n    this.getInprogressParticipants(e.target.value);\n  };\n\n  getCompletedParticipants(query) {\n    //\n    const surveyId = this.props.match.params.surveyId;\n    const { surveys, users } = this.props;\n    const { participantsId = {} } = surveys;\n\n    const completedParticipant = participantsId[surveyId]\n      ? participantsId[surveyId][\"completed\"]\n      : [];\n    let surveyData = [];\n    surveyData = completedParticipant.filter(id => {\n      const { basicInfo: { name = \"\" } = {} } = users[id];\n      const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n      // console.log(\"---name---\", regex,regex.test(name))\n      if (regex.test(name)) {\n        return true;\n      }\n      return false;\n    });\n    this.setState({ completed: surveyData });\n  }\n\n  getInprogressParticipants(query) {\n    //\n    const surveyId = this.props.match.params.surveyId;\n    const { surveys, users } = this.props;\n    const { participantsId = {} } = surveys;\n\n    const inprogressParticipant = participantsId[surveyId]\n      ? participantsId[surveyId][\"inprogress\"]\n      : [];\n    let surveyData = [];\n    surveyData = inprogressParticipant.filter(id => {\n      const { basicInfo: { name = \"\" } = {} } = users[id];\n      const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n      // console.log(\"---name---\", regex,regex.test(name))\n\n      if (regex.test(name)) {\n        return true;\n      }\n      return false;\n    });\n    this.setState({ inprogress: surveyData });\n  }\n\n  handleSortByChange = key => {\n    this.setState({ sortBy: key }, () => {\n      this.sortParticipantsBy(key);\n    });\n  };\n\n  sortByDate = (surveyParticipantsId = []) => {\n    const surveyId = this.props.match.params.surveyId;\n    const { surveys } = this.props;\n    const { participants } = surveys[surveyId] || {};\n    return surveyParticipantsId.sort((a, b) => {\n      const Aindex = participants.findIndex(particpant => {\n        const { participantId } = particpant;\n        if (participantId === a) {\n          return true;\n        }\n        return false;\n      });\n      const Bindex = participants.findIndex(particpant => {\n        const { participantId } = particpant;\n        if (participantId === b) {\n          return true;\n        }\n        return false;\n      });\n      const Aparticipnants = participants[Aindex] || {};\n      const Bparticipants = participants[Bindex] || {};\n\n      const { surveySentDate: AsurveySentDate } = Aparticipnants;\n      const { surveySentDate: BsurveySentDate } = Bparticipants;\n\n      if (AsurveySentDate < BsurveySentDate) {\n        return 1;\n      }\n      if (AsurveySentDate > BsurveySentDate) {\n        return -1;\n      }\n      return 0;\n    });\n  };\n\n  sortByName = (surveyParticipantsId = []) => {\n    const { users = {} } = this.props;\n    return surveyParticipantsId.sort((a, b) => {\n      const { basicInfo: { name: Aname = \"\" } = {} } = users[a] || {};\n      const { basicInfo: { name: Bname = \"\" } = {} } = users[b] || {};\n      if (Aname.toLowerCase() < Bname.toLowerCase()) {\n        return -1;\n      }\n      if (Aname.toLowerCase() > Bname.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  sortParticipantsBy = sortBy => {\n    const {\n      inprogress: inprogressParticipant = [],\n      completed: completedParticipant = []\n    } = this.state;\n    switch (sortBy) {\n      case ALL_SORT_BY.NAME: {\n        this.setState({\n          inprogress: this.sortByName(inprogressParticipant),\n          completed: this.sortByName(completedParticipant)\n        });\n        break;\n      }\n      case \"Survey Sent Date\": {\n        this.setState({\n          inprogress: this.sortByDate(inprogressParticipant),\n          completed: this.sortByDate(completedParticipant)\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      changeStatus,\n      surveys,\n      intl: { formatMessage },\n      programs_data = {},\n      selectedProgram\n    } = this.props;\n    const { handleOnClick, handleSearchChange, handleSortByChange } = this;\n    const { completed = [], inprogress = [] } = this.state;\n    const surveyId = this.props.match.params.surveyId;\n    const selectedSurvey = surveys[surveyId] || {};\n    const { updatedAt } = selectedSurvey;\n    const lastSentDate = moment(updatedAt).format(\"DD/MM/YYYY\");\n    const lastSentTime = moment(updatedAt).format(\"LT\");\n\n    const completedParticipant = completed;\n    const inprogressParticipant = inprogress;\n\n    // const completedLength = completedParticipant\n    //   ? completedParticipant.length\n    //   : 0;\n    const completedLength = completed.length;\n    const inprogressLength = inprogress.length;\n    const totalParticipants = completedLength + inprogressLength;\n    let programName = \"\";\n    if (!isEmpty(programs_data)) {\n      const { name } = programs_data[selectedProgram] || {};\n      programName = name;\n    }\n\n    return (\n      <Fragment>\n        <div className=\"result-completed p16 w100\">\n          <Row>\n            <div className=\"survey-header w100\">\n              <div className=\" mt24 fontsize18 dark bold\">\n                {`Results for ${totalParticipants} patients of “${programName} at Dubai” program`}\n              </div>\n              <div className=\"fontsize12 label-color mt8 mb16\">\n                Last sent on {lastSentDate}, {lastSentTime}\n              </div>\n              <Row gutter={{ sm: 12, md: 24 }}>\n                <Col sm={12} md={6}>\n                  <Input\n                    className=\"survey-input mb12\"\n                    placeholder=\"Search participants\"\n                    prefix={\n                      <img alt=\"\" src={search} className=\"search-icons mr16\" />\n                    }\n                    onChange={handleSearchChange}\n                  />\n                </Col>\n                <Col sm={12} md={6}>\n                  <div className=\"sortBy flex align-items-center\">\n                    <div className=\"fontsize14 bold dark pl8 \">\n                      {formatMessage(messages.sortBy)}\n                    </div>\n                    <Select\n                      optionFilterProp=\"children\"\n                      suffixIcon={\n                        <img alt=\"\" src={DownArrow} className=\"arrow-img\" />\n                      }\n                      defaultValue={formatMessage(messages.name)}\n                      className=\"flex align-items-center flex-grow-1\"\n                      onChange={handleSortByChange}\n                    >\n                      <Option key={formatMessage(messages.surveySentDate)}>\n                        {formatMessage(messages.surveySentDate)}\n                      </Option>\n                      <Option key={formatMessage(messages.name)}>\n                        {formatMessage(messages.name)}\n                      </Option>\n                    </Select>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </Row>\n          <Row className=\"result-content\">\n            <Tabs\n              className={\"tabstitle fontsize14 w100\"}\n              // defaultActiveKey=\"1\"\n              tabBarStyle={{\n                color: \"#7f888d\",\n                fontFamily: \"AvenirNext-Medium\"\n              }}\n              onChange={changeStatus}\n            >\n              <TabPane\n                tab={`Completed(${completedLength})`}\n                key=\"1\"\n                className={\"tabscontent flex \"}\n              >\n                <PatientCompletedSurvey\n                  {...this.props}\n                  completedParticipant={completedParticipant}\n                  handleOnClick={handleOnClick}\n                  className=\"flex align-items-center\"\n                />\n              </TabPane>\n              <TabPane\n                tab={`Inprogress(${inprogressLength})`}\n                key=\"2\"\n                className={\"tabscontent flex\"}\n              >\n                <PatientInprogressSurvey\n                  {...this.props}\n                  inprogressParticipant={inprogressParticipant}\n                  className=\"flex align-items-center\"\n                />\n              </TabPane>\n            </Tabs>\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Result);\n","import React, { Component, Fragment } from \"react\";\nimport { Select, Button } from \"antd\";\nimport AppHeader from \"../../Containers/Header\";\nimport { injectIntl } from \"react-intl\";\n// import PatientSurveyResponse from \"../PatientSurvey\";\nimport SurveyDetailHeader from \"./surveyDetailHeader\";\nimport SendToMorePatient from \"./sendToMorePatient\";\nimport { SURVEY_STATUS } from \"../../../constant\";\nimport Result from \"./result\";\nimport messages from \"./message\";\nimport \"./style.less\";\nimport moment from \"moment\";\n\nconst Option = Select.Option;\n\nclass ParticularSurveyDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contentIs: \"Result\",\n      selectedPatient: [],\n      selectedProgram: \"\",\n      filterBasedOn: \"All\",\n      sortBasedOn: \"name\",\n      uncheckAll: false,\n      startDate: \"\",\n      endDate: \"\",\n      templateId: \"\",\n      surveyId: \"\",\n      patientStatus: \"Completed\",\n      query: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const { fetchSurveys } = this.props;\n    const { patientStatus } = this.state;\n    fetchSurveys(patientStatus);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.surveys !== prevProps.surveys) {\n      const surveyId = this.props.match.params.surveyId;\n      const {\n        surveys,\n        fetchQuestions,\n        fetchProgramsData,\n        fetchProgramPatient\n      } = this.props;\n      const { template = {}, program, startDate = \"\", endDate = \"\" } = surveys[\n        surveyId\n      ]\n        ? surveys[surveyId]\n        : {};\n      const { filterBasedOn, sortBasedOn, query } = this.state;\n      const { templateId } = template;\n      this.setState({\n        templateId: templateId,\n        selectedProgram: program,\n        surveyId: surveyId,\n        startDate: startDate,\n        endDate: endDate\n      });\n      fetchQuestions(templateId);\n      fetchProgramsData();\n      fetchProgramPatient(program, filterBasedOn, sortBasedOn, query);\n    }\n  }\n\n  changeContent = value => {\n    this.setState({\n      contentIs: value\n    });\n  };\n\n  changeStatus = value => {\n    if (value === \"1\") {\n      this.setState({\n        patientStatus: \"Completed\"\n      });\n    } else if (value === \"2\") {\n      this.setState({\n        patientStatus: \"Inprogress\"\n      });\n    }\n  };\n\n  showSendSurveyBarToggle = value => {\n    if (!value) {\n      this.setState({\n        patientSelectedForDischarge: {}\n      });\n    }\n    this.setState({\n      showDischarge: value,\n      uncheckAll: !value\n    });\n  };\n\n  handleSearch = query => {\n    this.setState({ query, selectedPatient: [] }, this.fetchPatientList);\n  };\n\n  handleOnCheck = data => {\n    const { selectedPatient } = this.state;\n    if (selectedPatient.includes(data)) {\n      const index = selectedPatient.indexOf(data);\n      if (index > -1) {\n        this.setState((prevState, props) => {\n          const { selectedPatient: prevSelectedPatient } = prevState;\n          prevSelectedPatient.splice(index, 1);\n          if (prevSelectedPatient.length > 0) {\n            return { selectedPatient: prevSelectedPatient, uncheckAll: true };\n          }\n          return { selectedPatient: prevSelectedPatient };\n        });\n      }\n    } else {\n      this.setState((prevState, props) => {\n        const { selectedPatient: prevSelectedPatient } = prevState;\n        prevSelectedPatient.push(data);\n        return { selectedPatient: prevSelectedPatient, uncheckAll: false };\n      });\n    }\n  };\n\n  handleOnSelect = e => {\n    this.setState({ selectedProgram: e, selectedPatient: [] });\n    const { filterBasedOn, sortBasedOn, query } = this.state;\n    const { fetchProgramPatient } = this.props;\n    fetchProgramPatient(e, filterBasedOn, sortBasedOn, query);\n  };\n\n  handleSelectChange = e => {\n    this.setState(\n      (prevState, props) => ({\n        filterBasedOn: e,\n        selectedPatient: []\n      }),\n      this.fetchPatientList\n    );\n  };\n\n  fetchPatientList = () => {\n    const { filterBasedOn, sortBasedOn, selectedProgram, query } = this.state;\n    const { fetchProgramPatient } = this.props;\n    fetchProgramPatient(selectedProgram, filterBasedOn, sortBasedOn, query);\n  };\n\n  formatPaticipants = async () => {\n    const { selectedPatient } = this.state;\n\n    const allParticipants = selectedPatient.map(patient => {\n      return {\n        participantId: patient,\n        participantCategory: \"patient\",\n        status: \"INPROGRESS\",\n        surveySentDate: moment()\n      };\n    });\n    return allParticipants;\n  };\n\n  handleOnSentSurvey = async () => {\n    const { endDate, surveyId } = this.state;\n    const { updateSurveys } = this.props;\n    let data = {};\n    data.endDate = endDate;\n    const allParticipants = await this.formatPaticipants();\n    data.participants = allParticipants;\n    updateSurveys(data, surveyId).then(status => {\n      if (status === true) {\n        this.props.history.replace(\"/surveys/Inprogress\");\n      } else {\n        this.setState({ is_error: true });\n      }\n    });\n  };\n\n  handleSortByChange = e => {\n    this.setState({ sortBasedOn: e }, this.fetchPatientList);\n  };\n\n  // handleGoBack = e => {\n  //   e.preventDefault();\n  //   const { history } = this.props;\n  //   history.goBack();\n  // };\n  handleOnPreviewClick = () => {\n    const { templateId } = this.state;\n    this.props.history.push(`/survey/${templateId}/questionnaire`);\n  };\n\n  handleRangeChange = (dates, dateStrings) => {\n    const startDate = dates[0];\n    const endDate = dates[1];\n    let data = {};\n    if (startDate) {\n      data = { ...data, startDate: moment(startDate) };\n    }\n    if (endDate) {\n      data = { ...data, endDate: moment(endDate) };\n    }\n    this.setState(data);\n  };\n\n  handleUnselectAll = () => {\n    this.setState({ selectedPatient: [], uncheckAll: true });\n  };\n\n  handleEndSurvey = () => {\n    const { surveyId, selectedProgram } = this.state;\n    const { openEndSurveyModal } = this.props;\n    openEndSurveyModal(surveyId, selectedProgram);\n  };\n\n  getProgramsOption = () => {\n    const { programs_data } = this.props;\n    const programIds = programs_data ? Object.keys(programs_data) : [];\n    const options = [];\n    programIds.forEach(programId => {\n      const { name } = programs_data[programId];\n      options.push(<Option key={programId}>{name}</Option>);\n    });\n    return options;\n  };\n\n  render() {\n    const {\n      handleOnCheck,\n      getProgramsOption,\n      handleOnSelect,\n\n      handleSelectChange,\n      handleSortByChange,\n      showSendSurveyBarToggle,\n      handleRangeChange,\n      handleOnSentSurvey,\n      handleEndSurvey,\n      changeContent,\n      changeStatus,\n      handleSearch\n    } = this;\n    // eslint-disable-next-line no-unused-vars\n    let surveytemplateId = \"\";\n\n    const { surveys, user_data, match, handleGoBack } = this.props;\n    const {\n      selectedProgram,\n      selectedPatient,\n      uncheckAll,\n      templateId,\n      surveyId,\n      startDate,\n      endDate,\n      contentIs,\n      patientStatus\n    } = this.state;\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    const { status } = surveys[surveyId] ? surveys[surveyId] : {};\n    const { basicInfo: { category } = {} } = user_data;\n    // if (category === \"patient\") {\n    //   return <PatientSurveyResponse {...this.props} />;\n    // }\n\n    if (templateId !== \"\") {\n      surveytemplateId = templateId;\n    }\n    return (\n      <Fragment>\n        <AppHeader setTabDashboard={this.props.setTabDashboard} />\n        <div className=\"m\">\n          <div className=\"surveyDetail\">\n            <SurveyDetailHeader\n              handleGoBack={handleGoBack}\n              selectedPatient={selectedPatient}\n              showSendSurveyBarToggle={this.handleUnselectAll}\n              handleOnSentSurvey={handleOnSentSurvey}\n              handleEndSurvey={handleEndSurvey}\n              contentIs={contentIs}\n              changeContent={changeContent}\n              match={match}\n              status={status}\n              {...this.props}\n            />\n            <div className=\"previewQuestionnaire\">\n              <Button onClick={this.handleOnPreviewClick}>\n                <span className=\"dark fontsize14 medium\">\n                  {formatMessage(messages.previewQuestionnaire)}\n                </span>\n              </Button>\n            </div>\n            {contentIs === \"Result\" ? (\n              <Result\n                {...this.props}\n                changeStatus={changeStatus}\n                patientStatus={patientStatus}\n                surveyId={surveyId}\n                selectedProgram={selectedProgram}\n              />\n            ) : (\n              <div className=\"patient-pane w100\">\n                {status !== SURVEY_STATUS.COMPLETED && (\n                  <SendToMorePatient\n                    {...this.props}\n                    handleOnCheck={handleOnCheck}\n                    getProgramsOption={getProgramsOption}\n                    handleOnSelect={handleOnSelect}\n                    handleSelectChange={handleSelectChange}\n                    handleSortByChange={handleSortByChange}\n                    showSendSurveyBarToggle={showSendSurveyBarToggle}\n                    handleRangeChange={handleRangeChange}\n                    surveys={surveys}\n                    selectedPatient={selectedPatient}\n                    selectedProgram={selectedProgram}\n                    uncheckAll={uncheckAll}\n                    surveyId={surveyId}\n                    startDate={startDate}\n                    endDate={endDate}\n                    handleSearch={handleSearch}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(ParticularSurveyDetail);\n","import React, { Component } from \"react\";\n// import PatientSurveyResponse from \"../PatientSurvey\";\nimport ParticularSurveyDetail from \"./surveyDetail\";\nimport { ENTITY } from \"../../../constant\";\nimport \"./style.less\";\n\nclass SurveyDetail extends Component {\n  componentDidMount() {\n    const { fetchSurveysById } = this.props;\n    const surveyId = this.props.match.params.surveyId;\n    fetchSurveysById(surveyId);\n  }\n\n  handleGoBack = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { user_data } = this.props;\n    const { basicInfo: { category } = {} } = user_data;\n    const { handleGoBack } = this;\n    // if (category === ENTITY.PATIENT) {\n    //   return (\n    //     <PatientSurveyResponse {...this.props} handleGoBack={handleGoBack} />\n    //   );\n    // }\n\n    return (\n      <ParticularSurveyDetail {...this.props} handleGoBack={handleGoBack} />\n    );\n  }\n}\n\nexport default SurveyDetail;\n","import SurveyDetail from \"../../../Components/SurveyDetail\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { USER_STATUS, GLOBAL_MODALS } from \"../../../../constant\";\n\nimport {\n  fetchProgramsData,\n  fetchProgramPatient\n} from \"../../../../modules/program\";\nimport { makeGetUserById } from \"../../../../modules/user/selector\";\nimport { fetchQuestions } from \"../../../../modules/page/createSurvey\";\nimport { fetchSurveyTemplates } from \"../../../../modules/surveyTemplate\";\nimport {\n  fetchSurveys,\n  updateSurveys,\n  endSurveys,\n  fetchSurveysById,\n  addResponse,\n  fetchPaticipantForSurveyBasedOnStatus\n} from \"../../../../modules/survey\";\n\nimport { open } from \"../../../../modules/modals\";\n\nconst mapStateToProps = state => {\n  const {\n    programs,\n    users,\n    auth,\n    hospitals,\n    surveytemplates,\n    surveys,\n    page: { createSurvey = {} } = {}\n  } = state;\n\n  const getUser = makeGetUserById();\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    users,\n    programs_data: programs,\n    hospitals_data: hospitals,\n    surveytemplates_data: surveytemplates,\n    questions: createSurvey.questions,\n    surveytemplates,\n    surveys\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProgramPatient: (programId, filterBy, sortBy, query) =>\n      dispatch(\n        fetchProgramPatient(programId, filterBy, sortBy, {\n          q: query,\n          status: `!${USER_STATUS.INACTIVE}`\n        })\n      ),\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchQuestions: templateId => dispatch(fetchQuestions(templateId)),\n    fetchSurveys: status => dispatch(fetchSurveys(status)),\n    fetchSurveyTemplates: () => dispatch(fetchSurveyTemplates()),\n    updateSurveys: (data, surveyId) => dispatch(updateSurveys(data, surveyId)),\n    endSurveys: surveyId => dispatch(endSurveys(surveyId)),\n    fetchSurveysById: surveyId => dispatch(fetchSurveysById(surveyId)),\n    addResponse: (surveyId, data, completedOn) =>\n      dispatch(addResponse(surveyId, data, completedOn)),\n    fetchPaticipantForSurveyBasedOnStatus: (surveyId, status) =>\n      dispatch(fetchPaticipantForSurveyBasedOnStatus(surveyId, status)),\n    openEndSurveyModal: (surveyId, programId) =>\n      dispatch(open(GLOBAL_MODALS.END_SURVEY, surveyId, null, programId))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SurveyDetail)\n);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  program: {\n    id: \"app.surveyDetail.program\",\n    description: \"program in surveyDetail Page\",\n    defaultMessage: \"Program\"\n  },\n  surveys: {\n    id: \"app.surveyDetail.surveys\",\n    description: \"surveys in surveyDetail page\",\n    defaultMessage: \"Survey start\"\n  },\n  endDate: {\n    id: \"app.SurveyDetail.endDate\",\n    description: \"end date in surveyDetail page\",\n    defaultMessage: \"end date\"\n  },\n  chooseFrom: {\n    id: \"app.surveyDetail.chooseFrom\",\n    description: \"choose from in surveyDetail page\",\n    defaultMessage: \"Choose from\"\n  },\n  showing: {\n    id: \"app.surveyDetail.showing\",\n    description: \"showing in surveyDetail page\",\n    defaultMessage: \"Showing:\"\n  },\n  sortBy: {\n    id: \"app.surveyDetail.sortBy\",\n    description: \"sortBy in surveyDetail page\",\n    defaultMessage: \"SortBy:\"\n  },\n  all: {\n    id: \"app.surveyDetail.all\",\n    description: \"all in surveyDetail page\",\n    defaultMessage: \"All\"\n  },\n  enrolled: {\n    id: \"app.surveyDetail.enrolled\",\n    description: \"enrolled in surveyDetail page\",\n    defaultMessage: \"Enrolled\"\n  },\n  inactive: {\n    id: \"app.surveyDetail.inactive\",\n    description: \"inactive in surveyDetail page\",\n    defaultMessage: \"Inactive\"\n  },\n  discharged: {\n    id: \"app.surveyDetail.discharged\",\n    description: \"discharged in surveyDetail page\",\n    defaultMessage: \"Discharged\"\n  },\n  name: {\n    id: \"app.surveyDetail.name\",\n    description: \"name in surveyDetail page\",\n    defaultMessage: \"Name\"\n  },\n  surveySentDate: {\n    id: \"app.surveyDetail.surveySentDate\",\n    description: \"surveySentDate in surveyDetail page\",\n    defaultMessage: \"Survey Sent Date\"\n  },\n  patientAt: {\n    id: \"app.surveyDetail.patientAt\",\n    description: \"patientAt in surveyDetail page\",\n    defaultMessage: \"patient at\"\n  },\n  programAt: {\n    id: \"app.surveyDetail.programAt\",\n    description: \"programAt in surveyDetail page\",\n    defaultMessage: \"program at\"\n  },\n  programIn: {\n    id: \"app.surveyDetail.programIn\",\n    description: \"programIn in surveyDetail page\",\n    defaultMessage: \"program\"\n  },\n  questionnairePreview: {\n    id: \"app.surveyDetail.questionnairePreview\",\n    description: \"questionnairePreview in surveyDetail page\",\n    defaultMessage: \"Questionnaire Preview\"\n  },\n  questions: {\n    id: \"app.surveyDetail.questions\",\n    description: \"questions in surveyDetail page\",\n    defaultMessage: \"Questions\"\n  },\n  toComplete: {\n    id: \"app.surveyDetail.toComplete\",\n    description: \"toComplete in surveyDetail page\",\n    defaultMessage: \"to complete\"\n  },\n  sendSurvey: {\n    id: \"app.surveyDetail.sendSurvey\",\n    description: \"sendSurvey in surveyDetail page\",\n    defaultMessage: \"Send Survey\"\n  },\n  patientsSelected: {\n    id: \"app.surveyDetail.patientsSelected\",\n    description: \"patientsSelected in surveyDetail page\",\n    defaultMessage: \" Patient(s) selected\"\n  },\n  previewQuestionnaire: {\n    id: \"app.surveyDetail.previewQuestionnaire\",\n    description: \"Preview Questionnaire in surveyDetail page\",\n    defaultMessage: \"Preview Questionnaire\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport GoBack from \"../../../Assets/images/ico-back.svg\";\nimport multiselect from \"../../../Assets/images/ico-multiselect.png\";\nimport \"./style.less\";\nimport messages from \"./message\";\n\nclass SurveyDetailHeader extends Component {\n  render() {\n    const {\n      handleGoBack,\n      selectedPatient,\n      showSendSurveyBarToggle,\n      handleOnSentSurvey,\n      surveytemplateId,\n      surveytemplates = [],\n      intl: { formatMessage },\n      endDate\n    } = this.props;\n    let name = \"\";\n    let isNew = false;\n    let checkIfNew;\n\n    if (surveytemplates[surveytemplateId]) {\n      const { title, createdAt } = surveytemplates[surveytemplateId];\n      name = title;\n      checkIfNew = moment().diff(createdAt, \"days\", true);\n    }\n    if (checkIfNew >= 0 && checkIfNew <= 7) {\n      isNew = true;\n    }\n    const patientCount = selectedPatient.length;\n    return (\n      <div className=\"profileHead\">\n        {patientCount > 0 ? (\n          <div className=\"flex align-items-center justify-content-space-between mt16\">\n            <div className=\"flex align-items-center\">\n              <div\n                className=\"mr10 ml24 radioBox-19-20  clickable\"\n                onClick={e => {\n                  showSendSurveyBarToggle();\n                }}\n              >\n                <img alt=\"\" src={multiselect} />\n              </div>\n              <div className=\"mt1\">\n                {patientCount} {formatMessage(messages.patientsSelected)}\n              </div>\n            </div>\n            <div className=\"mr24\">\n              <Button\n                type=\"primary\"\n                className=\"iqvia-btn\"\n                onClick={handleOnSentSurvey}\n                disabled={endDate === \"\"}\n                // ghost={endDate === \"\"}\n              >\n                {formatMessage(messages.sendSurvey)}\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"back-location flex align-items-center\">\n            <img\n              alt=\"\"\n              src={GoBack}\n              className=\"backButton clickable mr16\"\n              onClick={handleGoBack}\n            />\n            <span className=\"ml16\">All Surveys</span>\n            <span className=\"previousLocation ml16\">{name}</span>\n            {isNew && <span className={isNew ? \"newSurvey\" : \"\"}>New</span>}\n          </div>\n        )}\n        {/* <div className=\"flex justify-content-space-between\">\n          <div className=\"flex align-items-center\">\n            <img alt=\"\" src={GoBack} className=\"backButton clickable\" />\n            <span className=\"previousLocation\">\n              All Programs • Micro Labs research program at borDubai • Patient\n              Details\n            </span>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SurveyDetailHeader);\n","import React, { Component, Fragment } from \"react\";\nimport { Select, Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport messages from \"./message\";\nimport AppHeader from \"../../Containers/Header\";\nimport SurveyDetailHeader from \"./createSurveyHeader\";\nimport PatientPane from \"../SurveyTabs/patientPane\";\nimport moment from \"moment\";\n\nconst Option = Select.Option;\n\nclass CreateSurvey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPatient: [],\n      selectedProgram: \"\",\n      filterBasedOn: \"All\",\n      sortBasedOn: \"name\",\n      uncheckAll: false,\n      startDate: moment(),\n      endDate: \"\",\n      templateId: \"\",\n      is_error: false,\n      query: \"\"\n    };\n  }\n\n  updateBrowserhistory = () => {\n    const { templateId } = this.state;\n    const {\n      history: { location, replace }\n    } = this.props;\n\n    replace(location.pathname, {\n      templateId\n    });\n  };\n\n  componentDidMount() {\n    const {\n      fetchProgramsData,\n      fetchQuestions,\n      fetchSurveyTemplates,\n      getValidProgramForSurvey\n    } = this.props;\n    fetchSurveyTemplates();\n    const templateId = this.props.match.params.templateId;\n    if (!isEmpty(templateId)) {\n      this.setState({ templateId: templateId }, this.updateBrowserhistory);\n      fetchQuestions(templateId);\n      fetchProgramsData().then(status => {\n        if (status) {\n          getValidProgramForSurvey(templateId);\n        }\n      });\n    }\n  }\n\n  showSendSurveyBarToggle = value => {\n    if (!value) {\n      this.setState(this.updateBrowserhistory);\n    }\n    this.setState(\n      {\n        uncheckAll: !value\n      },\n      this.updateBrowserhistory\n    );\n  };\n\n  handleOnCheck = data => {\n    const { selectedPatient } = this.state;\n    if (selectedPatient.includes(data)) {\n      const index = selectedPatient.indexOf(data);\n      if (index > -1) {\n        this.setState((prevState, props) => {\n          const { selectedPatient: prevSelectedPatient } = prevState;\n          prevSelectedPatient.splice(index, 1);\n          if (prevSelectedPatient.length > 0) {\n            return { selectedPatient: prevSelectedPatient, uncheckAll: true };\n          }\n          return { selectedPatient: prevSelectedPatient };\n        });\n      }\n    } else {\n      this.setState((prevState, props) => {\n        const { selectedPatient } = prevState;\n        let prevSelectedPatient = selectedPatient;\n        prevSelectedPatient.push(data);\n        return { selectedPatient: prevSelectedPatient, uncheckAll: false };\n      });\n    }\n  };\n\n  handleOnSelect = e => {\n    this.setState({ selectedProgram: e });\n    this.setState({ selectedPatient: [] }, this.fetchPatientList);\n  };\n\n  handleSelectChange = e => {\n    this.setState(\n      (prevState, props) => ({\n        filterBasedOn: e,\n        selectedPatient: []\n      }),\n      this.fetchPatientList\n    );\n  };\n\n  handleSortByChange = e => {\n    this.setState(\n      (prevState, props) => ({\n        sortBasedOn: e\n      }),\n      this.fetchPatientList\n    );\n  };\n\n  handleSearch = query => {\n    this.setState({ query, selectedPatient: [] }, this.fetchPatientList);\n  };\n\n  fetchPatientList = () => {\n    const { filterBasedOn, sortBasedOn, selectedProgram, query } = this.state;\n    const { fetchProgramPatient } = this.props;\n    fetchProgramPatient(selectedProgram, filterBasedOn, sortBasedOn, query);\n  };\n\n  formatPaticipants = async () => {\n    const { selectedPatient } = this.state;\n\n    const allParticipants = selectedPatient.map(patient => {\n      return {\n        participantId: patient,\n        participantCategory: \"patient\",\n        status: \"INPROGRESS\",\n        surveySentDate: moment()\n      };\n    });\n    return allParticipants;\n  };\n\n  handleOnSentSurvey = async () => {\n    const { startDate, endDate, selectedProgram, templateId } = this.state;\n    const { createSurveys } = this.props;\n    let data = {};\n    data.startDate = startDate;\n    data.endDate = endDate;\n    data.template = templateId;\n    data.program = selectedProgram;\n    const allParticipants = await this.formatPaticipants();\n    data.participants = allParticipants;\n    createSurveys(data).then(status => {\n      if (status === true) {\n        this.props.history.replace(\"/surveys/Inprogress\");\n      } else {\n        this.setState({ is_error: true });\n      }\n    });\n  };\n\n  handleGoBack = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  handleDateChange = dates => {\n    this.setState({ endDate: dates });\n  };\n\n  getProgramsOption = () => {\n    const { programs_data } = this.props;\n    const programIds = programs_data ? Object.keys(programs_data) : [];\n    const options = [];\n    programIds.forEach(programId => {\n      const { name } = programs_data[programId];\n      options.push(<Option key={programId}>{name}</Option>);\n    });\n    return options;\n  };\n\n  handleUnselectAll = () => {\n    this.setState({ selectedPatient: [], uncheckAll: true });\n  };\n\n  handleOnPreviewClick = () => {\n    const { templateId } = this.props.match.params;\n    this.props.history.push(`/survey/${templateId}/questionnaire`);\n  };\n\n  render() {\n    const {\n      handleOnCheck,\n      handleOnSelect,\n      handleGoBack,\n      handleSelectChange,\n      handleSortByChange,\n      showSendSurveyBarToggle,\n      handleDateChange,\n      handleOnSentSurvey,\n      handleUnselectAll,\n      handleSearch\n    } = this;\n    let surveytemplateId = \"\";\n    const {\n      selectedProgram,\n      selectedPatient,\n      uncheckAll,\n      templateId,\n      startDate,\n      endDate,\n      is_error\n    } = this.state;\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    if (templateId !== \"\") {\n      surveytemplateId = templateId;\n    }\n    return (\n      <Fragment>\n        <AppHeader setTabDashboard={this.props.setTabDashboard} />\n        <div className=\"createSurvey\">\n          <SurveyDetailHeader\n            handleGoBack={handleGoBack}\n            selectedPatient={selectedPatient}\n            showSendSurveyBarToggle={handleUnselectAll}\n            handleOnSentSurvey={handleOnSentSurvey}\n            is_error={is_error}\n            endDate={endDate}\n            surveytemplateId={surveytemplateId}\n            {...this.props}\n          />\n          <div className=\"previewQuestionnaire\">\n            <Button onClick={this.handleOnPreviewClick}>\n              <span className=\"dark fontsize14 medium\">\n                {formatMessage(messages.previewQuestionnaire)}\n              </span>\n            </Button>\n          </div>\n          <div span={6} className=\"patient-pane w100\">\n            <PatientPane\n              handleOnCheck={handleOnCheck}\n              handleOnSelect={handleOnSelect}\n              {...this.props}\n              selectedProgram={selectedProgram}\n              handleSelectChange={handleSelectChange}\n              handleSortByChange={handleSortByChange}\n              selectedPatient={selectedPatient}\n              uncheckAll={uncheckAll}\n              showSendSurveyBarToggle={showSendSurveyBarToggle}\n              handleDateChange={handleDateChange}\n              startDate={startDate}\n              endDate={endDate}\n              handleSearch={handleSearch}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(withRouter(CreateSurvey));\n","import CreateSurvey from \"../../../Components/CreateSurvey\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  fetchProgramsData,\n  fetchProgramPatient\n} from \"../../../../modules/program\";\nimport { makeGetUserById } from \"../../../../modules/user/selector\";\nimport {\n  fetchQuestions,\n  getValidProgramForSurvey\n} from \"../../../../modules/page/createSurvey\";\nimport { fetchSurveyTemplates } from \"../../../../modules/surveyTemplate\";\nimport survey, { createSurveys } from \"../../../../modules/survey\";\nimport { USER_STATUS } from \"../../../../constant\";\nconst mapStateToProps = state => {\n  const {\n    programs,\n    users,\n    auth,\n    hospitals,\n    surveytemplates,\n    page: { createSurvey = {} } = {},\n    surveys\n  } = state;\n\n  const getUser = makeGetUserById();\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    users,\n    programs_data: programs,\n    hospitals_data: hospitals,\n    surveytemplates_data: surveytemplates,\n    questions: createSurvey.questions,\n    surveytemplates,\n    availableProgram: createSurvey.availableProgram,\n    is_error: surveys.is_error,\n    error: survey.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProgramPatient: (programId, filterBy, sortBy, query) =>\n      dispatch(\n        fetchProgramPatient(programId, filterBy, sortBy, {\n          q: query,\n          status: `!${USER_STATUS.INACTIVE}`\n        })\n      ),\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchQuestions: templateId => dispatch(fetchQuestions(templateId)),\n    fetchSurveyTemplates: () => dispatch(fetchSurveyTemplates()),\n    createSurveys: data => dispatch(createSurveys(data)),\n    getValidProgramForSurvey: templateId =>\n      dispatch(getValidProgramForSurvey(templateId))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CreateSurvey)\n);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  careCoachProgramHeading: {\n    id: \"app.dashboard.carecoach.program.heading\",\n    description: \"carecoach dashboard program heading\",\n    defaultMessage: \"Programs\"\n  },\n  careCoachActiveProgram: {\n    id: \"app.dashboard.carecoach.program.active\",\n    description: \"carecoach dashboard active program\",\n    defaultMessage: \"Active\"\n  },\n  careCoachExpiredProgram: {\n    id: \"app.dashboard.carecoach.program.expired\",\n    description: \"carecoach dashboard expired program\",\n    defaultMessage: \"Expired\"\n  },\n  careCoachSortProgramByRecentUpdated: {\n    id: \"app.dashboard.carecoach.program.sort.recentUpdated\",\n    description: \"carecoach dashboard sort program by recently updated\",\n    defaultMessage: \"Recently Updated\"\n  },\n  careCoachExpiredSortProgramByName: {\n    id: \"app.dashboard.carecoach.program.sort.name\",\n    description: \"carecoach dashboard sort program by name\",\n    defaultMessage: \"Name\"\n  },\n  careCoachExpiredSortProgramByDate: {\n    id: \"app.dashboard.carecoach.program.sort.dateAdded\",\n    description: \"carecoach dashboard sort program by dateAdded\",\n    defaultMessage: \"Date Added\"\n  },\n  dashboardAppointments: {\n    id: \"common.dashboard.appointments\",\n    description: \"All users dashboard headings for appointments\",\n    defaultMessage: \"Appointments\"\n  },\n  dashboardReminders: {\n    id: \"common.dashboard.reminders\",\n    description: \"All users dashboard headings for reminders\",\n    defaultMessage: \"Reminders\"\n  },\n  dashboardViewAll: {\n    id: \"common.dashboard.view.all\",\n    description: \"All users dashboard heading for view all\",\n    defaultMessage: \"View All\"\n  },\n  dateSent: {\n    id: \"CareCoach.dashboard.dateSent\",\n    description: \"All dashboard Survey Sorting based on DateSent\",\n    defaultMessage: \"Date Sent\"\n  },\n  name: {\n    id: \"CareCoach.dashboard.name\",\n    description: \"All dashboard Survey Sorting based on name\",\n    defaultMessage: \"Name\"\n  },\n  category: {\n    id: \"CareCoach.dashboard.category\",\n    description: \"All dashboard Survey Sorting based on category\",\n    defaultMessage: \"Category\"\n  },\n  survey: {\n    id: \"CareCoach.dashboard.survey\",\n    description: \"Dashboard Survey title\",\n    defaultMessage: \"Surveys\"\n  },\n  sortBy: {\n    id: \"CareCoach.dashboard.sortBy\",\n    description: \"Dashboard sortBy title\",\n    defaultMessage: \"Sort By\"\n  },\n  dashboardSurveys: {\n    id: \"common.dashboard.surveys\",\n    description: \"All users dashboard headings for surveys\",\n    defaultMessage: \"Recently Sent Surveys\"\n  },\n  dashboardPatientSurveys: {\n    id: \"common.dashboard.patientSurveys\",\n    description: \"All users dashboard headings for surveys\",\n    defaultMessage: \"Recent Surveys\"\n  },\n  newAppointment: {\n    id: \"app.header.newAppointment\",\n    description: \"newAppointment in add button\",\n    defaultMessage: \"New Appointment/ Reminder\"\n  },\n  newPatient: {\n    id: \"app.header.newPatient\",\n    description: \"newPatient in add button\",\n    defaultMessage: \"New Patient\"\n  },\n  newDoctor: {\n    id: \"app.header.newDoctor\",\n    description: \"newDoctor in add button\",\n    defaultMessage: \"New Doctor\"\n  },\n  reportAdverseEvent: {\n    id: \"app.header.reportAdverseEvent\",\n    description: \"reportAdverseEvent in add\",\n    defaultMessage: \"Report Adverse Event\"\n  }\n});\n\nexport default messages;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport dateFns from \"date-fns\";\nimport AppointmentCard from \"../../../Containers/Cards/appointment\";\nimport messages from \"../message\";\nimport { Icon } from \"antd\";\nimport \"./style.less\";\nimport {\n  DASHBOARD_MENU,\n  USER_CATEGORY,\n  EVENT_TYPE,\n  EVENT\n} from \"../../../../constant\";\n\nclass DashboardAppointment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentDate: new Date(),\n      selectedDate: new Date()\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {\n    this.getCurrentWeek();\n    this.timer = setInterval(() => this.pollItems(), 5000);\n  }\n\n  async pollItems() {\n    const { pollEventsData, events: { lastUpdatedAt } = {} } = this.props;\n    const lastUpdatedOld = lastUpdatedAt;\n    await pollEventsData().then(result => {\n      const lastUpdatedNew = this.props.events.lastUpdatedAt;\n      if (dateFns.isAfter(lastUpdatedNew, lastUpdatedOld)) {\n        this.getCurrentWeek();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  handleUpdateVital = id => {\n    const {\n      auth: { authenticated_user: auth_user } = {},\n      users = {}\n    } = this.props;\n    const { basicInfo = {} } = users[auth_user];\n    const { category = \"\" } = basicInfo;\n\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: { currentMedicalField: \"Vital\" }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Vital\");\n    }\n  };\n\n  handleUpdateClinicalReading = id => {\n    const {\n      auth: { authenticated_user: auth_user } = {},\n      users = {}\n    } = this.props;\n    const { basicInfo = {} } = users[auth_user];\n    const { category = \"\" } = basicInfo;\n\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Clinical-Reading\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Clinical-Reading\");\n    }\n  };\n\n  handleUpdateMedication = id => {\n    const {\n      auth: { authenticated_user: auth_user } = {},\n      users = {}\n    } = this.props;\n    const { basicInfo = {} } = users[auth_user];\n    const { category = \"\" } = basicInfo;\n\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Medication\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Medication\");\n    }\n  };\n\n  getCurrentWeek = () => {\n    const { currentDate } = this.state;\n    const weekStart = dateFns.format(\n      dateFns.startOfWeek(currentDate),\n      \"YYYY-MM-DD\"\n    );\n    const weekEnd = dateFns.format(\n      dateFns.endOfWeek(currentDate),\n      \"YYYY-MM-DD\"\n    );\n    const {\n      auth: { authenticated_user: userId }\n    } = this.props;\n    this.props.fetchEventsData(userId, weekStart, weekEnd);\n  };\n\n  prevWeek = () => {\n    this.setState(\n      (prevState, props) => {\n        return {\n          currentDate: dateFns.subWeeks(prevState.currentDate, 1),\n          selectedDate: dateFns.startOfWeek(\n            dateFns.subWeeks(prevState.currentDate, 1)\n          )\n        };\n      },\n      () => {\n        this.getCurrentWeek();\n      }\n    );\n  };\n\n  nextWeek = () => {\n    this.setState(\n      (prevState, props) => {\n        return {\n          currentDate: dateFns.addWeeks(prevState.currentDate, 1),\n          selectedDate: dateFns.startOfWeek(\n            dateFns.addWeeks(prevState.currentDate, 1)\n          )\n        };\n      },\n      () => {\n        this.getCurrentWeek();\n      }\n    );\n  };\n\n  onDateClick = day => {\n    this.setState({\n      selectedDate: day\n    });\n  };\n\n  goToCalendarDashboard = () => {\n    const { setTabDashboard } = this.props;\n    setTabDashboard(DASHBOARD_MENU.CALENDAR, { show: \"appointments\" });\n  };\n\n  renderHeader() {\n    const { formatMessage } = this;\n    return (\n      <div className=\"appointment-header\">\n        <div className=\"header-title\">\n          {formatMessage(messages.dashboardAppointments)}\n        </div>\n        <div\n          className=\"header-sub-title clickable\"\n          onClick={this.goToCalendarDashboard}\n        >\n          {formatMessage(messages.dashboardViewAll)}\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dayFormat = \"dd\";\n    const days = [];\n\n    let startDate = dateFns.startOfWeek(this.state.currentDate);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center pointer\" key={i}>\n          {dateFns\n            .format(dateFns.addDays(startDate, i), dayFormat)\n            .slice(0, -1)}\n        </div>\n      );\n    }\n    return <div className=\"dashboard-days dashboard-row\">{days}</div>;\n  }\n\n  renderDates() {\n    const dateFormat = \"D\";\n    const dates = [];\n    const { selectedDate, currentDate } = this.state;\n\n    const startDate = dateFns.startOfWeek(currentDate);\n    let day = startDate;\n\n    for (let i = 0; i < 7; i++) {\n      const cloneDay = day;\n      dates.push(\n        <div\n          className={`week-dates ${\n            dateFns.isToday(cloneDay)\n              ? \"isSelected\"\n              : dateFns.isSameDay(cloneDay, selectedDate)\n              ? \"isFadeSelected\"\n              : \"\"\n          }`}\n          key={i}\n          onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\n        >\n          {dateFns.format(cloneDay, dateFormat)}\n        </div>\n      );\n\n      day = dateFns.addDays(day, 1);\n    }\n    return (\n      <div className=\"date-section\">\n        <div className=\"dashboard-dates\">\n          <Icon\n            className=\"dashboard-icons\"\n            type=\"left\"\n            onClick={this.prevWeek}\n          />\n          <div className=\"dates-row clickable\">{dates}</div>\n          <Icon\n            className=\"dashboard-icons\"\n            type=\"right\"\n            onClick={this.nextWeek}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderEvents() {\n    const { selectedDate, currentDate } = this.state;\n\n    const {\n      events: { events = {}, scheduleEventListByDate = {} } = {},\n      auth: { authenticated_user: currentUserId }\n    } = this.props;\n    const today = dateFns.format(selectedDate, \"YYYY-MM-DD\");\n    const weekStart = dateFns.format(\n      dateFns.startOfWeek(currentDate),\n      \"YYYY-MM-DD\"\n    );\n    const weekEnd = dateFns.format(\n      dateFns.endOfWeek(currentDate),\n      \"YYYY-MM-DD\"\n    );\n\n    let eventsData = [];\n    if (scheduleEventListByDate) {\n      const currentDate = scheduleEventListByDate[today] || [];\n      let count = 0;\n      currentDate.forEach(id => {\n        if (count === 4) {\n          return false;\n        }\n        if (events[id] && events[id].eventType === EVENT_TYPE.APPOINTMENT) {\n          count++;\n          const event = events[id];\n          event.calendarStartingDate = weekStart;\n          event.calendarEndingDate = weekEnd;\n          eventsData.push(events[id]);\n        }\n      });\n    }\n\n    let options = [];\n    eventsData.forEach(event => {\n      const { id } = event;\n\n      const card =\n        event.eventType === EVENT_TYPE.APPOINTMENT ? (\n          <AppointmentCard\n            id={id}\n            calendarUserId={currentUserId}\n            modal={true}\n          />\n        ) : null;\n\n      if (card !== null) {\n        options.push(\n          <Fragment key={event.id}>\n            <div className=\"black pr16 fontsize16\">{card}</div>\n          </Fragment>\n        );\n      }\n    });\n\n    return <div className=\"mobile-card-wrapper hide-scroll\">{options}</div>;\n  }\n\n  renderCurrentSelectedDate() {\n    const fullDateFormat = \"ddd, D MMM YYYY\";\n    const { selectedDate } = this.state;\n    return (\n      <div className=\"date-display\">\n        {dateFns.isToday(selectedDate) && (\n          <div className=\"today\">\n            <div>Today </div>\n            <div className=\"dot silver ml2 mr2\" />\n          </div>\n        )}\n        {dateFns.format(selectedDate, fullDateFormat)}\n      </div>\n    );\n  }\n\n  renderDateDots = cloneDay => {\n    const dots = [];\n    const { selectedDate } = this.state;\n    const isVisible = !dateFns.isSameDay(cloneDay, selectedDate);\n    const {\n      events: { events = {}, scheduleEventListByDate = {} } = {}\n    } = this.props;\n    cloneDay = dateFns.format(cloneDay, \"YYYY-MM-DD\");\n\n    if (scheduleEventListByDate) {\n      const currentDate = scheduleEventListByDate[cloneDay] || [];\n      let count = 0;\n      currentDate.forEach(id => {\n        if (count === 4) {\n          return false;\n        }\n        const event = events[id];\n        if (event.eventType === EVENT_TYPE.APPOINTMENT) {\n          count++;\n          if (event.status === EVENT.STATUS.COMPLETED) {\n            dots.push(\n              <div\n                key={event.id}\n                className={`dot silver ml2 mr2 ${isVisible ? \"\" : \"invisble\"}`}\n              />\n            );\n          } else if (event.status === EVENT.STATUS.PASSED) {\n            dots.push(\n              <div\n                key={event.id}\n                className={`dot orange ml2 mr2 ${isVisible ? \"\" : \"invisble\"}`}\n              />\n            );\n          } else {\n            dots.push(\n              <div\n                key={event.id}\n                className={`dot dark ml2 mr2 ${isVisible ? \"\" : \"invisble\"}`}\n              />\n            );\n          }\n        }\n      });\n    }\n    return dots;\n  };\n\n  renderDots() {\n    const dots = [];\n    const { currentDate } = this.state;\n\n    const startDate = dateFns.startOfWeek(currentDate);\n    let day = startDate;\n\n    for (let i = 0; i < 7; i++) {\n      const cloneDay = day;\n      dots.push(\n        <div\n          className=\"week-dots \"\n          key={i}\n          onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\n        >\n          {!dateFns.isToday(cloneDay) ? this.renderDateDots(cloneDay) : null}\n          {/* {this.renderDateDots(cloneDay)} */}\n        </div>\n      );\n      day = dateFns.addDays(day, 1);\n    }\n    return (\n      <Fragment>\n        <div className=\"dots-wrapper\">{dots}</div>\n        <div>\n          <hr className=\"line\" />\n        </div>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { formatMessage } = this;\n    return (\n      <Fragment>\n        {this.renderHeader()}\n        {this.renderDays()}\n        {this.renderDates()}\n        {this.renderDots()}\n        {this.renderCurrentSelectedDate()}\n        {this.renderEvents()}\n      </Fragment>\n    );\n  }\n}\nexport default injectIntl(DashboardAppointment);\n","import { connect } from \"react-redux\";\nimport { fetchEventsData, pollEventsData } from \"../../../modules/events\";\nimport DashboardAppointment from \"../../Components/DashBoard/common/DashboardAppointment\";\n\nconst mapStateToProps = state => {\n  const { events, users, auth } = state;\n  return {\n    events: events,\n    users: users,\n    auth: auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEventsData: (userId, startDate, endDate) =>\n      dispatch(fetchEventsData(userId, startDate, endDate)),\n    pollEventsData: () => dispatch(pollEventsData())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DashboardAppointment);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport dateFns from \"date-fns\";\nimport forEach from \"lodash-es/forEach\";\nimport pickBy from \"lodash-es/pickBy\";\nimport ReminderCard from \"../../../Containers/Cards/reminder\";\nimport messages from \"../message\";\nimport { Menu } from \"antd\";\nimport \"./style.less\";\nimport { DASHBOARD_MENU, EVENT_TYPE } from \"../../../../constant\";\n\nconst MenuItem = Menu.Item;\nconst OneTime = \"oneTime\";\nconst Repeating = \"repeating\";\n\nclass DashboardReminder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentDate: new Date(),\n      selectedDate: new Date(),\n      selectedMenu: OneTime\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {}\n\n  goToCalendarDashboard = () => {\n    const { setTabDashboard } = this.props;\n    setTabDashboard(DASHBOARD_MENU.CALENDAR, { show: \"reminders\" });\n  };\n\n  renderHeader() {\n    const { formatMessage } = this;\n    return (\n      <div className=\"appointment-header\">\n        <div className=\"header-title\">\n          {formatMessage(messages.dashboardReminders)}\n        </div>\n        <div\n          className=\"header-sub-title clickable\"\n          onClick={this.goToCalendarDashboard}\n        >\n          {formatMessage(messages.dashboardViewAll)}\n        </div>\n      </div>\n    );\n  }\n\n  selectMenu = item => {\n    if (item.key === Repeating) {\n      this.setState({ selectedMenu: Repeating });\n    } else if (item.key === OneTime) {\n      this.setState({ selectedMenu: OneTime });\n    }\n  };\n\n  renderMenu() {\n    return (\n      <div className=\"reminder-menu\">\n        <Menu\n          className=\"black\"\n          onSelect={this.selectMenu}\n          mode=\"horizontal\"\n          defaultSelectedKeys={[OneTime]}\n        >\n          <MenuItem key={OneTime}>One-Time</MenuItem>\n          <MenuItem key={Repeating}>Repeating</MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n\n  renderEventsDates = selectedDate => {\n    const fullDateFormat = \"ddd, D MMM YYYY\";\n    return (\n      <div className=\"date-display\">\n        {dateFns.isToday(selectedDate) && (\n          <div className=\"today\">\n            <div>Today </div>\n            <div className=\"dot silver\" />\n          </div>\n        )}\n        {dateFns.format(selectedDate, fullDateFormat)}\n      </div>\n    );\n  };\n\n  filterOneTimeEvents() {\n    const { events: { events = {} } = {} } = this.props;\n    const eventsData = pickBy(events, function(event) {\n      return (\n        event.eventType === EVENT_TYPE.REMINDER && event.data.repeat === \"none\"\n      );\n    });\n    return this.pickRemindersByDate(eventsData);\n  }\n\n  filterRepeatingEvents() {\n    const { events: { events = {} } = {} } = this.props;\n    const eventsData = pickBy(events, function(event) {\n      return (\n        event.eventType === EVENT_TYPE.REMINDER && event.data.repeat !== \"none\"\n      );\n    });\n    return this.pickRemindersByDate(eventsData);\n  }\n\n  pickRemindersByDate(events) {\n    const { events: { scheduleEventListByDate = {} } = {} } = this.props;\n    let options = [];\n    let count = 0;\n    const orderedScheduleEventListByDate = {};\n    Object.keys(scheduleEventListByDate)\n      .sort()\n      .forEach(function(key) {\n        orderedScheduleEventListByDate[key] = scheduleEventListByDate[key];\n      });\n\n    if (orderedScheduleEventListByDate) {\n      for (const date in orderedScheduleEventListByDate) {\n        let eventsData = [];\n        const ids = orderedScheduleEventListByDate[date];\n        //eslint-disable-next-line\n        forEach(ids, id => {\n          if (count === 4) {\n            return false;\n          }\n          if (events[id]) {\n            count++;\n            eventsData.push(events[id]);\n          }\n        });\n        options.push(this.renderEvents(eventsData, date));\n      }\n    }\n    return options;\n  }\n\n  renderEvents(eventsData, date) {\n    const {\n      auth: { authenticated_user: currentUserId }\n    } = this.props;\n    let options = [];\n    let count = 0;\n    forEach(eventsData, event => {\n      const { id } = event;\n      if (count === 4) {\n        return false;\n      }\n      count++;\n\n      const card = (\n        <ReminderCard id={id} calendarUserId={currentUserId} modal={true} />\n      );\n      options.push(\n        <Fragment key={event.id}>\n          <div className=\"black pb10 pt10 fontsize16\">{card}</div>\n        </Fragment>\n      );\n    });\n    return (\n      <Fragment key={date}>\n        {eventsData && eventsData.length !== 0 && this.renderEventsDates(date)}\n        <div className=\"mobile-card-wrapper hide-scroll\">{options}</div>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { selectedMenu } = this.state;\n    const { formatMessage } = this;\n\n    return (\n      <Fragment>\n        {this.renderHeader()}\n        {this.renderMenu()}\n        {selectedMenu === OneTime && this.filterOneTimeEvents()}\n        {selectedMenu === Repeating && this.filterRepeatingEvents()}\n        {this.renderEvents()}\n      </Fragment>\n    );\n  }\n}\nexport default injectIntl(DashboardReminder);\n","import { connect } from \"react-redux\";\nimport { fetchEventsData } from \"../../../modules/events\";\nimport DashboardReminder from \"../../Components/DashBoard/common/DashboardReminder\";\n\nconst mapStateToProps = state => {\n  const { events, users, auth } = state;\n  return {\n    events: events,\n    users: users,\n    auth: auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEventsData: (userId, startDate, endDate) =>\n      dispatch(fetchEventsData(userId, startDate, endDate))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DashboardReminder);\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { SURVEY_STATUS } from \"../../../constant\";\nimport \"./style.less\";\nimport moment from \"moment\";\n\nconst SurveyCard = ({\n  data = {},\n  handleOnClick,\n  programs_data,\n  handleOnDownload,\n  isDashboard\n}) => {\n  const {\n    endDate,\n    startDate,\n    participants = [],\n    status = \"\",\n    program,\n    template = {},\n    participantCompletedSurvey = [],\n    surveyId = \"\"\n  } = data;\n  const header = () => {\n    return (\n      <div\n        className={` flex align-items-center justify-content-space-between mb8 ${\n          status === SURVEY_STATUS.COMPLETED ? \"inprogress\" : \"completed\"\n        }`}\n      >\n        <div\n          className={`fontsize12 dark ml10 Inprogressnow  flex align-items-center justify-content-center`}\n        >\n          {status.toLowerCase()}\n        </div>\n        <div>\n          {(status === SURVEY_STATUS.COMPLETED ||\n            status === SURVEY_STATUS.INPROGRESS) &&\n          participantCompletedSurvey.length > 0 ? (\n            <Button\n              type=\"primary\"\n              className={\n                isDashboard ? \"download-report-btn\" : `download-report-btn ml40`\n              }\n              ghost\n              onClick={e => {\n                e.stopPropagation();\n                handleOnDownload(surveyId);\n              }}\n            >\n              Download Report\n            </Button>\n          ) : (\n            <Button\n              className={\n                isDashboard ? \"download-report-btn\" : `download-report-btn ml40`\n              }\n              onClick={e => {\n                e.stopPropagation();\n                return false;\n              }}\n              style={{\n                backgroundColor: \"rgba(212, 215, 217, 0.3)\",\n                color: \"black\"\n              }}\n              disabled\n            >\n              Download Report\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const newHeader = () => {\n    return (\n      <div className=\"survey-card-header-right\">\n        <div\n          className={`in-progress-container ${\n            status === SURVEY_STATUS.COMPLETED ||\n            status === SURVEY_STATUS.INPROGRESS\n              ? \"inprogress\"\n              : \"completed\"\n          }`}\n        >\n          {status.toLowerCase()}\n        </div>\n        <div className=\"survey-header-button\">\n          {(status === SURVEY_STATUS.COMPLETED ||\n            status === SURVEY_STATUS.INPROGRESS) &&\n          participantCompletedSurvey.length > 0 ? (\n            <Button\n              type=\"primary\"\n              ghost\n              onClick={e => {\n                e.stopPropagation();\n                const { _id: surveyId = {} } = data || {};\n                if (surveyId) {\n                  handleOnDownload(surveyId);\n                }\n              }}\n            >\n              Download Report\n            </Button>\n          ) : (\n            <Button\n              onClick={e => {\n                e.stopPropagation();\n                return false;\n              }}\n              style={{\n                backgroundColor: \"rgba(212, 215, 217, 0.3)\",\n                color: \"black\"\n              }}\n              disabled\n            >\n              Download Report\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const { title } = template;\n  const TotalParticipants = participants.length;\n  const { name } = programs_data[program] ? programs_data[program] : {};\n  const startingDate = moment(startDate).format(\"DD/MM/YYYY\");\n  const endingDate = moment(endDate).format(\"DD/MM/YYYY\");\n  return (\n    <div\n      className=\"survey-card-mobile mr16 mb16 clickable\"\n      onClick={e => handleOnClick(surveyId)}\n    >\n      <div className=\"card-content\">\n        {isDashboard ? \"\" : header()}\n\n        <div className={`${isDashboard ? \"survey-card-header\" : \"\"}`}>\n          {isDashboard ? newHeader() : \"\"}\n          <span className=\"fontsize14 mr8 bold dark\">{title}</span>\n        </div>\n        <span className=\"fontsize14 dark medium mb4 \">\n          {participantCompletedSurvey.length} of {TotalParticipants} recipients\n          completed\n        </span>\n        <div>Sent to {name} at Dubai program’s patients</div>\n        <div className=\"fontsize12 label-color mt8\">\n          {startingDate}-{endingDate}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SurveyCard;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./style.less\";\n\nclass PatientSurveyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {}\n\n  render() {\n    const { surveyData, handleOnClick } = this.props;\n    const { template, _id: surveyId } = surveyData;\n\n    return (\n      <div className=\"patient-survey-card\">\n        <div className=\"patient-survey-card-head\">\n          <div className=\"patient-survey-card-head-left\">\n            <div>{template.title}</div>\n            <div className=\"patient-survey-card-sub-heading\">\n              <div className=\"text\">\n                {template.questions.length} {\" Questions\"}\n              </div>\n              <div className=\"dot dark mr8\" />\n              <div className=\"text\">\n                {template.time_to_complete}\n                {\" to complete\"}\n              </div>\n            </div>\n          </div>\n          <div className=\"patient-survey-card-head-right\">\n            <Button\n              type=\"primary\"\n              ghost\n              size={\"small\"}\n              onClick={e => {\n                e.stopPropagation();\n                handleOnClick(surveyId);\n              }}\n            >\n              {\"Take Survey\"}\n            </Button>\n          </div>\n        </div>\n        <div className=\"patient-survey-card-body\">\n          <div>{template.description}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PatientSurveyCard;\n","import React, { Component, Fragment } from \"react\";\nimport SurveyCard from \"../Cards/surveyCard\";\nimport { Col } from \"antd\";\nimport { REQUEST_TYPE } from \"../../../constant\";\nimport { doRequest } from \"../../../Helper/network\";\nimport { Survey } from \"../../../Helper/urls\";\nconst Json2csvParser = require(\"json2csv\").Parser;\nconst fileDownload = require(\"js-file-download\");\n\nexport const downloadReport = surveyId => {\n  // const { match: { params: { surveyId } = {} } = {} } = this.props;\n  if (surveyId) {\n    // eslint-disable-next-line no-unused-vars\n    const response = doRequest({\n      method: REQUEST_TYPE.GET,\n      url: Survey.downloadSurveyReport(surveyId)\n    }).then(response => {\n      const { payload: { data = {} } = {} } = response;\n      let dataSource = [];\n      let columns = [];\n      for (const user in data) {\n        const response = data[user];\n        columns = [];\n        columns.push(\"Patient Name\");\n        let row = [];\n        row.push(user);\n        for (let i = 0; i < response.length; i++) {\n          columns.push(\"Q\" + (i + 1));\n          const answer = response[i].response;\n          if (answer.id && answer.value) {\n            row.push(answer.value);\n          } else {\n            row.push(answer);\n          }\n        }\n        dataSource.push({ ...row });\n      }\n      const columnKeys = columns.map(column => {\n        return column;\n      });\n      const csvHeader = new Json2csvParser({\n        fields: columnKeys\n      }).parse();\n      const csvBody = new Json2csvParser({ header: false }).parse(dataSource);\n      const csv = csvHeader + \"\\n\" + csvBody;\n      fileDownload(csv, `${surveyId}_survey_report.csv`);\n    });\n  }\n};\n\nclass CompletedSurveys extends Component {\n  componentDidMount() {\n    const { fetchSurveys } = this.props;\n    fetchSurveys(\"completed\");\n  }\n\n  render() {\n    const {\n      surveys_data,\n      programs_data,\n      handleOnClick,\n      completeSurveyIds = []\n    } = this.props;\n    //const { downloadReport } = this;\n    return (\n      <Fragment>\n        {completeSurveyIds.map(survey => {\n          const { _id: id } = survey;\n          if (surveys_data[id]) {\n            return (\n              <Col xs={12} sm={12} md={6} key={id}>\n                <SurveyCard\n                  data={surveys_data[id]}\n                  id={id}\n                  programs_data={programs_data}\n                  handleOnClick={handleOnClick}\n                  handleOnDownload={downloadReport}\n                />\n              </Col>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Fragment>\n    );\n  }\n}\n\nexport default CompletedSurveys;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport messages from \"../message\";\nimport \"./style.less\";\nimport { USER_CATEGORY, DASHBOARD_MENU } from \"../../../../constant\";\nimport SurveyCard from \"../../Cards/surveyCard\";\nimport PatientSurveyCard from \"../../Cards/patientSurveyCard\";\nimport { downloadReport } from \"../../Surveys/completedSurvey\";\n\nclass DashboardSurvey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {\n    const {\n      fetchRecentlySentSurveys,\n      users,\n      loggedInUser,\n      fetchProgramsData\n    } = this.props;\n    const {\n      programId: programIds = {},\n      basicInfo: { category }\n    } = users[loggedInUser] || {};\n    if (category === USER_CATEGORY.PATIENT) {\n      const status = [\"INPROGRESS\"];\n      fetchRecentlySentSurveys(programIds, status);\n    } else if (category === USER_CATEGORY.CARE_COACH) {\n      fetchProgramsData();\n      fetchRecentlySentSurveys(programIds);\n    }\n  }\n\n  goToSurveyDashboard = () => {\n    const { setTabDashboard } = this.props;\n    setTabDashboard(DASHBOARD_MENU.SURVEYS);\n  };\n\n  renderHeader() {\n    const { formatMessage, goToSurveyDashboard } = this;\n    const { users, loggedInUser } = this.props;\n    const { basicInfo: { category } = {} } = users[loggedInUser] || {};\n    return (\n      <div className=\"appointment-header\">\n        <div className=\"header-title\">\n          {category === USER_CATEGORY.CARE_COACH\n            ? formatMessage(messages.dashboardSurveys)\n            : formatMessage(messages.dashboardPatientSurveys)}\n        </div>\n        <div\n          className={`header-sub-title ${\n            category === USER_CATEGORY.PATIENT ? \"invisible\" : \"clickable\"\n          }`}\n          onClick={goToSurveyDashboard}\n        >\n          {formatMessage(messages.dashboardViewAll)}\n        </div>\n      </div>\n    );\n  }\n\n  handleOnClick = id => {\n    this.props.history.replace(`/survey/${id}`);\n  };\n\n  renderSurveysForCareCoach() {\n    const { handleOnClick } = this;\n    const { surveys, programs } = this.props;\n    const { recentlyAdded } = surveys;\n    const surveyData = [];\n    if (recentlyAdded) {\n      recentlyAdded.forEach(id => {\n        surveyData.push(\n          <SurveyCard\n            key={id}\n            data={surveys[id]}\n            id={id}\n            programs_data={programs}\n            handleOnClick={() => handleOnClick(id)}\n            isDashboard={true}\n            handleOnDownload={downloadReport}\n          />\n        );\n      });\n    }\n\n    return <div className=\"survey-body hide-scroll\">{surveyData}</div>;\n  }\n\n  renderSurveysForPatient() {\n    const { handleOnClick } = this;\n    const { surveys, loggedInUser } = this.props;\n    const { recentlyAdded } = surveys;\n    const surveyData = [];\n    if (recentlyAdded) {\n      recentlyAdded.forEach(id => {\n        const survey = surveys[id] || {};\n        const participantCompletedSurvey =\n          survey.participantCompletedSurvey || [];\n        if (participantCompletedSurvey.indexOf(loggedInUser.toString()) < 0) {\n          surveyData.push(\n            <PatientSurveyCard\n              key={id}\n              surveyData={surveys[id]}\n              id={id}\n              handleOnClick={() => handleOnClick(id)}\n            />\n          );\n        }\n      });\n    }\n\n    return <div className=\"survey-body hide-scroll\">{surveyData}</div>;\n  }\n\n  render() {\n    const { users, loggedInUser } = this.props;\n    const { basicInfo: { category } = {} } = users[loggedInUser] || {};\n\n    return (\n      <Fragment>\n        {this.renderHeader()}\n        {category === USER_CATEGORY.CARE_COACH\n          ? this.renderSurveysForCareCoach()\n          : \"\"}\n        {category === USER_CATEGORY.PATIENT\n          ? this.renderSurveysForPatient()\n          : \"\"}\n      </Fragment>\n    );\n  }\n}\nexport default injectIntl(DashboardSurvey);\n","import { connect } from \"react-redux\";\nimport { fetchRecentlySentSurveys } from \"../../../modules/survey\";\nimport { fetchProgramsData } from \"../../../modules/program\";\nimport DashboardSurvey from \"../../Components/DashBoard/common/DashboardSurvey\";\n\nconst mapStateToProps = state => {\n  const { surveys, users, auth, programs } = state;\n  return {\n    surveys: surveys,\n    users: users,\n    loggedInUser: auth.authenticated_user,\n    programs: programs\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRecentlySentSurveys: (programIds, statuses) =>\n      dispatch(fetchRecentlySentSurveys(programIds, statuses)),\n    fetchProgramsData: () => dispatch(fetchProgramsData())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DashboardSurvey);\n","import React, { Component, Fragment } from \"react\";\nimport \"../styles/homeStyles.less\";\nimport DashboardAppointment from \"../../../Containers/DashBoard/dashboardAppointment\";\nimport DashboardReminder from \"../../../Containers/DashBoard/dashboardReminder\";\nimport DashboardSurveys from \"../../../Containers/DashBoard/dashboardSurvey\";\nimport { USER_CATEGORY } from \"../../../../constant\";\n\nexport class DashBoardHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDashBoard: true\n    };\n  }\n  componentDidMount() {}\n\n  setDefaultState() {\n    this.setState({\n      appointments: []\n    });\n  }\n\n  render() {\n    const {\n      history,\n      location,\n      setTabDashboard,\n      user_data: { basicInfo: { category = USER_CATEGORY.PATIENT } = {} } = {}\n    } = this.props;\n    const propsToSend = { history, location, setTabDashboard };\n    return (\n      <Fragment>\n        <div className=\"dashboard-home\">\n          <div className=\"mobile-appointment-section\">\n            <DashboardAppointment {...propsToSend} />\n          </div>\n          <div className=\"mobile-reminder-section\">\n            <DashboardReminder {...propsToSend} />\n          </div>\n          {category !== USER_CATEGORY.DOCTOR && (\n            <Fragment>\n              <div className=\"mobile-appointment-section\">\n                <DashboardSurveys {...propsToSend} />\n              </div>\n              <div className=\"mobile-reminder-section\">\n                {/* <DashboardReminder {...propsToSend} /> */}\n              </div>\n            </Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default DashBoardHome;\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  appointments: {\n    id: \"mobile.calendar.appointments\",\n    description: \"Mobile Calendar\",\n    defaultMessage: \"Appointments\"\n  },\n  reminder: {\n    id: \"mobile.calendar.reminder\",\n    description: \"Mobile Calendar\",\n    defaultMessage: \"Reminder\"\n  },\n  syncCalendar: {\n    id: \"mobile.calendar.syncCalendar\",\n    description: \"Mobile Calendar\",\n    defaultMessage: \"Sync Calendar\"\n  },\n  show: {\n    id: \"mobile.calendar.show\",\n    description: \"Mobile Calendar\",\n    defaultMessage: \"Show\"\n  },\n  cancel: {\n    id: \"calendarCard.appointment.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel Appointment\"\n  },\n  reschedule: {\n    id: \"calendarCard.appointment.reschedule\",\n    description: \"\",\n    defaultMessage: \"Reschedule Appointment\"\n  },\n  editNotes: {\n    id: \"calendarCard.appointment.editNotes\",\n    description: \"\",\n    defaultMessage: \"Edit Notes\"\n  },\n  updateVitals: {\n    id: \"calendarCard.appointment.updateVitals\",\n    description: \"\",\n    defaultMessage: \"Update Vitals\"\n  },\n  updateMedication: {\n    id: \"calendarCard.appointment.updateMedication\",\n    description: \"\",\n    defaultMessage: \"Update Medication\"\n  },\n  updateClinicalReadings: {\n    id: \"calendarCard.appointment.updateClinicalReadings\",\n    description: \"\",\n    defaultMessage: \"Update Clinical Readings\"\n  },\n  doneButton: {\n    id: \"calendarCard.appointment.doneButton\",\n    description: \"\",\n    defaultMessage: \"Mark as done\"\n  },\n  undoButton: {\n    id: \"calendarCard.appointment.undoButton\",\n    description: \"\",\n    defaultMessage: \"Undo\"\n  },\n  joinCallButton: {\n    id: \"calendarCard.appointment.joinCallButton\",\n    description: \"\",\n    defaultMessage: \"Join Call\"\n  },\n  addNotes: {\n    id: \"calendarCard.reminder.addNotes\",\n    description: \"\",\n    defaultMessage: \"Add Notes\"\n  },\n  editReminder: {\n    id: \"calendarCard.reminder.editReminder\",\n    description: \"\",\n    defaultMessage: \"Edit Reminder\"\n  },\n  deleteReminder: {\n    id: \"calendarCard.reminder.deleteReminder\",\n    description: \"\",\n    defaultMessage: \"Delete Reminder\"\n  },\n  scheduledBy: {\n    id: \"calendarCard.appointment.scheduledBy\",\n    description: \"\",\n    defaultMessage: \"Scheduled by\"\n  },\n  markAsDoneBy: {\n    id: \"calendarCard.appointment.markAsDoneBy\",\n    description: \"\",\n    defaultMessage: \"Mark as done by\"\n  }\n});\n","import React, { Component } from \"react\";\nimport dateFns from \"date-fns\";\nimport { EVENT, EVENT_TYPE } from \"../../../constant\";\nimport \"./style.less\";\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { date, events } = this.props;\n    this.setState({ currentDate: date, events: events });\n  }\n\n  renderDots() {\n    const dots = [];\n    const { events } = this.props;\n    let count = 0;\n    events.forEach(event => {\n      if (count === 4) {\n        return false;\n      }\n      if (\n        event.eventType === EVENT_TYPE.APPOINTMENT ||\n        event.eventType === EVENT_TYPE.REMINDER\n      ) {\n        count++;\n        if (event.status === EVENT.STATUS.COMPLETED) {\n          dots.push(\n            <div key={event.id} className={`mobile-dot silver ml2 mr2`} />\n          );\n        } else if (event.status === EVENT.STATUS.PASSED) {\n          dots.push(\n            <div key={event.id} className={`mobile-dot orange ml2 mr2`} />\n          );\n        } else {\n          dots.push(\n            <div key={event.id} className={`mobile-dot dark ml2 mr2`} />\n          );\n        }\n      }\n    });\n    return <div className=\"cell-dots-wrapper\">{dots}</div>;\n  }\n\n  onDateClick = () => {\n    const { onDateClick, date } = this.props;\n    onDateClick(date);\n  };\n\n  render() {\n    const { date, isSelected, disabled } = this.props;\n    const { onDateClick } = this;\n    return (\n      <div className=\"cell\" onClick={onDateClick} key={date}>\n        <div\n          className={`digits ${disabled ? \"disable-date\" : \"\"} ${\n            isSelected ? \"selected-digit\" : \"\"\n          }`}\n        >\n          {dateFns.format(date, \"D\")}\n        </div>\n        {this.renderDots()}\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport dateFns from \"date-fns\";\nimport { Button, Checkbox, Icon, Modal, Select } from \"antd\";\nimport filter from \"lodash-es/filter\";\nimport { monthsShort } from \"moment\";\nimport \"./style.less\";\nimport messages from \"./messages\";\nimport { EVENT, EVENT_TYPE, USER_CATEGORY } from \"../../../constant\";\nimport ReminderCard from \"../../Containers/Cards/reminder\";\nimport AppointmentCard from \"../../Containers/Cards/appointment\";\nimport dropDown from \"../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport Cell from \"./cell\";\nimport config from \"../../../config\";\n\nconst dropdownIcon = <img alt=\"\" src={dropDown} />;\nconst Option = Select.Option;\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    const show = props.show;\n    this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      visible: false,\n      cardClicked: false,\n      modalVisible: false,\n      showReminder: show !== \"appointments\",\n      showAppointment: show !== \"reminders\"\n    };\n    this.fetchEventsAgain = this.fetchEventsAgain.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchEventsAgain();\n    this.timer = setInterval(() => this.pollItems(), 5000);\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.id !== this.props.id) {\n      this.fetchEventsAgain();\n    }\n  }\n\n  async pollItems() {\n    const { pollEventsData, events: { lastUpdatedAt } = {} } = this.props;\n    const lastUpdatedOld = lastUpdatedAt;\n    await pollEventsData().then(result => {\n      const lastUpdatedNew = this.props.events.lastUpdatedAt;\n      if (dateFns.isAfter(lastUpdatedNew, lastUpdatedOld)) {\n        this.fetchEventsAgain();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  fetchEventsAgain = () => {\n    const { currentMonth } = this.state;\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n    this.props.fetchEventsData(\n      dateFns.format(startDate, \"YYYY-MM-DD\"),\n      dateFns.format(endDate, \"YYYY-MM-DD\")\n    );\n  };\n\n  changeMonth = value => {\n    const date = JSON.parse(value);\n    const currentYear = dateFns.getYear(this.state.currentMonth);\n    const newDate = new Date(currentYear, parseInt(date.month), 1);\n    this.setState(\n      {\n        currentMonth: newDate,\n        selectedDate: newDate\n      },\n      this.fetchEventsAgain\n    );\n  };\n\n  getMonthsData = () => {\n    let monthsData = monthsShort();\n    const currentYear = dateFns.getYear(this.state.currentMonth);\n    let options = [];\n\n    for (const index in monthsData) {\n      const month = monthsData[index];\n      const date = { month: index, year: currentYear };\n      options.push(\n        <Option key={index} value={JSON.stringify(date)}>\n          {month + \" \" + currentYear}\n        </Option>\n      );\n    }\n\n    return options;\n  };\n\n  onDateClick = day => {\n    this.setState({\n      selectedDate: day\n    });\n  };\n\n  nextMonth = () => {\n    this.setState(\n      {\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n      },\n      function() {\n        const newDate = new Date(\n          dateFns.getYear(this.state.currentMonth),\n          dateFns.getMonth(this.state.currentMonth),\n          1\n        );\n        this.setState(\n          {\n            selectedDate: newDate\n          },\n          this.fetchEventsAgain\n        );\n        //this.renderHeader();\n      }\n    );\n  };\n\n  prevMonth = () => {\n    this.setState(\n      {\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n      },\n      function() {\n        const newDate = new Date(\n          dateFns.getYear(this.state.currentMonth),\n          dateFns.getMonth(this.state.currentMonth),\n          1\n        );\n        this.setState(\n          {\n            selectedDate: newDate\n          },\n          this.fetchEventsAgain\n        );\n        //this.renderHeader();\n      }\n    );\n  };\n\n  onChangeReminderStatus = e => {\n    this.setState({ showReminder: e.target.checked });\n  };\n\n  onChangeAppointmentStatus = e => {\n    this.setState({ showAppointment: e.target.checked });\n  };\n\n  renderHeader() {\n    const dateFormat = \"MMM YYYY\";\n    const { showAppointment, showReminder } = this.state;\n    const {\n      onChangeAppointmentStatus,\n      onChangeReminderStatus,\n      formatMessage\n    } = this;\n\n    return (\n      <div className=\"calendar-header background-gray\">\n        <div className=\"calendar-header-top\">\n          <div className=\"left\">\n            {config.CALENDAR_SYNC === true && (\n              <Button className=\"sync-btn\">\n                {formatMessage(messages.syncCalendar)}\n              </Button>\n            )}\n          </div>\n          <div className=\"right\">\n            <Select\n              defaultValue={dateFns.format(this.state.currentMonth, dateFormat)}\n              className={\"month-dropdown\"}\n              suffixIcon={dropdownIcon}\n              onChange={this.changeMonth}\n              value={dateFns.format(this.state.currentMonth, dateFormat)}\n            >\n              {this.getMonthsData()}\n            </Select>\n            <Icon\n              className=\"mr10 ml20 clickable\"\n              type=\"left\"\n              onClick={this.prevMonth}\n            />\n            <Icon\n              className=\"mr10 clickable\"\n              type=\"right\"\n              onClick={this.nextMonth}\n            />\n          </div>\n        </div>\n        <div className=\"calendar-header-bottom\">\n          <div className=\"show\">{formatMessage(messages.show)}</div>\n          <Checkbox\n            className={\"calendar_sync_line settings-checkbox\"}\n            checked={showAppointment}\n            onChange={onChangeAppointmentStatus}\n          >\n            <span className=\"fontsize14 medium dark\">\n              {formatMessage(messages.appointments)}\n            </span>\n          </Checkbox>\n          <Checkbox\n            className={\"calendar_sync_line settings-checkbox\"}\n            checked={showReminder}\n            onChange={onChangeReminderStatus}\n          >\n            <span className=\"fontsize14 medium  dark\">\n              {formatMessage(messages.reminder)}\n            </span>\n          </Checkbox>\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dateFormat = \"dd\";\n    const days = [];\n\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"days\" key={i}>\n          {dateFns\n            .format(dateFns.addDays(startDate, i), dateFormat)\n            .slice(0, -1)}\n        </div>\n      );\n    }\n    return (\n      <div className=\"calendar-row border-bottom background-gray\">{days}</div>\n    );\n  }\n\n  renderCells() {\n    const { currentMonth, selectedDate } = this.state;\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    const {\n      events: { scheduleEventListByDate: scheduleEventList, events } = {}\n    } = this.props;\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        const eventData = [];\n        const today = dateFns.format(day, \"YYYY-MM-DD\");\n        const { showAppointment, showReminder } = this.state;\n        if (scheduleEventList) {\n          const currentDateEvents = scheduleEventList[today] || [];\n          if (currentDateEvents.length > 0) {\n            currentDateEvents.forEach(id => {\n              const event = events[id];\n              if (event) {\n                if (showAppointment && showReminder) {\n                  eventData.push(events[id]);\n                } else if (showAppointment && !showReminder) {\n                  if (event.eventType === EVENT_TYPE.APPOINTMENT) {\n                    eventData.push(events[id]);\n                  }\n                } else if (showReminder && !showAppointment) {\n                  if (event.eventType === EVENT_TYPE.REMINDER) {\n                    eventData.push(events[id]);\n                  }\n                }\n              }\n            });\n          }\n        }\n        const cloneDay = day;\n        const disableDate =\n          dateFns.isBefore(cloneDay, monthStart) ||\n          dateFns.isAfter(cloneDay, monthEnd);\n\n        days.push(\n          <Cell\n            key={cloneDay}\n            date={cloneDay}\n            events={eventData}\n            onDateClick={this.onDateClick}\n            isSelected={dateFns.isSameDay(cloneDay, selectedDate)}\n            disabled={disableDate}\n          />\n        );\n        day = dateFns.addDays(day, 1);\n      }\n      rows.push(\n        <div className=\"calendar-row white tall\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return rows;\n  }\n\n  handleUpdateVital = id => {\n    const { auth, users = {} } = this.props;\n    const { basicInfo = {} } = users[auth] || {};\n    const { category = \"\" } = basicInfo;\n\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: { currentMedicalField: \"Vital\" }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Vital\");\n    }\n  };\n\n  handleUpdateClinicalReading = id => {\n    const { auth, users = {} } = this.props;\n    const { basicInfo = {} } = users[auth] || {};\n    const { category = \"\" } = basicInfo;\n\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Clinical-Reading\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Clinical-Reading\");\n    }\n  };\n\n  handleUpdateMedication = id => {\n    const { auth, users = {} } = this.props;\n    const { basicInfo = {} } = users[auth] || {};\n    const { category = \"\" } = basicInfo;\n\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.history.push({\n        pathname: `/patient/${id}/Medical-Details`,\n        state: {\n          currentMedicalField: \"Medication\"\n        }\n      });\n    } else if (category === USER_CATEGORY.PATIENT) {\n      this.props.history.push(\"/medicals/Medication\");\n    }\n  };\n\n  handleOk = e => {\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  handleCancel = e => {\n    const { handleModalVisible } = this.props;\n    handleModalVisible(false);\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  renderDateAndLine = () => {\n    const { selectedDate } = this.state;\n    return (\n      <div className=\"date-and-line\">\n        {dateFns.format(selectedDate, \"DD MMM YYYY\")}\n      </div>\n    );\n  };\n\n  renderEvents() {\n    const { selectedDate, showAppointment, showReminder } = this.state;\n    const {\n      events: { events = {}, scheduleEventListByDate = {} } = {},\n      calendarUserId\n    } = this.props;\n    const today = dateFns.format(selectedDate, \"YYYY-MM-DD\");\n    let eventsData = [];\n    if (scheduleEventListByDate) {\n      const currentDate = scheduleEventListByDate[today] || [];\n      currentDate.forEach(id => {\n        if (events[id]) {\n          const event = events[id];\n          eventsData.push(event);\n        }\n      });\n    }\n    let options = [];\n    eventsData.forEach(event => {\n      const { id } = event;\n      const card =\n        event.eventType === EVENT_TYPE.REMINDER && showReminder ? (\n          <ReminderCard id={id} calendarUserId={calendarUserId} modal={true} />\n        ) : showAppointment && event.eventType === EVENT_TYPE.APPOINTMENT ? (\n          <AppointmentCard\n            id={id}\n            calendarUserId={calendarUserId}\n            modal={true}\n          />\n        ) : null;\n\n      if (card !== null) {\n        options.push(\n          <Fragment key={event.id}>\n            <div className=\"black pr16 fontsize16\">{card}</div>\n          </Fragment>\n        );\n      }\n    });\n\n    return <div className=\"mobile-card-wrapper hide-scroll\">{options}</div>;\n  }\n\n  render() {\n    return (\n      <div className=\"m calendar-full\">\n        {this.renderHeader()}\n        {this.renderDays()}\n        {this.renderCells()}\n        {this.renderDateAndLine()}\n        {this.renderEvents()}\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Calendar);\n","import Calendar from \"../../Components/Calendar\";\nimport { connect } from \"react-redux\";\nimport { fetchEventsData, pollEventsData } from \"../../../modules/events\";\n\nconst mapStateToProps = state => {\n  const { events, users, auth: { authenticated_user } = {} } = state;\n  return {\n    events: events,\n    users: users,\n    viewerId: authenticated_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEventsData: userId => (startDate, endDate) =>\n      dispatch(fetchEventsData(userId, startDate, endDate)),\n    pollEventsData: () => dispatch(pollEventsData())\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { calendarUserId, match } = ownProps;\n  const { users, events, viewerId } = stateProps;\n  const {\n    fetchEventsData: fetchEventsDataDispatch,\n    pollEventsData\n  } = dispatchProps;\n  const viewer = users[viewerId] || {};\n  const fetchEventsData = fetchEventsDataDispatch(calendarUserId);\n  const show = match.params ? match.params.show : \"all\";\n\n  return {\n    calendarUserId,\n    viewer,\n    events,\n    fetchEventsData,\n    pollEventsData,\n    show,\n    match\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergePropsToState\n)(Calendar);\n","import React, { Component } from \"react\";\nimport Calendar from \"../../../Containers/Calendar\";\nimport \"../styles/style.less\";\n\nexport class DashBoardCalendar extends Component {\n  componentDidMount() {\n    const {\n      user_data: {\n        basicInfo: { _id }\n      },\n      fetchAppointmentsHistory\n    } = this.props;\n    fetchAppointmentsHistory(_id);\n  }\n\n  goToAppointmentHistory = () => {\n    this.props.history.push(`/appointment-history`);\n  };\n\n  render() {\n    const {\n      user_data: {\n        basicInfo: { _id }\n      }\n    } = this.props;\n    return (\n      <div className=\"my-calendar\">\n        <div className=\"calendar-component hide-scroll\">\n          <Calendar myCalendar={true} {...this.props} calendarUserId={_id} />\n        </div>\n        <div\n          className=\"appointment-history-button\"\n          onClick={this.goToAppointmentHistory}\n        >\n          View Appointment History\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DashBoardCalendar;\n","import { Card } from \"antd\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nimport { ENTITY } from \"../../../constant\";\nimport location from \"../../../Assets/images/ico-location.svg\";\nimport capsule from \"../../../Assets/images/ico-capsule-tiny.svg\";\nimport patients from \"../../../Assets/images/ico-users.svg\";\nimport expiry from \"../../../Assets/images/ico-expiry.svg\";\nimport \"./style.less\";\nimport Col from \"antd/es/grid/col\";\n\nconst ACTIVE = \"Active\";\nconst ProgramCard = ({ data, handleOnClick }) => {\n  const createAt = moment(data.createdAt).format(\"DD MMM YYYY\");\n  const expiresOn = moment(data.expireOn).format(\"DD MMM YYYY\");\n  let duration = `${createAt}-${expiresOn}`;\n  if (data.Valid === ACTIVE) duration = `Expires on ${expiresOn}`;\n\n  return (\n    <Col key={data.title} xs={12} sm={12} md={6} lg={6}>\n      <Card\n        className=\"programs clickable\"\n        key={data.title}\n        onClick={e => {\n          handleOnClick(ENTITY.PROGRAM, data.id);\n        }}\n      >\n        <div className={`${data.Valid}now`}>\n          <span className=\"fontsize12\">{data.Valid}</span>\n        </div>\n        <h4 className=\"programData\">{data.title}</h4>\n        <ul>\n          <li>\n            <span className=\"fontsize12 programData\">\n              <img alt=\"\" src={location} className=\"cardImg\" />\n              {data.city}, {data.country}\n            </span>\n          </li>\n          <li>\n            <span className=\"fontsize12 programData\">\n              <img alt=\"\" className=\"cardImg\" src={expiry} />\n              {duration}\n            </span>\n          </li>\n          <li>\n            <span className=\"fontsize12 programData\">\n              <img alt=\"\" className=\"cardImg\" src={capsule} />\n              {data.products} Products\n            </span>\n          </li>\n          <li>\n            <span className=\"fontsize12 programData\">\n              <img alt=\"\" className=\"cardImg\" src={patients} />\n              {data.patients} Patients\n            </span>\n          </li>\n        </ul>\n      </Card>\n    </Col>\n  );\n};\n\nexport default ProgramCard;\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Select, Tabs, Row, Col } from \"antd\";\nimport moment from \"moment\";\nimport { ALL_SORT_BY } from \"../../../../constant\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport isEqual from \"lodash-es/isEqual\";\nimport ProgramCard from \"../../Cards/programCard\";\nimport messages from \"../message\";\nimport DownArrow from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\n\nimport \"../styles/program_style.less\";\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nconst Active = \"Active\";\nclass DashBoardPrograms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFilterType: ALL_SORT_BY.NAME,\n      active_programs: [],\n      expired_programs: []\n    };\n    this.getProgramResult = this.getProgramResult.bind(this);\n    this.setProgramExpiredActiveState = this.setProgramExpiredActiveState.bind(\n      this\n    );\n  }\n  componentDidMount() {\n    const { program_data, getMyPrograms } = this.props;\n    getMyPrograms();\n    if (!isEmpty(program_data)) {\n      this.setProgramExpiredActiveState();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { program_data, getMyPrograms } = this.props;\n    const { program_data: prevProgramData } = prevProps;\n    if (!isEqual(prevProgramData, program_data)) {\n      if (!isEmpty(program_data)) {\n        this.setProgramExpiredActiveState();\n      } else {\n        getMyPrograms();\n      }\n    }\n  }\n\n  sortResults(data) {\n    let currentFilterType = this.state.currentFilterType;\n    switch (currentFilterType) {\n      case ALL_SORT_BY.RECENTLY_UPDATED:\n        data.sort((a, b) => {\n          return moment(a.updatedAt).diff(b.updatedAt);\n        });\n        return data;\n      case ALL_SORT_BY.NAME:\n        data.sort((a, b) => {\n          let nameA = a.name.toLowerCase(),\n            nameB = b.name.toLowerCase();\n          if (nameA < nameB) return -1;\n          if (nameA > nameB) return 1;\n          return 0;\n        });\n        return data;\n      case ALL_SORT_BY.DATE_ADDED:\n        data.sort((a, b) => {\n          return moment(a.activeFrom).diff(b.activeFrom);\n        });\n        return data;\n      default:\n        return data;\n    }\n  }\n\n  setProgramExpiredActiveState() {\n    const { program_data } = this.props;\n    let active_programs_list = [];\n    let expired_programs_list = [];\n    Object.keys(program_data).forEach((key, index) => {\n      let value = program_data[key];\n      let isValid = moment(value.expiresOn).isAfter(new Date())\n        ? \"Active\"\n        : \"Expired\";\n      if (isValid === Active) active_programs_list.push(value);\n      else {\n        expired_programs_list.push(value);\n      }\n    });\n    active_programs_list = this.sortResults(active_programs_list);\n    expired_programs_list = this.sortResults(expired_programs_list);\n    this.setState({\n      active_programs: active_programs_list,\n      expired_programs: expired_programs_list\n    });\n  }\n\n  getProgramResult() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n    let active_count = 0;\n    let expired_count = 0;\n    let active_program_result_cards = this.state.active_programs.map(\n      (value, key) => {\n        const { patients = [] } = value;\n        const totalPatients = patients.length;\n        let cardData = {};\n        active_count += 1;\n        cardData.Valid = \"Active\";\n        cardData.title = value.name;\n        cardData.city = value.targetLocation.city;\n        cardData.country = value.targetLocation.country;\n        cardData.patients = totalPatients;\n        cardData.products = value.products.length;\n        cardData.createdAt = value.createdAt;\n        cardData.expireOn = value.expiresOn;\n        return (\n          <ProgramCard\n            data={cardData}\n            key={`act-${key}`}\n            handleOnClick={() => {\n              this.props.history.push(`/program/${value._id}`);\n            }}\n          />\n        );\n      }\n    );\n    let expired_program_result_cards = this.state.expired_programs.map(\n      (value, key) => {\n        let cardData = {};\n        expired_count += 1;\n        cardData.Valid = \"Expired\";\n        cardData.title = value.name;\n        cardData.city = value.targetLocation.city;\n        cardData.country = value.targetLocation.country;\n        cardData.patients = \"37\";\n        cardData.products = value.products.length;\n        cardData.createdAt = value.createdAt;\n        cardData.expireOn = value.expiresOn;\n        return (\n          <ProgramCard\n            data={cardData}\n            key={`ex-${key}`}\n            handleOnClick={() => {\n              this.props.history.push(`/program/${value._id}`);\n            }}\n          />\n        );\n      }\n    );\n\n    return (\n      <Tabs\n        className={\"tab-title fontsize14 w100\"}\n        defaultActiveKey=\"1\"\n        onChange={this.callback}\n        tabBarStyle={{ color: \"#7f888d\", fontFamily: \"AvenirNext-Medium\" }}\n      >\n        <TabPane\n          tab={`${formatMessage(\n            messages.careCoachActiveProgram\n          )} (${active_count})`}\n          key=\"1\"\n          className={\"tabscontent flex\"}\n        >\n          <Row className=\"full-width\" gutter={8}>\n            {active_program_result_cards}\n          </Row>\n        </TabPane>\n        <TabPane\n          tab={`${formatMessage(\n            messages.careCoachExpiredProgram\n          )} (${expired_count})`}\n          key=\"2\"\n          className={\"tabscontent flex\"}\n        >\n          <Row className=\"full-width\" gutter={8}>\n            {expired_program_result_cards}\n          </Row>\n        </TabPane>\n      </Tabs>\n    );\n  }\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"care-coach-program\">\n          <div className=\"program-heading-container\">\n            <div className=\"heading\">\n              {formatMessage(messages.careCoachProgramHeading)}\n            </div>\n            <Select\n              optionFilterProp=\"children\"\n              className=\"select\"\n              //style={{ width: \"169px\", height: \"24px\" }}\n              onChange={value => {\n                this.setState({ currentFilterType: value }, () => {\n                  this.setProgramExpiredActiveState();\n                });\n              }}\n              value={`Sort by: ${this.state.currentFilterType}`}\n              suffixIcon={<img alt=\"\" src={DownArrow} className=\"arrowImg\" />}\n            >\n              <Option value={ALL_SORT_BY.NAME}>\n                {formatMessage(messages.careCoachExpiredSortProgramByName)}\n              </Option>\n              <Option value={ALL_SORT_BY.DATE_ADDED}>\n                {formatMessage(messages.careCoachExpiredSortProgramByDate)}\n              </Option>\n            </Select>\n          </div>\n          <div className=\"program-body-container\">\n            {this.getProgramResult()}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(DashBoardPrograms);\n","import React from \"react\";\nimport \"./style.less\";\nimport moment from \"moment\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\n\nconst SurveyTemplateCard = ({ data, id, handleOnClick }) => {\n  const { title, questions, description, time_to_complete, createdAt } = data;\n  const checkIfNew = moment().diff(createdAt, \"days\", true);\n  let isNew = false;\n  if (checkIfNew >= 0 && checkIfNew <= 7) {\n    isNew = true;\n  }\n  return (\n    <div\n      className=\"survey-card-mobile mr16 mb16 clickable \"\n      key={id}\n      onClick={e => handleOnClick(id)}\n    >\n      <div className=\"card-content\">\n        <div className=\"flex align-items-center justify-content-space-between\">\n          <div className=\"fontsize14 bold dark mb8\">{title}</div>\n          {isNew && <div className={isNew ? \"newSurvey\" : \"\"}>New</div>}\n        </div>\n        <div className=\"fontsize14 dark medium mb4 flex align-itmes-center\">\n          <span className=\"fontsize14 dark medium mb4 \">\n            {questions.length} Question\n          </span>{\" \"}\n          <span className=\"dot dark ml5 mr5 mt8\" />{\" \"}\n          <span className=\"fontsize14 dark medium mb4 \">\n            {time_to_complete} to complete\n          </span>\n        </div>\n        <div>\n          <LinesEllipsis\n            text={\n              description\n                ? description.length < 50\n                  ? description\n                  : description.substr(0, 50) + \"...\"\n                : \"\"\n            }\n            maxLine=\"2\"\n            ellipsis=\"...\"\n            trimRight\n            basedOn=\"letters\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SurveyTemplateCard;\n","import React, { Component, Fragment } from \"react\";\nimport { Col } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport SurveyTemplateCard from \"../Cards/surveyTemplatesCard\";\nimport \"./style.less\";\n\nclass Surveys extends Component {\n  render() {\n    const { surveytemplates = [], handleOnClick } = this.props;\n    const { surveytemplatesId } = this.props;\n    return (\n      <Fragment>\n        {surveytemplatesId.map(id => {\n          return (\n            <Col sm={12} md={6} key={id}>\n              <SurveyTemplateCard\n                data={surveytemplates[id]}\n                id={id}\n                handleOnClick={handleOnClick}\n              />\n            </Col>\n          );\n        })}\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Surveys);\n","import React, { Component, Fragment } from \"react\";\nimport { Col } from \"antd\";\nimport SurveyCard from \"../Cards/surveyCard\";\nimport { downloadReport } from \"../Surveys/completedSurvey\";\n\nclass InprogressSurveys extends Component {\n  componentDidMount() {\n    const { fetchSurveys } = this.props;\n    fetchSurveys(\"inprogress\");\n  }\n\n  render() {\n    const {\n      surveys_data,\n      programs_data,\n      handleOnClick,\n      inprogressSurveyIds = []\n    } = this.props;\n\n    return (\n      <Fragment>\n        {inprogressSurveyIds.map(survey => {\n          const { _id: id } = survey;\n          return (\n            <Col xs={12} sm={12} md={6} key={id}>\n              <SurveyCard\n                key={id}\n                data={surveys_data[id]}\n                id={id}\n                programs_data={programs_data}\n                handleOnClick={handleOnClick}\n                handleOnDownload={downloadReport}\n              />\n            </Col>\n          );\n        })}\n      </Fragment>\n    );\n  }\n}\n\nexport default InprogressSurveys;\n","import React, { Component, Fragment } from \"react\";\nimport { Row, Input, Select, Tabs, Col } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport search from \"../../../../Assets/images/ico-search.svg\";\nimport SurveyCard from \"../../Surveys\";\nimport InprogressSurveys from \"../../Surveys/inprogressSurveys\";\nimport CompletedSurveys from \"../../Surveys/completedSurvey\";\nimport DownArrow from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport messages from \"../message\";\nimport { SURVEYS, ALL_SORT_BY } from \"../../../../constant\";\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nclass Survey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      surveytemplatesId: [],\n      currentTab: \"AllTemplates\",\n      inprogressSurvey: [],\n      completeSurvey: [],\n      sortBy: \"\"\n    };\n  }\n  componentDidMount() {\n    const { fetchProgramsData, fetchCareCoachSurveys } = this.props;\n    fetchCareCoachSurveys();\n    // fetchSurveyTemplates();\n    fetchProgramsData();\n    const { show } = this.props.match.params;\n    if (show && !isEmpty(show)) {\n      this.setState({ currentTab: show });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.surveytemplates !== prevProps.surveytemplates) {\n      const {\n        surveytemplates = [],\n        inprogressSurvey,\n        completeSurvey\n      } = this.props;\n      const surveytemplatesId = Object.keys(surveytemplates);\n      this.setState({\n        surveytemplatesId: surveytemplatesId,\n        completeSurvey: completeSurvey,\n        inprogressSurvey: inprogressSurvey\n      });\n    }\n    if (this.props.match.params !== prevProps.match.params) {\n      const { show } = this.props.match.params;\n      if (show && !isEmpty(show)) {\n        this.setState({ currentTab: show });\n      } else {\n        this.setState({ currentTab: \"AllTemplates\" });\n      }\n    }\n  }\n\n  handleOnClick = id => {\n    this.props.history.replace(`/create-survey/template/${id}`);\n  };\n\n  handleOnClickInprogress = id => {\n    this.props.history.push(`/survey/${id}`);\n  };\n\n  handleOnTabChange = key => {\n    const { fetchSurveys } = this.props;\n    if (key === SURVEYS.INPROGRESS) {\n      this.setState({ currentTab: SURVEYS.INPROGRESS });\n      fetchSurveys(\"inprogress\");\n      this.props.history.replace(\"/surveys/Inprogress\");\n    } else if (key === SURVEYS.COMPLETED) {\n      this.setState({ currentTab: SURVEYS.COMPLETED });\n      fetchSurveys(\"completed\");\n      this.props.history.replace(\"/surveys/Completed\");\n    } else {\n      this.setState({ currentTab: SURVEYS.ALL_TEMPLATES });\n      this.props.history.replace(\"/surveys\");\n    }\n  };\n\n  handleSortBy = key => {\n    // console.log('key', key)\n    const { currentTab } = this.state;\n\n    if (currentTab === SURVEYS.ALL_TEMPLATES) {\n      this.sortTemplateBasedOn(key);\n    } else {\n      this.sortSurveyBasedOn(key);\n    }\n  };\n\n  handleSearchChange = e => {\n    this.setState({ query: e.target.value });\n\n    this.getSurveyTemplates(e.target.value);\n    this.getInprogressSurvey(e.target.value);\n    this.getCompleteSurvey(e.target.value);\n  };\n\n  getSurveyTemplates(query) {\n    //\n    const { surveytemplates } = this.props;\n    const surveytemplatesIds = Object.keys(surveytemplates);\n    let surveyData = [];\n    surveyData = surveytemplatesIds.filter(id => {\n      const { title } = surveytemplates[id];\n      const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n      // console.log(\"---name---\", regex,regex.test(name))\n\n      if (regex.test(title)) {\n        return true;\n      }\n      return false;\n    });\n\n    this.setState({ surveytemplatesId: surveyData });\n  }\n\n  getCompleteSurvey(query) {\n    //\n    const { surveys_data, completeSurvey } = this.props;\n    let surveyData = [];\n\n    surveyData = completeSurvey.filter(survey => {\n      const { _id: id } = survey;\n      const { template: { title = \"\" } = {} } = surveys_data[id] || {};\n      const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n      // console.log(\"---name---\", regex,regex.test(name))\n      if (regex.test(title)) {\n        return true;\n      }\n      return false;\n    });\n\n    this.setState({ completeSurvey: surveyData });\n  }\n\n  getInprogressSurvey(query) {\n    const { surveys_data, inprogressSurvey } = this.props;\n    let surveyData = [];\n    surveyData = inprogressSurvey.filter(survey => {\n      const { _id: id } = survey;\n      const { template: { title = \"\" } = {} } = surveys_data[id] || {};\n      const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n      // console.log(\"---name---\", regex,regex.test(name))\n\n      if (regex.test(title)) {\n        return true;\n      }\n      return false;\n    });\n\n    this.setState({ inprogressSurvey: surveyData });\n  }\n\n  sortTemplateBasedOn(sortBy) {\n    const { surveytemplates } = this.props;\n    const { surveytemplatesId } = this.state;\n    switch (sortBy) {\n      case ALL_SORT_BY.DATE_SENT: {\n        let surveyDataSorbtedByDateSent = [];\n        surveyDataSorbtedByDateSent = surveytemplatesId.sort((a, b) => {\n          const { createdAt: ACreatedAt } = surveytemplates[a];\n          const { createdAt: BCreatedAt } = surveytemplates[b];\n          if (ACreatedAt < BCreatedAt) {\n            return 1;\n          }\n          if (ACreatedAt > BCreatedAt) {\n            return -1;\n          }\n          return 0;\n        });\n        this.setState({ surveytemplatesId: surveyDataSorbtedByDateSent });\n\n        break;\n      }\n\n      case ALL_SORT_BY.NAME: {\n        let surveyDataSorbtedByName = [];\n        surveyDataSorbtedByName = surveytemplatesId.sort((a, b) => {\n          const { title: Atitle } = surveytemplates[a];\n          const { title: Btitle } = surveytemplates[b];\n          if (Atitle < Btitle) {\n            return -1;\n          }\n          if (Atitle > Btitle) {\n            return 1;\n          }\n          return 0;\n        });\n        this.setState({ surveytemplatesId: surveyDataSorbtedByName });\n\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  sortSurveyByDate = (surveys = []) => {\n    const { surveys_data = {} } = this.props;\n\n    return surveys.sort((a, b) => {\n      const { _id: Aid } = a;\n      const { updatedAt: AupdatedAt } = surveys_data[Aid] || {};\n      const { _id: Bid } = b;\n      const { updatedAt: BupdatedAt } = surveys_data[Bid] || {};\n      if (AupdatedAt < BupdatedAt) {\n        return 1;\n      }\n      if (AupdatedAt > BupdatedAt) {\n        return -1;\n      }\n      return 0;\n    });\n  };\n\n  sortSurveyByName = (surveys = []) => {\n    const { surveys_data = {} } = this.props;\n    return surveys.sort((a, b) => {\n      const { _id: Aid } = a;\n      const { template: { title: Atitle = \"\" } = {} } = surveys_data[Aid] || {};\n      const { _id: Bid } = b;\n      const { template: { title: Btitle = \"\" } = {} } = surveys_data[Bid] || {};\n      if (Atitle < Btitle) {\n        return -1;\n      }\n      if (Atitle > Btitle) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  sortSurveyBasedOn(sortBy) {\n    const { completeSurvey = [], inprogressSurvey = [] } = this.state;\n    switch (sortBy) {\n      case ALL_SORT_BY.DATE_SENT: {\n        this.setState({\n          completeSurvey: this.sortSurveyByDate(completeSurvey),\n          inprogressSurvey: this.sortSurveyByDate(inprogressSurvey)\n        });\n        break;\n      }\n      case ALL_SORT_BY.NAME: {\n        this.setState({\n          completeSurvey: this.sortSurveyByName(completeSurvey),\n          inprogressSurvey: this.sortSurveyByName(inprogressSurvey)\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      surveytemplates = {},\n      intl: { formatMessage }\n    } = this.props;\n    const {\n      surveytemplatesId,\n      inprogressSurvey,\n      completeSurvey,\n      currentTab\n    } = this.state;\n    const { handleOnClick, handleOnClickInprogress, handleSearchChange } = this;\n    return (\n      <Fragment>\n        <div className=\"survey mt24\">\n          <Row>\n            <div className=\"fontsize22 dark bold w100 mb16\">\n              {formatMessage(messages.survey)}\n            </div>\n          </Row>\n          <Row gutter={{ sm: 24, md: 24 }} className=\"w100\">\n            <Col sm={12} md={6}>\n              <Input\n                className=\"survey-input mb12\"\n                placeholder=\"Search Survey\"\n                prefix={\n                  <img alt=\"\" src={search} className=\"search-icons mr16\" />\n                }\n                onChange={handleSearchChange}\n              />\n            </Col>\n            <Col sm={12} md={6}>\n              <div className=\"sortBy flex align-items-center \">\n                <div className=\"fontsize14 bold dark pl10\">\n                  {formatMessage(messages.sortBy)}\n                </div>\n                <Select\n                  optionFilterProp=\"children\"\n                  suffixIcon={\n                    <img alt=\"\" src={DownArrow} className=\"arrow-img\" />\n                  }\n                  defaultValue={formatMessage(messages.dateSent)}\n                  className=\"flex align-items-center flex-grow-1\"\n                  onChange={this.handleSortBy}\n                >\n                  <Option key={formatMessage(messages.dateSent)}>\n                    {formatMessage(messages.dateSent)}\n                  </Option>\n                  <Option key={formatMessage(messages.name)}>\n                    {formatMessage(messages.name)}\n                  </Option>\n                </Select>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"mt24\">\n            <Tabs\n              className={\"tabstitle fontsize14 w100\"}\n              defaultActiveKey=\"AllTemplates\"\n              tabBarStyle={{\n                color: \"#7f888d\",\n                fontFamily: \"AvenirNext-Medium\"\n              }}\n              activeKey={currentTab}\n              onChange={this.handleOnTabChange}\n            >\n              <TabPane\n                tab={`All Templates (${surveytemplatesId.length})`}\n                key=\"AllTemplates\"\n                className={\"tabscontent flex flex-wrap\"}\n              >\n                <Row gutter={{ sm: 12, md: 24 }} className=\"w100\">\n                  <SurveyCard\n                    surveytemplates={surveytemplates}\n                    surveytemplatesId={surveytemplatesId}\n                    handleOnClick={handleOnClick}\n                  />\n                </Row>\n              </TabPane>\n              <TabPane\n                tab={`Inprogress (${inprogressSurvey.length})`}\n                key=\"Inprogress\"\n                className={\"tabscontent flex flex-wrap\"}\n              >\n                <Row gutter={{ sm: 12, md: 24 }}>\n                  <InprogressSurveys\n                    {...this.props}\n                    handleOnClick={handleOnClickInprogress}\n                    inprogressSurveyIds={inprogressSurvey}\n                  />\n                </Row>\n              </TabPane>\n              <TabPane\n                tab={`Completed (${completeSurvey.length})`}\n                key=\"Completed\"\n                className={\"tabscontent flex flex-wrap\"}\n              >\n                <Row gutter={{ sm: 12, md: 24 }}>\n                  <CompletedSurveys\n                    {...this.props}\n                    handleOnClick={handleOnClickInprogress}\n                    completeSurveyIds={completeSurvey}\n                  />\n                </Row>\n              </TabPane>\n            </Tabs>\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Survey);\n","import Survey from \"../../Components/DashBoard/CareCoach/DashboardSurvey\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { fetchSurveyTemplates } from \"../../../modules/surveyTemplate\";\nimport { fetchProgramsData } from \"../../../modules/program\";\nimport { fetchSurveys, fetchCareCoachSurveys } from \"../../../modules/survey\";\n\nconst mapStateToProps = state => {\n  const { programs, users, hospitals, surveytemplates, surveys } = state;\n\n  return {\n    users,\n    programs_data: programs,\n    hospitals_data: hospitals,\n    surveytemplates,\n    surveys_data: surveys,\n    is_survey_error: surveys.is_survey_error,\n    is_survey_saved: surveys.is_survey_saved,\n    survey_error: surveys.survey_error,\n    success_msg: surveys.success_msg,\n    completeSurvey: surveys.completed,\n    inprogressSurvey: surveys.inprogress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSurveyTemplates: () => dispatch(fetchSurveyTemplates()),\n    fetchCareCoachSurveys: () => dispatch(fetchCareCoachSurveys()),\n    fetchSurveys: status => dispatch(fetchSurveys(status)),\n    fetchProgramsData: () => dispatch(fetchProgramsData())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Survey)\n);\n","import React, { Component } from \"react\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport moment from \"moment\";\nimport { MEDICALS_OPTIONS, MODE } from \"../../../../constant\";\nimport MedicalDetails from \"../../../../Components/Detail/patient/medicalDetails/medicalDetails\";\n// import Basic from \"../../Detail/patient/medicalDetails/Basic\";\nimport \"../style.less\";\n\nconst PATIENTDASHBOARD = \"patient-dashboard\";\nclass PatientDashboard extends Component {\n  constructor(props) {\n    super(props);\n    const { show } = this.props.match.params;\n    this.state = {\n      userId: \"\",\n      currentMedicalField: show || \"Basic\",\n      mode: \"read\",\n      testSelected: \"\"\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props;\n    this.setState({ userId: id });\n    this.props.fetchPatient(id);\n    this.props.fetchAdverseEvent(id);\n    const { show } = this.props.match.params;\n    if (show && !isEmpty(show)) {\n      this.setState({ currentMedicalField: show });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.is_loading !== prevProps.is_loading) {\n      this.setState({ medicalConditionId: this.props.medicals_data._id });\n    }\n  }\n  onUpdate = value => {\n    this.setState({ mode: value });\n  };\n\n  ChangeMedicalField = key => {\n    // const { key } = value;\n    // console.log(\"key\", key);\n    this.setState({ currentMedicalField: key });\n    this.props.history.push(`/medicals/${key}`);\n  };\n\n  setBasicRef = ref => {\n    this.BasicformRef = ref;\n  };\n\n  setVitalRef = ref => {\n    this.VitalformRef = ref;\n  };\n\n  handleOnSubmit = () => {\n    const { currentMedicalField, medicalConditionId, userId } = this.state;\n    let form = \"\";\n    if (currentMedicalField === MEDICALS_OPTIONS.BASIC) {\n      form = this.BasicformRef.props.form;\n    } else if (currentMedicalField === MEDICALS_OPTIONS.VITAL) {\n      form = this.VitalformRef.props.form;\n    } else if (currentMedicalField === MEDICALS_OPTIONS.MEDICATION) {\n      form = this.MedicationformRef.props.form;\n    } else if (currentMedicalField === MEDICALS_OPTIONS.CLINICAL_READING) {\n      form = this.ClinicalReadingformRef.props.form;\n    }\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      switch (currentMedicalField) {\n        case MEDICALS_OPTIONS.BASIC: {\n          const { allergies, surgeriesOrFracture, others } = values;\n          const dataToSave = {\n            ...values,\n            allergies: allergies.join(\",\"),\n            surgeriesOrFracture: surgeriesOrFracture.join(\",\"),\n            others: others.join(\",\")\n          };\n          this.props.saveBasicConditionData(\n            medicalConditionId,\n            dataToSave,\n            userId\n          );\n          break;\n        }\n        case MEDICALS_OPTIONS.VITAL: {\n          const updateAt = moment().format();\n          values.updatedAt = updateAt;\n          const vital = values;\n          this.props.addVitalData(medicalConditionId, vital, userId);\n          break;\n        }\n        case MEDICALS_OPTIONS.CLINICAL_READING: {\n          this.props.UpdateClinicalReadingData(\n            medicalConditionId,\n            values,\n            userId\n          );\n          break;\n        }\n        case MEDICALS_OPTIONS.MEDICATION:\n          {\n            const updateAt = moment().format();\n            values.updatedAt = updateAt;\n            values.userId = userId;\n            const { medicine: medicines } = values;\n            const lasteelment = medicines[medicines.length - 1];\n\n            if (\n              lasteelment.product_id === \"\" ||\n              lasteelment.product_id === null\n            ) {\n              values.medicine.pop();\n            }\n            let medication = values;\n            this.props.addMedication(medication, userId);\n          }\n          break;\n\n        default:\n      }\n\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n    this.setState({ mode: MODE.READ });\n  };\n\n  render() {\n    const {\n      medicals_data = {},\n      products_data,\n      medications_data,\n      id,\n      clinicalTestTemplates_data,\n      user_data,\n      adverseEvent,\n      events,\n      openHistoricalClinicalData,\n      openVitalsData,\n      openMedicationData,\n      openPrescription\n    } = this.props;\n    const { currentMedicalField, mode } = this.state;\n\n    const {\n      ChangeMedicalField,\n      onUpdate,\n      setBasicRef,\n      setVitalRef,\n      handleOnSubmit\n    } = this;\n\n    let programId = \"\";\n    if (user_data) {\n      const { programIds } = user_data;\n      if (programIds) {\n        programId = programIds[0].id;\n      }\n    }\n\n    return (\n      <div className=\"patient-medicals\">\n        <MedicalDetails\n          {...this.props}\n          medicals_data={medicals_data}\n          mode={mode}\n          products_data={products_data}\n          medications_data={medications_data}\n          clinicalTestTemplates={clinicalTestTemplates_data}\n          setBasicRef={setBasicRef}\n          setVitalRef={setVitalRef}\n          programId={programId}\n          id={id}\n          adverseEvent={adverseEvent}\n          events={events}\n          pageIs={PATIENTDASHBOARD}\n          ChangeMedicalField={ChangeMedicalField}\n          currentMedicalField={currentMedicalField}\n          user_data={user_data}\n          openHistoricalClinicalData={openHistoricalClinicalData}\n          openMedicationData={openMedicationData}\n          openVitalsData={openVitalsData}\n          openPrescription={openPrescription}\n          handleOnUpdate={onUpdate}\n          handleOnSubmit={handleOnSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PatientDashboard;\n","import PatientMedicals from \"../../Components/DashBoard/Patient/medicalDetails\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../../modules/auth\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\nimport { fetchPatient } from \"../../../modules/page/Patientprofile\";\nimport { fetchAdverseEvent } from \"../../../modules/events\";\nimport { makeGetUserPrograms } from \"../../../modules/program/selector\";\nimport { makeGetMedicalDataOfUser } from \"../../../modules/medical/selector\";\nimport { makeAdverseEventSelector } from \"../../../modules/events/selector\";\n\nimport {\n  saveBasicConditionData,\n  addVitalData,\n  UpdateClinicalReadingData\n} from \"../../../modules/medical\";\nimport { open } from \"../../../modules/modals\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    page: { profileSetUp, patientProfile = {} },\n    users,\n    auth,\n    programs,\n    medicals,\n    medications,\n    products,\n    clinicalTestTemplates,\n    events\n  } = state;\n  const getUser = makeGetUserById();\n  const getUserPrograms = makeGetUserPrograms();\n  const getMedicalData = makeGetMedicalDataOfUser();\n  const getAdverseEvents = makeAdverseEventSelector();\n\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    id: auth.authenticated_user,\n    medications_data: medications,\n    medicals_data: getMedicalData(medicals, auth.authenticated_user),\n    profileSetupData: profileSetUp,\n    auth_data: auth,\n    authenticated: auth.authenticated,\n    program_data: getUserPrograms(programs),\n    clinicalTestTemplates_data: clinicalTestTemplates,\n    is_loading: patientProfile.is_loading,\n    adverseEvent: getAdverseEvents(events, auth.authenticated_user),\n    products_data: products,\n    events: events.events\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => {\n      dispatch(signOut());\n    },\n    fetchPatient: userId => dispatch(fetchPatient(userId)),\n    fetchAdverseEvent: userId => {\n      dispatch(fetchAdverseEvent(userId));\n    },\n    openHistoricalClinicalData: id =>\n      dispatch(open(GLOBAL_MODALS.HISTORICAL_CLINICAL_READING, id)),\n    openVitalsData: id =>\n      dispatch(open(GLOBAL_MODALS.HISTORICAL_VITALS_READING, id)),\n    openMedicationData: id =>\n      dispatch(open(GLOBAL_MODALS.HISTORICAL_MEDICATION_DATA, id)),\n    openPrescription: (userId, medication_data) =>\n      dispatch(open(GLOBAL_MODALS.PRESCRIPTION, userId, null, medication_data)),\n    saveBasicConditionData: (medicalConditionId, data, userId) =>\n      dispatch(saveBasicConditionData(medicalConditionId, data, userId)),\n    addVitalData: (medicalConditionId, data, userId) =>\n      dispatch(addVitalData(medicalConditionId, data, userId)),\n    UpdateClinicalReadingData: (medicalConditionId, data, userId) =>\n      dispatch(UpdateClinicalReadingData(medicalConditionId, data, userId)),\n    openClinicalReading: (id, purpose, testSelected) =>\n      dispatch(open(GLOBAL_MODALS.CLINICALREADING, id, purpose, testSelected)),\n    reportAdverseEvent: userId =>\n      dispatch(open(GLOBAL_MODALS.ADVERSE_EVENTS, null, null, userId))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(PatientMedicals)\n);\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport DashBoardHome from \"./common/DashboardHome\";\nimport DashBoardCalendar from \"./common/DashboardCalendar\";\nimport Programs from \"./CareCoach/DashboardPrograms\";\nimport Survey from \"../../Containers/survey\";\nimport MedicalDetails from \"../../Containers/DashBoard/dashboardMedicals\";\nimport { DASHBOARD_MENU } from \"../../../constant\";\n\nclass PageContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getTapMenuContent = this.getTapMenuContent.bind(this);\n  }\n\n  getTapMenuContent(type = null) {\n    const { setTabDashboard } = this.props;\n    switch (type) {\n      case DASHBOARD_MENU.HOME:\n        return (\n          <DashBoardHome setTabDashboard={setTabDashboard} {...this.props} />\n        );\n      case DASHBOARD_MENU.CALENDAR:\n        return <DashBoardCalendar {...this.props} />;\n      case DASHBOARD_MENU.PROGRAMS:\n        return <Programs {...this.props} />;\n      case DASHBOARD_MENU.MEDICALS:\n        return <MedicalDetails />;\n      case DASHBOARD_MENU.SURVEYS:\n        return <Survey setTabDashboard={setTabDashboard} />;\n      default:\n        return <div />;\n      //return <DashBoardHome setTabDashboard={setTabDashboard} />;\n    }\n  }\n\n  render() {\n    return this.getTapMenuContent(this.props.currentTab);\n  }\n}\n\nexport default injectIntl(PageContent);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Dropdown, Menu, Icon } from \"antd\";\nimport { GLOBAL_MODALS, USER_CATEGORY } from \"../../../constant\";\nimport messages from \"./message\";\n\nclass AddButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      should_rotate: false\n    };\n  }\n\n  handleAddButtonClick = () => {\n    this.setState((prevState, props) => {\n      return { should_rotate: !prevState.should_rotate };\n    });\n  };\n  render() {\n    const {\n      intl: { formatMessage },\n      category,\n      openModal\n    } = this.props;\n    const { should_rotate } = this.state;\n\n    const CareCoachAddmenu = (\n      <Menu>\n        <Menu.Item\n          onClick={e => {\n            openModal(GLOBAL_MODALS.EVENT_MODAL);\n            this.handleAddButtonClick();\n          }}\n        >\n          {formatMessage(messages.newAppointment)}\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={e => {\n            openModal(GLOBAL_MODALS.PATIENT_MODAL);\n            this.handleAddButtonClick();\n          }}\n        >\n          {formatMessage(messages.newPatient)}\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={e => {\n            openModal(GLOBAL_MODALS.DOCTOR_MODAL);\n            this.handleAddButtonClick();\n          }}\n        >\n          {formatMessage(messages.newDoctor)}\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={e => {\n            openModal(GLOBAL_MODALS.ADVERSE_EVENTS);\n            this.handleAddButtonClick();\n          }}\n        >\n          {formatMessage(messages.reportAdverseEvent)}\n        </Menu.Item>\n      </Menu>\n    );\n\n    const PatientAddmenu = (\n      <Menu>\n        <Menu.Item\n          onClick={e => {\n            openModal(GLOBAL_MODALS.EVENT_MODAL);\n            this.handleAddButtonClick();\n          }}\n        >\n          {formatMessage(messages.newAppointment)}\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={e => {\n            openModal(GLOBAL_MODALS.ADVERSE_EVENTS);\n            this.handleAddButtonClick();\n          }}\n        >\n          {formatMessage(messages.reportAdverseEvent)}\n        </Menu.Item>\n      </Menu>\n    );\n\n    let currentAddMenu;\n    switch (category) {\n      case USER_CATEGORY.CARE_COACH:\n        currentAddMenu = CareCoachAddmenu;\n        break;\n      case USER_CATEGORY.PATIENT:\n        currentAddMenu = PatientAddmenu;\n        break;\n      case USER_CATEGORY.DOCTOR:\n        currentAddMenu = PatientAddmenu;\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <Dropdown\n        overlay={currentAddMenu}\n        onVisibleChange={this.handleAddButtonClick}\n        trigger={[\"click\"]}\n      >\n        <div className=\"dashboard_add_button flex align-items-center justify-content-center\">\n          <Icon\n            type=\"plus\"\n            rotate={should_rotate ? \"45\" : \"0\"}\n            style={{ fontSize: \"24px\" }}\n          />\n        </div>\n      </Dropdown>\n    );\n  }\n}\n\nexport default injectIntl(AddButton);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  dashboard: {\n    id: \"app.header.dashboard\",\n    description: \"dashboard in header\",\n    defaultMessage: \"Dashboard\"\n  },\n  mycalender: {\n    id: \"app.header.mycalender\",\n    description: \"mycalender in header\",\n    defaultMessage: \"My Calendar\"\n  },\n  program: {\n    id: \"app.header.program\",\n    description: \"program in hearder\",\n    defaultMessage: \"Programs\"\n  },\n  surveys: {\n    id: \"app.header.surveys\",\n    description: \"surveys in header\",\n    defaultMessage: \"Surveys\"\n  }\n});\n\nexport default messages;\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport withRouter from \"react-router-dom/es/withRouter\";\nimport { Menu } from \"antd\";\nimport messages from \"./message\";\nimport { DASHBOARD_MENU } from \"../../../../constant\";\n\nconst CarecoachMenu = props => {\n  const {\n    intl: { formatMessage }\n  } = props;\n\n  const redirectToTab = tabValue => {\n    // if (props.history.location.pathname != \"/\") {\n    //   props.history.push({\n    //     pathname: \"/\",\n    //     state: { defaultTab: tabValue }\n    //   });\n    // } else {\n    //props.history.push(tabValue.toLowerCase());\n    props.history.push({\n      pathname: `/${tabValue}`\n      //state: { defaultTab: tabValue }\n    });\n    //setTabDashboard(tabValue);\n    //}\n  };\n\n  return (\n    <Menu mode=\"horizontal\" className=\"menu\" selectedKeys={[props.currentTab]}>\n      <Menu.Item\n        key={DASHBOARD_MENU.HOME}\n        className=\"fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.HOME);\n        }}\n      >\n        {formatMessage(messages.dashboard)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.CALENDAR}\n        className=\"fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.CALENDAR);\n        }}\n      >\n        {formatMessage(messages.mycalender)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.PROGRAMS}\n        className=\"fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.PROGRAMS);\n        }}\n      >\n        {formatMessage(messages.program)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.SURVEYS}\n        className=\"fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.SURVEYS);\n        }}\n      >\n        {formatMessage(messages.surveys)}\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default withRouter(injectIntl(CarecoachMenu));\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport withRouter from \"react-router-dom/es/withRouter\";\n\nimport { Menu } from \"antd\";\nimport messages from \"./message\";\nimport { DASHBOARD_MENU } from \"../../../../constant\";\n\nconst DoctorMenu = props => {\n  const {\n    intl: { formatMessage }\n  } = props;\n\n  const redirectToTab = tabValue => {\n    props.history.push({\n      pathname: `/${tabValue}`\n    });\n    // if (props.history.location.pathname != \"/\") {\n    //   props.history.push({\n    //     pathname: \"/\",\n    //     state: { defaultTab: tabValue }\n    //   });\n    // } else {\n    //   setTabDashboard(tabValue);\n    // }\n  };\n\n  return (\n    <Menu mode=\"horizontal\" className=\"menu\" selectedKeys={[props.currentTab]}>\n      <Menu.Item\n        key={DASHBOARD_MENU.HOME}\n        className=\"menuItem dashboard fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.HOME);\n        }}\n      >\n        {formatMessage(messages.dashboard)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.CALENDAR}\n        className=\"menuItem mycalender fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.CALENDAR);\n        }}\n      >\n        {formatMessage(messages.mycalender)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.PROGRAMS}\n        className=\"menuItem program fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.PROGRAMS);\n        }}\n      >\n        {formatMessage(messages.program)}\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default withRouter(injectIntl(DoctorMenu));\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport withRouter from \"react-router-dom/es/withRouter\";\nimport { Menu } from \"antd\";\nimport messages from \"./message\";\nimport { DASHBOARD_MENU } from \"../../../../constant\";\n\nconst PatientMenu = props => {\n  const {\n    intl: { formatMessage }\n  } = props;\n\n  const redirectToTab = tabValue => {\n    props.history.push({\n      pathname: `/${tabValue}`\n    });\n  };\n\n  return (\n    <Menu mode=\"horizontal\" className=\"menu\" selectedKeys={[props.currentTab]}>\n      <Menu.Item\n        key={DASHBOARD_MENU.HOME}\n        className=\"menuItem dashboard fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.HOME);\n        }}\n      >\n        {formatMessage(messages.dashboard)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.CALENDAR}\n        className=\"menuItem mycalender fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.CALENDAR);\n        }}\n      >\n        {formatMessage(messages.mycalender)}\n      </Menu.Item>\n      <Menu.Item\n        key={DASHBOARD_MENU.MEDICALS}\n        className=\"menuItem my-medical-detail fontsize14\"\n        onClick={() => {\n          redirectToTab(DASHBOARD_MENU.MEDICALS);\n        }}\n      >\n        {formatMessage(messages.MyMedicalDetails)}\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default withRouter(injectIntl(PatientMenu));\n","import React from \"react\";\nimport CareCoach from \"./careCoachMenu\";\nimport Doctor from \"./doctorsMenu\";\nimport Patient from \"./patientsMenu\";\n\nimport { USER_CATEGORY } from \"../../../../constant\";\n\nexport default props => {\n  const { user: { basicInfo: { category } = {} } = {}, currentTab } = props;\n  switch (category) {\n    case USER_CATEGORY.DOCTOR:\n      return <Doctor currentTab={currentTab} />;\n    case USER_CATEGORY.CARE_COACH:\n      return <CareCoach currentTab={currentTab} />;\n    case USER_CATEGORY.PATIENT:\n      return <Patient currentTab={currentTab} />;\n    default:\n      return null;\n  }\n};\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport AppHeader from \"../../Containers/Header\";\nimport PageContent from \"./PageContent\";\nimport AddButton from \"./addButton\";\nimport CommonSuccessMsg from \"../../Containers/CommonSuccessMsg\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport \"./styles/homeStyles.less\";\nimport \"./styles/program_style.less\";\nimport \"./styles/index.less\";\nimport {\n  DASHBOARD_MENU,\n  path,\n  MEDICALS_OPTIONS,\n  EVENT_TYPE,\n  SURVEYS\n} from \"../../../constant\";\nimport Footer from \"./Footer\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    const { location: { state = {} } = {} } = this.props;\n    this.state = {\n      currentTab: (state && state.defaultTab) || path.DASHBOARD.HOME,\n      modalVisible: false\n    };\n    this.setTabDashboard = this.setTabDashboard.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { url = [], params = {} } = {}, getData } = this.props;\n\n    const show = params.show ? params.show : \"\";\n    if (\n      show === EVENT_TYPE.ALL ||\n      show === EVENT_TYPE.APPOINTMENTS ||\n      show === EVENT_TYPE.REMINDERS\n    ) {\n      this.setTabDashboard(DASHBOARD_MENU.CALENDAR, { show: show });\n    } else if (show === SURVEYS.INPROGRESS || show === SURVEYS.COMPLETED) {\n      this.setTabDashboard(DASHBOARD_MENU.SURVEYS, { show: show });\n    } else if (\n      show === MEDICALS_OPTIONS.BASIC ||\n      show === MEDICALS_OPTIONS.VITAL ||\n      show === MEDICALS_OPTIONS.CLINICALREADING ||\n      show === MEDICALS_OPTIONS.MEDICATION ||\n      show === MEDICALS_OPTIONS.ADVERSEEVENTS\n    ) {\n      this.setTabDashboard(DASHBOARD_MENU.MEDICALS, { show: show });\n    } else {\n      const value = url.slice(1);\n      this.setTabDashboard(value);\n    }\n    getData();\n  }\n\n  pushTabToHistory(value, url) {\n    this.props.history.push({\n      pathname: url,\n      state: { defaultTab: value }\n    });\n  }\n\n  setTabDashboard(tabValue, params) {\n    switch (tabValue) {\n      case DASHBOARD_MENU.HOME: {\n        this.pushTabToHistory(tabValue, path.DASHBOARD.HOME);\n        break;\n      }\n      case DASHBOARD_MENU.CALENDAR: {\n        const show = params ? params.show : null;\n        if (show) {\n          const url = \"/calendar/\" + show;\n          this.pushTabToHistory(tabValue, url);\n        } else {\n          const url = \"/calendar\";\n          this.pushTabToHistory(tabValue, url);\n        }\n        break;\n      }\n      case DASHBOARD_MENU.PROGRAMS: {\n        this.pushTabToHistory(tabValue, path.DASHBOARD.PROGRAMS);\n        break;\n      }\n      case DASHBOARD_MENU.SURVEYS: {\n        const show = params ? params.show : null;\n        if (show) {\n          const url = \"/surveys/\" + show;\n          this.pushTabToHistory(tabValue, url);\n        } else {\n          const url = \"/surveys\";\n          this.pushTabToHistory(tabValue, url);\n        }\n        break;\n      }\n      case DASHBOARD_MENU.MEDICALS: {\n        const show = params ? params.show : null;\n        console.log(\"show-----------\", show);\n        if (show) {\n          const url = \"/medicals/\" + show;\n          this.pushTabToHistory(tabValue, url);\n        } else {\n          const url = \"/medicals\";\n          this.pushTabToHistory(tabValue, url);\n        }\n        break;\n      }\n      default: {\n        this.setTabDashboard(\"dashboard\");\n        this.pushTabToHistory(\"dashboard\", path.DASHBOARD.HOME);\n        break;\n      }\n    }\n\n    this.setState({ currentTab: tabValue });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { match: { path: prevPath } = {} } = prevProps;\n    const { match: { path: newPath, params = {} } = {} } = this.props;\n    if (prevPath !== newPath) {\n      if (isEmpty(params)) {\n        this.setTabDashboard(newPath.slice(1));\n      } else {\n        console.log(\"newPAth----------\", newPath);\n        console.log(\"PPPPPPPPPPPP\", params.show);\n        console.log(\n          \"------------------\",\n          newPath.substr(1, newPath.lastIndexOf(\"/\") - 1)\n        );\n        this.setTabDashboard(\n          newPath.substr(1, newPath.lastIndexOf(\"/\") - 1),\n          params\n        );\n      }\n    }\n  }\n\n  handleModalVisible = value => {\n    this.setState({ modalVisible: value });\n  };\n\n  render() {\n    const { user_data = {} } = this.props;\n    const { basicInfo = {} } = user_data;\n    const { category = \"\" } = basicInfo;\n    const { setTabDashboard, handleModalVisible } = this;\n\n    return (\n      <Fragment>\n        <AppHeader\n          setTabDashboard={this.setTabDashboard}\n          signup={false}\n          {...this.props}\n          currentTab={this.state.currentTab}\n        />\n        <div className=\"home\">\n          {basicInfo && (\n            <div className=\"content\">\n              <PageContent\n                currentTab={this.state.currentTab}\n                {...this.props}\n                setTabDashboard={setTabDashboard}\n                handleModalVisible={handleModalVisible}\n              />\n            </div>\n          )}\n          <AddButton category={category} {...this.props} />\n          <div className=\"footer\">\n            <Footer user={user_data} currentTab={this.state.currentTab} />\n          </div>\n          {!this.state.modalVisible && (\n            <CommonSuccessMsg className={\"dashboard-success-msg\"} />\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Dashboard);\n","import Dashboard from \"../../Components/DashBoard\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../../modules/auth\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\nimport {\n  fetchProgramsData,\n  fetchProgramPatients\n} from \"../../../modules/program\";\nimport { fetchAppointmentsHistory } from \"../../../modules/events\";\nimport { makeGetUserPrograms } from \"../../../modules/program/selector\";\nimport { fetchUser } from \"../../../modules/page/EditProfile\";\nimport { GLOBAL_MODALS, USER_CATEGORY, USER_STATUS } from \"../../../constant\";\nimport { open } from \"../../../modules/modals\";\n\nconst mapStateToProps = state => {\n  const {\n    page: { profileSetUp },\n    users,\n    auth,\n    programs\n  } = state;\n  const getUser = makeGetUserById();\n  const getUserPrograms = makeGetUserPrograms();\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    profileSetupData: profileSetUp,\n    auth_data: auth,\n    authenticated: auth.authenticated,\n    program_data: getUserPrograms(programs)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => {\n      dispatch(signOut());\n    },\n    getMyPrograms: () => {\n      dispatch(fetchProgramsData());\n    },\n    getProgramPatients: () => {\n      dispatch(fetchProgramPatients());\n    },\n    openModal: data => dispatch(open(data)),\n    fetchAppointmentsHistory: (userId, startDate) =>\n      dispatch(fetchAppointmentsHistory(userId, startDate)),\n    getDataOfCurrentUser: id => {\n      dispatch(fetchUser(id));\n    }\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const { auth_data: { authenticated_user } = {} } = propsFromState;\n  const { getDataOfCurrentUser, ...rest } = propsFromDispatch;\n  return {\n    ...propsFromState,\n    ...rest,\n    getData: () => propsFromDispatch.getDataOfCurrentUser(authenticated_user),\n    ...ownProps\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n  )(Dashboard)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { path } from \"../../../constant\";\nimport DashBoard from \"../../Containers/DashBoard/index\";\nimport BlankState from \"../../Containers/BlankState\";\n\nexport default class DashboardRoutes extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Switch>\n          <Route exact path={path.DASHBOARD.HOME} component={DashBoard} />\n          <Route exact path={path.DASHBOARD.PROGRAMS} component={DashBoard} />\n          <Route\n            exact\n            path={path.DASHBOARD.ONLY_CALENDAR}\n            component={DashBoard}\n          />\n          <Route exact path={path.DASHBOARD.CALENDAR} component={DashBoard} />\n          <Route exact path={path.DASHBOARD.DASHBOARD} component={DashBoard} />\n          <Route\n            exact\n            path={path.DASHBOARD.ONLY_SURVEYS}\n            component={DashBoard}\n          />\n          <Route exact path={path.DASHBOARD.SURVEYS} component={DashBoard} />\n          <Route\n            exact\n            path={path.DASHBOARD.ONLY_MEDICALS}\n            component={DashBoard}\n          />\n          <Route exact path={path.DASHBOARD.MEDICALS} component={DashBoard} />\n          <Route path=\"\" component={BlankState} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n","import { defineMessages } from \"react-intl\";\nconst messages = defineMessages({\n  dashboard: {\n    id: \"app.articles-details-dashboard\",\n    description: \"\",\n    defaultMessage: \"Dashboard\"\n  },\n\n  allArticles: {\n    id: \"app.articles-details-all\",\n    description: \"\",\n    defaultMessage: \"All Articles\"\n  },\n\n  sharedWith: {\n    id: \"app.articles-details-sharedWith\",\n    description: \"heading\",\n    defaultMessage: \"Shared with\"\n  },\n  views: {\n    id: \"app.articles-details-views\",\n    description: \"\",\n    defaultMessage: \"Views\"\n  },\n\n  source: {\n    id: \"app.articles-details-source\",\n    description: \"\",\n    defaultMessage: \"Source:\"\n  }\n});\n\nexport default messages;\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  close: {\n    id: \"app.modal.close\",\n    description: \"\",\n    defaultMessage: \"Close\"\n  },\n  save: {\n    id: \"app.modal.save\",\n    description: \"\",\n    defaultMessage: \"Save\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Row } from \"antd\";\nimport \"../style.less\";\n// import messages from \"./message\";\nimport PatientCard from \"../../Cards/patientCard\";\nimport getPatientCardData from \"../../../../Helper/dataFormater/patientCard\";\nimport getArticleListData from \"../../../../Helper/dataFormater/articleShareList\";\n\nconst getPatientCards = props => {\n  const {\n    users = {},\n    hospitals = {},\n    currentUser,\n    patients = [],\n    close\n  } = props;\n  const patientCards = [];\n  patients.forEach(patient => {\n    const patientData = users[patient] || {};\n    const formatPatientCard = getPatientCardData({\n      users,\n      hospitals,\n      currentUser,\n      patient: patientData\n    });\n    const { basicInfo: { _id } = {} } = patientData;\n    patientCards.push(\n      <PatientCard\n        key={_id}\n        data={formatPatientCard}\n        className={\"full-width i\"}\n        handleOnClick={true}\n        onClickCard={close}\n        wantCheckBox={false}\n      />\n    );\n  });\n  return patientCards;\n};\n\nclass ShareList extends Component {\n  componentDidMount() {\n    const { fetchProgramsData, fetchData, articleId } = this.props;\n    fetchProgramsData();\n    fetchData(articleId);\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  render() {\n    const {\n      article = {},\n      programs,\n      users,\n      hospitals,\n      currentUser,\n      close\n    } = this.props;\n    const listData = getArticleListData({\n      article,\n      programs,\n      users,\n      currentUser\n    });\n    return listData.map(data => {\n      const { id, title, patients = [] } = data;\n      return (\n        <div key={id} className=\"mt16 mb48\">\n          <div className=\"bold dark fontsize18 mt8 mb8\">{title}</div>\n          <Row gutter={16} className=\"w100 pt16\">\n            {\" \"}\n            {getPatientCards({\n              patients,\n              users,\n              currentUser,\n              hospitals,\n              close\n            })}\n          </Row>\n        </div>\n      );\n    });\n  }\n}\n\nexport default injectIntl(ShareList);\n","import React, { Component, Fragment } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport \"../style.less\";\nimport messages from \"./message\";\nimport List from \"./list\";\n\nclass ArticleShareWith extends Component {\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { close } = this.props;\n    close();\n  };\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  footer = () => {\n    const { formatMessage, handleCancel } = this;\n    return (\n      <Fragment>\n        <div\n          className={`flex align-items-center justify-content-end h72px mr24 ml24`}\n        >\n          <div className=\"flex align-items-center justify-content-end\">\n            <Button className=\"iqvia-btn cancel mr8\" onClick={handleCancel}>\n              {formatMessage(messages.close)}\n            </Button>\n          </div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  render() {\n    const { show: visible, isError } = this.props;\n\n    if (!visible) {\n      return null;\n    }\n\n    const { handleCancel, footer } = this;\n    const title = \"Shared with\";\n\n    const modalProps = {\n      visible: visible || isError,\n      title: title,\n      onCancel: handleCancel,\n      wrapClassName: \"m global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\" },\n      width: \"100%\",\n      footer: footer()\n    };\n\n    return (\n      <Modal {...modalProps}>\n        <div className=\"pl48 pr24 h100 overflow auto\">\n          <List {...this.props} />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(ArticleShareWith);\n","import { connect } from \"react-redux\";\nimport ArticleShareWith from \"../../Components/Modal/articleShareWith\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { close } from \"../../../modules/modals\";\nimport { fetchProgramsData } from \"../../../modules/program\";\nimport { fetchArticleParticipants } from \"../../../modules/articles\";\nimport { makeGetArticleById } from \"../../../modules/articles/selector\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\n\nconst mapStateToProps = state => {\n  const {\n    modal: { show, modalType, entityId },\n    articles,\n    programs,\n    users,\n    hospitals,\n    auth\n  } = state;\n  const getArticle = makeGetArticleById();\n  const getUser = makeGetUserById();\n  return {\n    show: show && modalType === GLOBAL_MODALS.ARTICLE_SHARE_WITH,\n    article: getArticle(articles, entityId),\n    programs,\n    currentUser: getUser(users, auth.authenticated_user),\n    users,\n    hospitals,\n    articleId: entityId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(close()),\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchData: articleId => dispatch(fetchArticleParticipants(articleId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArticleShareWith);\n","import React, { Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\n\nimport messages from \"./message\";\nimport GoBack from \"../../../../../Assets/images/ico-back.svg\";\nimport usrDp from \"../../../../../Assets/images/ico-placeholder-userdp.svg\";\nimport { getPatientDetailURL } from \"../../../../../Helper/appUrl/patient\";\n\nimport ArticleShare from \"../../../../Containers/Modal/articleShareWith\";\n\nconst getUser = props => {\n  const { data, onClick } = props;\n  const { basicInfo: { _id, profilePicLInk = usrDp } = {} } = data;\n  return (\n    <div className=\"clickable usr ml4 mr4\" key={_id} onClick={onClick(_id)}>\n      <img className=\"usr\" alt=\"usr\" src={profilePicLInk} />\n    </div>\n  );\n};\n\nconst ArticleDetailHeader = props => {\n  const {\n    article = {},\n    intl: { formatMessage },\n    history,\n    shareWith,\n    currentUser: { basicInfo: { _id: currentUserId } = {} } = {},\n    users = {}\n  } = props;\n  const { title, participants = {} } = article;\n  const sharedWith = Object.keys(participants) || [];\n\n  const handleUserClick = id => e => {\n    e.stopPropagation();\n    history.push(getPatientDetailURL(id));\n  };\n\n  let userList = [];\n  for (let i = 0; i < 2 && i < sharedWith.length; i++) {\n    const userId = sharedWith[i];\n    const data = users[userId] || {};\n    if (userId !== currentUserId) {\n      userList.push(getUser({ data, onClick: handleUserClick }));\n    }\n  }\n\n  if (userList.length + 1 < sharedWith.length) {\n    userList.push(\n      <div\n        className=\"flex align-items-center justify-content-center clickable more slate-grey medium fontsize10 ml4 mr4\"\n        key={\"more\"}\n        onClick={shareWith}\n      >{`+${sharedWith.length - 1 - userList.length}`}</div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"flex justify-content-space-between h100 full-width\">\n        <div className=\"flex align-items-center\">\n          <div className=\"back mr8\">\n            <img\n              alt=\"\"\n              src={GoBack}\n              className=\"back clickable\"\n              onClick={history.goBack}\n            />\n          </div>\n          <div className=\"ml8 mr4 dark fontsize12\">\n            {formatMessage(messages.dashboard)}\n          </div>\n          {/* <div className=\"dot dark ml4 mr4\" />\n            <div className=\" ml4 mr8 dark fontsize12\">\n              {formatMessage(messages.allArticles)}\n            </div>\n            <div className=\"ml8 mr8 dark fontsize18 medium\">{title}</div> */}\n        </div>\n\n        {userList.length > 0 && (\n          <div\n            className=\"flex align-items-center dark fontsize12\"\n            onClick={shareWith}\n          >\n            <div className=\"mr8 ml8\">{formatMessage(messages.sharedWith)}</div>\n            {userList}\n          </div>\n        )}\n      </div>\n      <ArticleShare />\n    </Fragment>\n  );\n};\n\nexport default withRouter(injectIntl(ArticleDetailHeader));\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  cancel: {\n    id: \"app.modal.cancel\",\n    description: \"\",\n    defaultMessage: \"Cancel\"\n  },\n  save: {\n    id: \"app.modal.save\",\n    description: \"\",\n    defaultMessage: \"Save\"\n  }\n});\n\nexport default messages;\n","import React, { Component, Fragment } from \"react\";\nimport { Select, Input, Row } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport throttle from \"lodash-es/throttle\";\nimport search from \"../../../../Assets/images/ico-search.svg\";\nimport DownArrow from \"../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport PatientCard from \"../../Cards/patientCard\";\nimport getPatientCardData from \"../../../../Helper/dataFormater/patientCard\";\nimport { USER_STATUS } from \"../../../../constant\";\n\nconst { Option } = Select;\n\nclass ShareToPatients extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      program: \"\"\n    };\n    this.onSearch = throttle(this.onSearch.bind(this), 1000);\n  }\n\n  componentDidMount() {\n    const { fetchProgramsData } = this.props;\n    fetchProgramsData();\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  getParentNode = t => {\n    return t.parentNode;\n  };\n\n  handleSearchChange = e => {\n    e.preventDefault();\n    this.onSearch(e.target.value);\n  };\n\n  onSearch(query) {\n    this.setState({ query }, this.fetchPatientList);\n  }\n\n  handleCardSelect = data => {\n    const { id } = data;\n    const { handleCheck } = this.props;\n    handleCheck(true, id);\n  };\n\n  handleCardDeSelect = id => {\n    const { handleCheck } = this.props;\n    handleCheck(false, id);\n  };\n\n  handleOnProgramSelect = e => {\n    const { deselectAll } = this.props;\n    deselectAll();\n    console.log(\"e :\", e);\n    this.setState({ program: e }, this.fetchPatientList);\n  };\n\n  handleSelectAll = () => {\n    const { programs = {}, selectAll } = this.props;\n    const { program } = this.state;\n    const { patients = [] } = programs[program] || {};\n    console.log(\"programs[program] :\", programs[program]);\n    selectAll(patients);\n  };\n\n  fetchPatientList = () => {\n    const { program, query } = this.state;\n    const { fetchPatient } = this.props;\n    fetchPatient(program, query);\n  };\n\n  getProgramsOption = () => {\n    const programsData = this.props.programs;\n    let options = [];\n\n    for (const key in programsData) {\n      const program = programsData[key];\n      if (program._id !== undefined && moment().isBefore(program.expiresOn)) {\n        options.push(\n          <Option key={`${program._id}`} value={program._id}>\n            {program.name}\n          </Option>\n        );\n      }\n    }\n    return options;\n  };\n\n  getPatientCards = () => {\n    const { program } = this.state;\n    const { handleCardSelect, handleCardDeSelect } = this;\n    const {\n      selectedPatients,\n      programs,\n      users = {},\n      hospitals = {},\n      article = {},\n      currentUser\n    } = this.props;\n    const { patients = [] } = programs[program] || {};\n    const { participants } = article;\n    const participantsList = Object.keys(participants);\n    const patientCards = [];\n    patients.forEach(patient => {\n      const patientData = users[patient] || {};\n      const formatPatientCard = getPatientCardData({\n        users,\n        hospitals,\n        currentUser,\n        patient: patientData\n      });\n      const { basicInfo: { _id } = {}, status } = patientData;\n      let checkbox = false;\n      let disabled = false;\n      if (selectedPatients.length > 0 && selectedPatients.includes(_id)) {\n        checkbox = true;\n      }\n\n      if (participantsList.length > 0 && participantsList.includes(_id)) {\n        checkbox = true;\n        disabled = true;\n      }\n\n      if (_id && status === USER_STATUS.ENROLLED) {\n        patientCards.push(\n          <PatientCard\n            key={_id}\n            data={formatPatientCard}\n            onPatientCardSelect={handleCardSelect}\n            onPatientCardDeselect={handleCardDeSelect}\n            className={\"full-width i\"}\n            selectedPatient={selectedPatients}\n            handleOnClick={false}\n            checkbox={checkbox}\n            disabled={disabled}\n          />\n        );\n      }\n    });\n    return patientCards;\n  };\n\n  render() {\n    const {\n      selectedPatients = [],\n      deselectAll,\n      programs = {},\n      users = {},\n      article: { participants = {} } = {}\n    } = this.props;\n    const {\n      getProgramsOption,\n      getPatientCards,\n      handleOnProgramSelect,\n      handleSearchChange,\n      handleSelectAll\n    } = this;\n    const { program } = this.state;\n    const { patients = [] } = programs[program] || {};\n    const alreadyShare = Object.keys(participants);\n\n    const totalPatients = patients.filter(id => {\n      if (alreadyShare.length > 0 && alreadyShare.includes(id)) {\n        return false;\n      }\n      const { status } = users[id] || {};\n      if (status === USER_STATUS.ENROLLED) {\n        return true;\n      } else return false;\n    });\n    const selected = selectedPatients.length;\n    const total = totalPatients.length;\n\n    return (\n      <Fragment>\n        <div className=\"full-width mt8 mb8\">\n          <div className=\"relative\">\n            <Select\n              className=\"full-width\"\n              placeholder=\"Select program\"\n              suffixIcon={\n                <img\n                  alt=\"\"\n                  src={DownArrow}\n                  className=\"arrow-img-program-select\"\n                />\n              }\n              onChange={handleOnProgramSelect}\n              getPopupContainer={this.getParentNode}\n            >\n              {getProgramsOption()}\n            </Select>\n          </div>\n        </div>\n        <div className=\"mt8 mb8  full-width\">\n          <div className=\"mt16 mb16 flex justify-content-space-between align-items-center\">\n            {total > 0 && (\n              <div className=\"flex justify-content-start align-items-center medium fontsize16 dark\">{`${selected} of ${total} patients selected`}</div>\n            )}\n            <div className=\"flex justify-content-end align-items-center\">\n              {selected > 0 && (\n                <div className=\"dark clickable ml8 mr8\" onClick={deselectAll}>\n                  Deselect all\n                </div>\n              )}\n              {selected !== total && (\n                <div className=\"dark clickable\" onClick={handleSelectAll}>\n                  Select all\n                </div>\n              )}\n            </div>\n          </div>\n          <Input\n            className=\"\"\n            placeholder=\"Search patients\"\n            onChange={handleSearchChange}\n            prefix={<img alt=\"\" src={search} className=\"search-icons\" />}\n          />\n          <Row gutter={16} className=\"w100 pt16\">\n            {getPatientCards()}\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(ShareToPatients);\n","import React, { Component, Fragment } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport \"../style.less\";\nimport messages from \"./message\";\nimport icoError from \"../../../../Assets/images/ico-err.svg\";\nimport Content from \"./content\";\nimport { USER_STATUS } from \"../../../../constant\";\n\nclass ShareArticle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: []\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  isSaveDisabled = () => {\n    const { patients } = this.state;\n    return patients.length <= 0;\n  };\n\n  handleCancel = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { close } = this.props;\n    close();\n  };\n\n  onShare = e => {\n    e.preventDefault();\n    const { share, articleId, fetchArticle } = this.props;\n    const { patients } = this.state;\n    share({ participants: patients, articleId })\n      .then(res => {\n        const { status } = res;\n        if (status) {\n          fetchArticle(articleId);\n        }\n      })\n      .catch(err => {});\n  };\n\n  deselectAll = () => {\n    this.setState({ patients: [] });\n  };\n\n  selectAll = patients => {\n    const {\n      users,\n      article: { participants = {} }\n    } = this.props;\n    const alreadyShare = Object.keys(participants);\n\n    const list = patients.filter(id => {\n      if (alreadyShare.length > 0 && alreadyShare.includes(id)) {\n        return false;\n      }\n      const { status } = users[id] || {};\n\n      if (status === USER_STATUS.ENROLLED) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    this.setState({ patients: list });\n  };\n\n  handleCheck = (checked, id) => {\n    const { patients } = this.state;\n    if (checked) {\n      this.setState({ patients: [...patients, id] });\n    } else {\n      this.setState({ patients: patients.filter(patient => patient !== id) });\n    }\n  };\n\n  footer = () => {\n    const { formatMessage, handleCancel, isSaveDisabled, onShare } = this;\n    return (\n      <Fragment>\n        <div\n          className={`flex align-items-center justify-content-end h72px mr24 ml24`}\n        >\n          <div className=\"flex align-items-center justify-content-end\">\n            <Button className=\"iqvia-btn cancel mr8\" onClick={handleCancel}>\n              {formatMessage(messages.cancel)}\n            </Button>\n            <Button\n              type=\"primary iqvia-btn\"\n              onClick={onShare}\n              disabled={isSaveDisabled()}\n            >\n              {formatMessage(messages.save)}\n            </Button>\n          </div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  render() {\n    const {\n      show: visible,\n      change_password_error,\n      is_changing_password_error = false\n    } = this.props;\n\n    const { deselectAll, selectAll, handleCheck } = this;\n    const { patients } = this.state;\n\n    if (!visible) {\n      return null;\n    }\n\n    const { handleCancel, footer } = this;\n    const title = \"Share with Patients\";\n\n    const modalProps = {\n      visible: visible,\n      title: title,\n      onCancel: handleCancel,\n      wrapClassName: \"m global-modal full-height\",\n      destroyOnClose: true,\n      bodyStyle: { height: \"100%\" },\n      width: \"100%\",\n      footer: footer()\n    };\n    return (\n      <Modal {...modalProps}>\n        <div className=\"pl48 pr24 h100 overflow auto\">\n          <Content\n            {...this.props}\n            selectedPatients={patients}\n            handleCheck={handleCheck}\n            selectAll={selectAll}\n            deselectAll={deselectAll}\n          />\n          {is_changing_password_error && (\n            <div\n              className={\n                \"w100 absolute flex row align-items-center justify-content-start\"\n              }\n              style={{\n                backgroundColor: \"#fff8f5\",\n                bottom: \"70px\",\n                height: \"40px\",\n                marginLeft: \"-48px\"\n              }}\n            >\n              <div\n                style={{\n                  display: \"block\",\n                  width: \"13px\",\n                  marginLeft: \"24px\",\n                  textAlign: \"center\"\n                }}\n              >\n                <img\n                  alt=\"\"\n                  src={icoError}\n                  className={\"w100\"}\n                  style={{ display: \"block\" }}\n                />\n              </div>\n              <div className={\"fontsize12 medium warning-color ml8\"}>\n                {change_password_error.message}\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(ShareArticle);\n","import { connect } from \"react-redux\";\nimport ArticleShare from \"../../Components/Modal/articleShare\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\nimport { close } from \"../../../modules/modals\";\nimport {\n  fetchProgramsData,\n  fetchProgramPatient\n} from \"../../../modules/program\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\nimport { makeGetArticleById } from \"../../../modules/articles/selector\";\nimport { shareArticle, fetchArticlesById } from \"../../../modules/articles\";\n\nconst mapStateToProps = state => {\n  const {\n    modal: { show, modalType, entityId },\n    auth,\n    programs,\n    users,\n    hospitals,\n    articles\n  } = state;\n\n  const getUser = makeGetUserById();\n  const getArticle = makeGetArticleById();\n  return {\n    show: show && modalType === GLOBAL_MODALS.ARTICLE_SHARE_TO_PATIENTS,\n    programs,\n    currentUser: getUser(users, auth.authenticated_user),\n    users,\n    hospitals,\n    articleId: entityId,\n    article: getArticle(articles, entityId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(close()),\n    share: data => dispatch(shareArticle(data)),\n    fetchProgramsData: () => dispatch(fetchProgramsData()),\n    fetchPatient: (programId, query) =>\n      dispatch(fetchProgramPatient(programId, null, null, { q: query })),\n    fetchArticle: articleId => dispatch(fetchArticlesById(articleId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArticleShare);\n","import React, { Component, Fragment } from \"react\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\n\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\n\nimport Header from \"./header\";\nimport messages from \"./message\";\n\nimport like from \"../../../../../Assets/images/ico_like.svg\";\nimport liked from \"../../../../../Assets/images/ico_liked.svg\";\nimport shareIcon from \"../../../../../Assets/images/share.svg\";\nimport ArticleShare from \"../../../../Containers/Modal/articleShare\";\nimport \"./style.less\";\n\nclass ArticleDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { articleId: prevArticleId } = prevProps;\n    const { articleId } = this.props;\n    if (articleId !== prevArticleId) {\n      this.fetchData();\n    }\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  fetchData = async () => {\n    const { fetchData } = this.props;\n    try {\n      const response = await fetchData();\n      const { status } = response;\n      if (status) {\n        this.setState({ loading: false });\n      }\n    } catch (err) {}\n  };\n\n  getTitle = () => {\n    const { article } = this.props;\n    const { title, timeToRead, createdAt, views = [], isFavourite } = article;\n    const { onShare, onLike } = this;\n    const date = moment(createdAt).format(\"DD MMM YYYY\");\n    const readTime = `${timeToRead} min read`;\n    let viewCount = `${views.length} views`;\n\n    return (\n      <Fragment>\n        <div className=\"flex justify-content-space-between pb16 article-title\">\n          <div className=\"flex column\">\n            <div className=\"bold fontsize22 dark\">\n              <LinesEllipsis\n                text={title}\n                maxLine=\"2\"\n                ellipsis=\"...\"\n                trimRight\n                basedOn=\"letters\"\n              />\n            </div>\n            <div className=\"flex align-items-center\">\n              <div className=\"fontsize12 subdued mr4\">{date}</div>\n              <div className=\"dot silver mr4\" />\n              <div className=\"fontsize12 subdued mr4\">{readTime}</div>\n              <div className=\"dot silver mr4\" />\n              <div className=\"fontsize12 subdued mr4\">{viewCount}</div>\n            </div>\n          </div>\n          <div className=\"mr8 ml8 flex justify-content-end\">\n            <div className=\"like mr8\">\n              <img\n                alt=\"\"\n                onClick={onLike}\n                src={!isFavourite ? like : liked}\n                className=\"like clickable\"\n              />\n            </div>\n            <div className=\"share\">\n              <img\n                alt=\"\"\n                src={shareIcon}\n                className=\"share clickable\"\n                onClick={onShare}\n              />\n            </div>\n          </div>\n          <div className=\"pb16 vl\" />\n        </div>\n        <ArticleShare />\n      </Fragment>\n    );\n  };\n\n  getDescription = () => {\n    const { article: { description } = {} } = this.props;\n    return <div className=\"dark fontsize14 mt8 mb8\">{description}</div>;\n  };\n\n  getSource = () => {\n    const { article: { url } = {} } = this.props;\n    return (\n      <div className=\"mt30 mb16 pb16 flex\">\n        <div className=\" subdued mr4 \">\n          {this.formatMessage(messages.source)}\n        </div>\n        <div className=\"flex-1\">\n          <a className=\"dark medium full-width word-break-break-all\" href={url}>\n            {url}\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  onShare = e => {\n    e.preventDefault();\n    const { shareArticle } = this.props;\n    shareArticle();\n  };\n\n  onLike = e => {\n    e.preventDefault();\n    const { makeFavouriteUnfavourite } = this.props;\n    makeFavouriteUnfavourite();\n  };\n\n  viewShareWith = e => {\n    e.preventDefault();\n    const { shareWith } = this.props;\n    shareWith();\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { getTitle, getDescription, getSource, viewShareWith } = this;\n    const { article = {}, users = {}, currentUser = {} } = this.props;\n    return (\n      <Fragment>\n        {loading === false && (\n          <div className=\"article\">\n            <div className=\"article-content\">\n              {getTitle()}\n              {getDescription()}\n              {getSource()}\n            </div>\n            <div className=\"article-footer g-footer\">\n              <Header\n                article={article}\n                shareWith={viewShareWith}\n                users={users}\n                currentUser={currentUser}\n              />\n            </div>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(ArticleDetails);\n","import { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ArticleDetails from \"../../../Components/page/article/details\";\nimport {\n  fetchArticlesById,\n  makeFavouriteUnfavourite\n} from \"../../../../modules/articles\";\nimport { makeGetArticleById } from \"../../../../modules/articles/selector\";\nimport { makeGetUserById } from \"../../../../modules/user/selector\";\n\nimport { open } from \"../../../../modules/modals\";\nimport { GLOBAL_MODALS } from \"../../../../constant\";\n\nconst mapStateToProps = state => {\n  const { articles, users, auth } = state;\n  return {\n    articles,\n    users,\n    auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: articleId => () => dispatch(fetchArticlesById(articleId)),\n    shareArticle: articleId => () =>\n      dispatch(\n        open(GLOBAL_MODALS.ARTICLE_SHARE_TO_PATIENTS, articleId, null, {})\n      ),\n    shareWith: articleId => () =>\n      dispatch(open(GLOBAL_MODALS.ARTICLE_SHARE_WITH, articleId, null, {})),\n\n    makeFavouriteUnfavourite: data => () =>\n      dispatch(makeFavouriteUnfavourite(data))\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const { articleId } = ownProps;\n  const { articles, users, auth } = stateProps;\n  const { authenticated_user } = auth;\n  const {\n    fetchData,\n    shareArticle,\n    shareWith,\n    makeFavouriteUnfavourite: makeFavouriteUnfavouriteDispatch\n  } = dispatchProps;\n  const getArticle = makeGetArticleById();\n  const getUser = makeGetUserById();\n\n  const article = getArticle(articles, articleId);\n  const { isFavourite } = article;\n\n  const makeFavouriteUnfavourite = makeFavouriteUnfavouriteDispatch({\n    articleId,\n    isFavourite: !isFavourite\n  });\n\n  return {\n    article,\n    fetchData: fetchData(articleId),\n    shareArticle: shareArticle(articleId),\n    shareWith: shareWith(articleId),\n    users,\n    currentUser: getUser(users, authenticated_user),\n    makeFavouriteUnfavourite,\n    ...ownProps\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n  )(ArticleDetails)\n);\n","import React from \"react\";\nimport moment from \"moment\";\nimport Col from \"antd/es/grid/col\";\n\nimport { withRouter } from \"react-router-dom\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport \"./style.less\";\nimport like from \"../../../Assets/images/ico_like.svg\";\nimport liked from \"../../../Assets/images/ico_liked.svg\";\nimport { getArticleDetailURL } from \"../../../Helper/appUrl/article\";\nconst ArticleCard = props => {\n  const {\n    title,\n    description,\n    views,\n    timeToRead,\n    isFavourite,\n    createdAt,\n    _id\n  } = props.articleData;\n\n  const { makeFavouriteUnfavourite, history } = props;\n  const onCardClick = e => {\n    e.preventDefault();\n    history.push(getArticleDetailURL(_id));\n  };\n  const viewsCount = views ? views.length : 0;\n\n  return (\n    <Col key={_id} xs={12} sm={12} md={6} lg={6}>\n      <div className=\"article-card mr16 mb16\">\n        <div className=\"card-content\">\n          <div className=\"flex justify-content-space-between\">\n            <div\n              className=\"fontsize14 bold dark mb8 mr8 clickable\"\n              onClick={onCardClick}\n            >\n              <LinesEllipsis\n                text={title}\n                maxLine=\"1\"\n                ellipsis=\"...\"\n                trimRight\n                basedOn=\"letters\"\n              />\n            </div>\n            <div\n              className=\"icon-fevourite clickable\"\n              onClick={e => {\n                e.stopPropagation();\n                makeFavouriteUnfavourite();\n              }}\n            >\n              <img\n                alt=\"\"\n                src={!isFavourite ? like : liked}\n                className=\"fevourite-icons\"\n              />\n            </div>\n          </div>\n          <div>\n            <LinesEllipsis\n              text={description}\n              maxLine=\"2\"\n              ellipsis=\"...\"\n              trimRight\n              basedOn=\"letters\"\n            />\n          </div>\n          <div className=\"fontsize12 label-color mt8\">\n            {moment(createdAt).format(\"DD/MM/YYYY\")}\n            <span className=\"pull-right\">\n              {timeToRead} min read <span className=\"dot dark ml5 mr5 mt8\" />{\" \"}\n              {viewsCount} views\n            </span>\n          </div>\n        </div>\n      </div>\n    </Col>\n  );\n};\n\nexport default withRouter(ArticleCard);\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ArticleCard from \"../../Components/Cards/articleCard\";\nimport { makeFavouriteUnfavourite } from \"../../../modules/articles\";\n\nconst mapStateToProps = state => {\n  const { articles } = state;\n  return {\n    articles\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeFavouriteUnfavourite: data => () =>\n      dispatch(makeFavouriteUnfavourite(data))\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { id } = ownProps;\n  const { articles } = stateProps;\n  const articleData = articles[id];\n  const toggledFavourite = !articles[id].isFavourite;\n  const {\n    makeFavouriteUnfavourite: makeFavouriteUnfavouriteDispatch\n  } = dispatchProps;\n\n  const makeFavouriteUnfavourite = makeFavouriteUnfavouriteDispatch({\n    articleId: id,\n    isFavourite: toggledFavourite\n  });\n  return {\n    articleData,\n    makeFavouriteUnfavourite\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergePropsToState\n  )(ArticleCard)\n);\n","import React, { Component, Fragment } from \"react\";\nimport ArticleCard from \"../../../../Containers/Cards/article\";\n\nclass RecommendedArticles extends Component {\n  render() {\n    const { recommendedArticles = [] } = this.props;\n\n    return (\n      <Fragment>\n        {recommendedArticles.map(article => {\n          let { _id } = article;\n          return <ArticleCard key={_id} id={_id} />;\n        })}\n      </Fragment>\n    );\n  }\n}\n\nexport default RecommendedArticles;\n","import React, { Component, Fragment } from \"react\";\nimport ArticleCard from \"../../../../Containers/Cards/article\";\n\nclass FavoriteArticles extends Component {\n  render() {\n    const { favoriteArticles = [] } = this.props;\n\n    return (\n      <Fragment>\n        {favoriteArticles.map(article => {\n          const { _id } = article;\n          return <ArticleCard key={_id} id={_id} />;\n        })}\n      </Fragment>\n    );\n  }\n}\n\nexport default FavoriteArticles;\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  articleTitle: {\n    id: \"Article.dashboard.article\",\n    description: \"Dashboard Article title\",\n    defaultMessage: \"Dashboard\"\n  },\n  sortBy: {\n    id: \"Article.dashboard.sortBy\",\n    description: \"Article sortBy title\",\n    defaultMessage: \"Sort By\"\n  },\n  dateAdded: {\n    id: \"Article.dashboard.sort.dateAdded\",\n    description: \"Article Sort by DateAdded\",\n    defaultMessage: \"Date Added\"\n  },\n  name: {\n    id: \"Article.dashboard.sort.name\",\n    description: \"Article sort by name\",\n    defaultMessage: \"Name\"\n  },\n  popular: {\n    id: \"Article.dashboard.sort.popular\",\n    description: \"Article sort by popularity\",\n    defaultMessage: \"Most Popular\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport { Select, Tabs, Row, Col } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport GoBack from \"../../../../../Assets/images/ico-back.svg\";\nimport RecommendedArticles from \"./recommendedArticles\";\nimport FavoritesArticles from \"./favoritesArticles\";\nimport messages from \"./message\";\nimport { ARTICLES, ALL_SORT_BY } from \"../../../../../constant\";\nimport DownArrow from \"../../../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport \"./style.less\";\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nclass Article extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: \"Recommended\",\n      recommendedArticles: [],\n      favoriteArticles: [],\n      sortBy: \"\"\n    };\n  }\n\n  pushFilteredArticles = articles => {\n    let recommendedArticles = [];\n    let favoriteArticles = [];\n    articles.map(article => {\n      if (!article.isFavourite) {\n        recommendedArticles.push(article);\n      } else {\n        favoriteArticles.push(article);\n      }\n    });\n    this.setState({ recommendedArticles, favoriteArticles });\n  };\n\n  componentDidMount() {\n    //Fetch articles api\n    const { fetchArticles } = this.props;\n    fetchArticles();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.articles !== prevProps.articles) {\n      let articlesObject = this.props.articles;\n      articlesObject = Object.values(articlesObject);\n      this.pushFilteredArticles(articlesObject);\n    }\n  }\n\n  handleGoBack = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.goBack();\n  };\n  handleOnClickArticle = id => {\n    // this.props.history.push(`/article/${id}`);\n  };\n\n  handleOnTabChange = key => {\n    if (key === ARTICLES.RECOMMENDED) {\n      this.setState({ currentTab: ARTICLES.RECOMMENDED });\n    } else {\n      this.setState({ currentTab: ARTICLES.FAVOURITES });\n    }\n  };\n\n  render() {\n    const {\n      intl: { formatMessage }\n    } = this.props;\n\n    const { currentTab, recommendedArticles, favoriteArticles } = this.state;\n\n    const { handleOnClickArticle, handleGoBack } = this;\n    return (\n      <div className=\"articles\">\n        <div className=\"articles-content\">\n          <Row gutter={8}>\n            <Col xs={12} xm={12} md={6} lg={6}>\n              <div className=\"\">\n                <div className=\"fontsize22 dark bold\">Articles</div>\n              </div>\n            </Col>\n            <Col xs={12} xm={12} md={6} lg={6}>\n              <div className=\"sortBy flex align-items-center mr8\">\n                <div className=\"fontsize14 bold dark pl8 \">\n                  {formatMessage(messages.sortBy)}\n                </div>\n                <Select\n                  optionFilterProp=\"children\"\n                  suffixIcon={\n                    <img alt=\"\" src={DownArrow} className=\"arrow-img\" />\n                  }\n                  defaultValue=\"Date Added\"\n                  className=\"flex align-items-center flex-1\"\n                  onChange={this.handleSortBy}\n                >\n                  <Option key=\"1\">{formatMessage(messages.dateAdded)}</Option>\n                  <Option key=\"2\">{formatMessage(messages.popular)}</Option>\n                  <Option key=\"3\">{formatMessage(messages.name)}</Option>\n                </Select>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"mt40\">\n            <Tabs\n              className={\"tabstitle fontsize14 w100\"}\n              defaultActiveKey=\"Recommended\"\n              tabBarStyle={{\n                color: \"#7f888d\",\n                fontFamily: \"AvenirNext-Medium\"\n              }}\n              activeKey={currentTab}\n              onChange={this.handleOnTabChange}\n            >\n              <TabPane\n                tab={`Recommended (${recommendedArticles.length})`}\n                key=\"Recommended\"\n                className={\"tabscontent flex\"}\n              >\n                <Row gutter={8} className=\"w100\">\n                  <RecommendedArticles\n                    {...this.props}\n                    handleOnClick={handleOnClickArticle}\n                    recommendedArticles={recommendedArticles}\n                  />\n                </Row>\n              </TabPane>\n              <TabPane\n                tab={`Favourites (${favoriteArticles.length})`}\n                key=\"Favourites\"\n                className={\"tabscontent flex\"}\n              >\n                <Row gutter={8} className=\"w100\">\n                  <FavoritesArticles\n                    {...this.props}\n                    handleOnClick={handleOnClickArticle}\n                    favoriteArticles={favoriteArticles}\n                  />\n                </Row>\n              </TabPane>\n            </Tabs>\n          </div>\n        </div>\n\n        <div className=\"articles-footer g-footer\">\n          <div className=\"flex justify-content-space-between h100 full-width\">\n            <div className=\"flex align-items-center\">\n              <div className=\"back mr8\">\n                <img\n                  alt=\"\"\n                  src={GoBack}\n                  className=\"back clickable\"\n                  onClick={handleGoBack}\n                />\n              </div>\n              <div className=\"ml8 mr4 dark fontsize12\">\n                {formatMessage(messages.articleTitle)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Article);\n","import { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Articles from \"../../../Components/page/article/list\";\nimport { fetchArticles } from \"../../../../modules/articles\";\n\nconst mapStateToProps = state => {\n  const { articles } = state;\n  return {\n    articles\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchArticles: () => dispatch(fetchArticles())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Articles)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { path } from \"../../../constant\";\nimport ArticleDetails from \"../../Containers/Page/article/details\";\nimport Article from \"../../Containers/Page/article/list\";\n\nimport BlankState from \"../../Containers/BlankState\";\nimport AppHeader from \"../../Containers/Header\";\n\nconst ArticleDetailsComp = props => {\n  const { match: { params: { articleId } = {} } = {} } = props;\n  if (articleId) {\n    return <ArticleDetails articleId={articleId} />;\n  }\n  return <BlankState />;\n};\n\nexport default class ArticleRoutes extends Component {\n  render() {\n    return (\n      <Fragment>\n        <AppHeader />\n        <Switch>\n          <Route exact path={path.ARTICLE.ROOT} component={Article} />\n          <Route\n            exact\n            path={path.ARTICLE.DETAILS}\n            component={ArticleDetailsComp}\n          />\n\n          <Route path=\"\" component={BlankState} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from \"react\";\nimport dateFns from \"date-fns\";\nimport { Timeline, Avatar, Icon } from \"antd\";\nimport \"./styles.less\";\nimport { EVENT, USER_CATEGORY } from \"../../../constant\";\n\nimport visit from \"../../../Assets/images/calendar/ico-visit-activity-flat-clr.png\";\nimport visitMissed from \"../../../Assets/images/calendar/ico-visit-activity-missed-flat-clr.svg\";\nimport call from \"../../../Assets/images/calendar/ico-mobile-activity-flat-clr.svg\";\nimport callMissed from \"../../../Assets/images/calendar/ico-mobile-activity-missed-flat-clr.svg\";\nimport videoCall from \"../../../Assets/images/calendar/ico-call-activity-flat-clr.svg\";\nimport videoCallMissed from \"../../../Assets/images/calendar/ico-video-activity-missed-flat-clr.svg\";\nimport reminder from \"../../../Assets/images/calendar/ico-reminder-flat-clr.svg\";\nimport moment from \"moment\";\n\nconst visitIcon = <img className=\"icons\" alt=\"\" src={visit} />;\nconst visitIconMissed = <img className=\"icons\" alt=\"\" src={visitMissed} />;\nconst callIcon = <img className=\"icons\" alt=\"\" src={call} />;\nconst callIconMissed = <img className=\"icons\" alt=\"\" src={callMissed} />;\nconst videoCallIcon = <img className=\"icons\" alt=\"\" src={videoCall} />;\nconst videoCallIconMissed = (\n  <img className=\"icons\" alt=\"\" src={videoCallMissed} />\n);\nconst reminderIcon = <img className=\"icons\" alt=\"\" src={reminder} />;\n\nconst { Item: TimelineItem } = Timeline;\n\nclass AppointmentsHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.renderEvents = this.renderEvents.bind(this);\n    this.state = {\n      lastDate: moment(),\n      loading: false,\n      end: true\n    };\n  }\n\n  componentDidMount() {\n    const History = document.getElementById(\"history-body\");\n    History.addEventListener(\"scroll\", this.myHandler);\n    this.fetchAppointmentsHistory();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.events.historyIds !== prevProps.events.historyIds) {\n      const { historyIds = [] } = this.props.events;\n      if (historyIds && historyIds.length > 0) {\n        const lastRenderedDate = historyIds[historyIds.length - 1];\n        this.setState({ lastDate: lastRenderedDate });\n      }\n    }\n  }\n\n  myHandler = () => {\n    const HistoryBody = document.getElementById(\"history-body\");\n    const winScroll = HistoryBody.scrollTop;\n    const height = HistoryBody.scrollHeight - HistoryBody.clientHeight;\n    const scrolled = winScroll / height;\n    const { end } = this.state;\n    if (scrolled === 1 && !end) {\n      const { lastDate: startDate } = this.state;\n      this.fetchAppointmentsHistory(startDate);\n    }\n  };\n\n  fetchAppointmentsHistory = startDate => {\n    const { fetchAppointmentsHistory } = this.props;\n    this.setState({ loading: true });\n    fetchAppointmentsHistory(startDate).then(response => {\n      const { status, payload } = response;\n      const { data: { historyIds = [] } = {} } = payload;\n      if (status === true && historyIds.length === 0) {\n        this.setState({ loading: false, end: true });\n      } else if (status === true) {\n        this.setState({ loading: false });\n      } else if (status === false) {\n        this.setState({ loading: false });\n      }\n    });\n  };\n\n  getDifference = (from, to) => {\n    let diff = dateFns.differenceInMinutes(\n      dateFns.parse(to),\n      dateFns.parse(from)\n    );\n    if (diff > 60) {\n      diff =\n        dateFns.differenceInHours(dateFns.parse(to), dateFns.parse(from)) +\n        \" hr\";\n    } else if (diff > 0 && diff <= 60) {\n      diff = diff + \" min\";\n    } else {\n      diff = null;\n    }\n    return diff;\n  };\n\n  renderIcon = (activityMode, status) => {\n    switch (activityMode) {\n      case EVENT.ACTIVITY_MODE.CALL:\n        return status === EVENT.STATUS.PENDING ||\n          status === EVENT.STATUS.COMPLETED\n          ? callIcon\n          : callIconMissed;\n      case EVENT.ACTIVITY_MODE.VISIT:\n        return status === EVENT.STATUS.PENDING ||\n          status === EVENT.STATUS.COMPLETED\n          ? visitIcon\n          : visitIconMissed;\n      case EVENT.ACTIVITY_MODE.CHAT:\n        return status === EVENT.STATUS.PASSED\n          ? videoCallIconMissed\n          : videoCallIcon;\n      default:\n        return reminderIcon;\n    }\n  };\n\n  renderTimeLineItems = event => {\n    const currentUserId = this.props.id;\n\n    const { participantOne, participantTwo } = event.data;\n    const otherUserId =\n      currentUserId && participantOne === currentUserId\n        ? participantTwo\n        : participantOne;\n    const showYou = otherUserId === currentUserId ? \" (You)\" : \"\";\n\n    const { users = {} } = this.props;\n    const {\n      basicInfo: {\n        profilePicLink: otherUserProfilePic,\n        name: otherUserName,\n        category: otherUserCategory\n      } = {}\n    } = users[otherUserId] || {};\n\n    const startTime = dateFns.format(dateFns.parse(event.startTime), \"h:mm A\");\n    const difference =\n      event.startTime && event.endTime\n        ? this.getDifference(event.startTime, event.endTime)\n        : null;\n\n    const activityMode = event.data.activityMode;\n    const status = event.status;\n    const icon = this.renderIcon(activityMode, status);\n\n    const activityName =\n      activityMode.charAt(0).toUpperCase() + activityMode.slice(1);\n\n    const categoryName =\n      otherUserCategory === USER_CATEGORY.CARE_COACH\n        ? \"Coach\"\n        : otherUserCategory === USER_CATEGORY.DOCTOR\n        ? \"Doctor\"\n        : \"Patient\";\n\n    return (\n      <Fragment key={event.id}>\n        <TimelineItem className=\"time\" dot={icon}>\n          {startTime}, {difference}\n          <div className=\"activity-name\">\n            {categoryName} {activityName} {\"  \"}\n            <span className=\"coach-avatar\">\n              <Avatar src={otherUserProfilePic} />\n              {otherUserName} {showYou}\n            </span>\n          </div>\n        </TimelineItem>\n      </Fragment>\n    );\n  };\n\n  renderEvents = () => {\n    const appointmentsHistoryList =\n      this.props.events !== undefined ? this.props.events.historyIds : {};\n\n    const events =\n      this.props.events !== undefined ? this.props.events.events : {};\n\n    const appointmentsHistory =\n      this.props.events !== undefined\n        ? this.props.events.appointmentHistory\n        : {};\n\n    let options = [];\n    let items = [];\n\n    for (const key in appointmentsHistoryList) {\n      const appointments = [\n        ...appointmentsHistory[appointmentsHistoryList[key]]\n      ].reverse();\n      const date = dateFns.format(\n        dateFns.parse(appointmentsHistoryList[key]),\n        \"D MMM YYYY, dddd\"\n      );\n\n      items = [];\n      options.push(\n        <Fragment key={date}>\n          <TimelineItem\n            className=\"main-date\"\n            dot={<div className=\"blue-dot\" />}\n          >\n            {date}\n          </TimelineItem>\n\n          {//eslint-disable-next-line\n          appointments.forEach(appointment => {\n            items.push(this.renderTimeLineItems(events[appointment]));\n          })}\n          {items}\n        </Fragment>\n      );\n    }\n    return options;\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"history\" id=\"history\">\n        <div className=\"history-title\">My Appointments History</div>\n        <div id=\"history-body\">\n          <Timeline className=\"time-line\">{this.renderEvents()}</Timeline>\n          {loading && (\n            <div>\n              {\" \"}\n              <Icon type=\"loading\" className=\"ml10 dark pb10\" />\n              <span className=\"dark ml8\">Loading</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppointmentsHistory;\n","import AppointmentsHistory from \"../../Components/AppointmentsHistory\";\nimport { connect } from \"react-redux\";\n\nimport { fetchAppointmentsHistory } from \"../../../modules/events\";\n\nconst mapStateToProps = state => {\n  const { events, users } = state;\n  return {\n    events,\n    users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAppointmentsHistory: userId => startDate =>\n      dispatch(fetchAppointmentsHistory(userId, startDate))\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { userId } = ownProps;\n  const { users, events } = stateProps;\n  const {\n    fetchAppointmentsHistory: fetchAppointmentsHistoryDispatch\n  } = dispatchProps;\n  const fetchAppointmentsHistory = fetchAppointmentsHistoryDispatch(userId);\n\n  return {\n    fetchAppointmentsHistory,\n    events,\n    users,\n    userId\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergePropsToState\n)(AppointmentsHistory);\n","import React, { Component, Fragment } from \"react\";\nimport { Menu, Icon, Button } from \"antd\";\nimport { USER_CATEGORY } from \"../../../../constant\";\nimport \"../style.less\";\nconst { Item } = Menu;\n\nconst MEDICAL_DETAILS = \"Medical-Details\";\nconst CALENDAR = \"calendar\";\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  toggleHistory = () => {\n    this.props.toggleHistory();\n  };\n\n  goBack = () => {\n    this.props.goBack();\n  };\n\n  openAddAppointment = () => {\n    this.props.openAddAppointment();\n  };\n\n  selectMenu = e => {\n    const { key } = e;\n    this.props.selectMenu(key);\n  };\n\n  render() {\n    const { showHistory, currentTab, showCalendar, userData = {} } = this.props;\n    const { basicInfo: { category } = {} } = userData;\n\n    return (\n      <div className=\"patient-details-footer\">\n        {!showHistory && (\n          <Fragment>\n            {currentTab === CALENDAR && showCalendar && (\n              <div\n                className=\"appointment-history-button\"\n                onClick={this.toggleHistory}\n              >\n                View Appointment History\n              </div>\n            )}\n            {category !== USER_CATEGORY.DOCTOR && showCalendar && (\n              <div className=\"menu-selection menu-black\">\n                <Menu\n                  selectedKeys={[currentTab]}\n                  mode=\"horizontal\"\n                  onClick={this.selectMenu}\n                >\n                  <Item key={CALENDAR}>Calendar</Item>\n                  <Item key={MEDICAL_DETAILS}>Medical Details</Item>\n                </Menu>\n              </div>\n            )}\n          </Fragment>\n        )}\n        <div className=\"nav-bar\">\n          <div className=\"nav-bar-left\">\n            <div className=\"arrow-wrapper\">\n              <Icon\n                type=\"arrow-left\"\n                onClick={showHistory ? this.toggleHistory : this.goBack}\n              />\n            </div>\n            <div className=\"text\">\n              {showHistory ? \"Patient Details\" : \"All Programs\"}\n            </div>\n          </div>\n          {!showHistory && (\n            <div className=\"nav-bar-right\">\n              <Button\n                type=\"primary\"\n                className=\"button-text\"\n                onClick={this.openAddAppointment}\n              >\n                Add Appointment/Reminder\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component, Fragment } from \"react\";\nimport moment from \"moment\";\nimport placeholder from \"../../../../Assets/images/ico-placeholder-userdp.svg\";\nimport Calendar from \"../../../Containers/Calendar\";\nimport AppointmentsHistory from \"../../../Containers/AppointmentsHistory\";\nimport Spin from \"antd/es/spin\";\nimport Footer from \"./footer\";\nimport \"../style.less\";\n\nconst CALENDAR = \"calendar\";\n\nclass PatientProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: null,\n      isLoading: true,\n      showHistory: false,\n      currentTab: CALENDAR\n    };\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n    this.setState({ userId });\n    this.props.fetchUser(userId).then(() => {\n      this.setState({ isLoading: false });\n    });\n  }\n\n  goBack = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  toggleHistory = () => {\n    this.setState(prevState => {\n      return { showHistory: !prevState.showHistory };\n    });\n  };\n\n  selectMenu = key => {\n    this.setState({ currentTab: key });\n  };\n\n  openVerificationModal = () => {\n    const { openDocumentsVerification, userId } = this.props;\n    openDocumentsVerification(userId);\n  };\n\n  openAddAppointment = () => {};\n\n  render() {\n    const {\n      userId: id,\n      userData = {},\n      medicalsData: { basicCondition: { chiefComplaint } = {} } = {},\n      countrySelector,\n      citySelector,\n      showCalendar\n    } = this.props;\n    const {\n      basicInfo: { profilePicLink = placeholder, name } = {},\n      personalInfo: { dob, gender, homeAddress = {} } = {}\n    } = userData;\n    const age = dob !== null ? moment().diff(dob, \"years\", false) : \"\";\n    const {\n      addressLine1 = \"\",\n      addressLine2 = \"\",\n      city = false,\n      country = false\n    } = homeAddress;\n    const homeCountryName = country ? countrySelector(country) : \"\";\n    const homeCityName = city ? citySelector(country, city) : \"\";\n    const { isLoading, showHistory, currentTab } = this.state;\n    console.log(\"---- Patient Details Page Props ----\", this.props);\n\n    return (\n      <Fragment>\n        {isLoading && (\n          <div className=\"loading\">\n            <Spin />\n          </div>\n        )}\n        <div className=\"patient-details-body hide-scroll\">\n          {!isLoading && (\n            <Fragment>\n              <div className=\"profile-info\">\n                <div className=\"profile-brief\">\n                  <div className=\"display-picture\">\n                    <img\n                      alt=\"\"\n                      src={profilePicLink}\n                      className=\"display-picture\"\n                    />\n                  </div>\n                  <div className=\"brief-section\">\n                    <div className=\"fontsize22 main-text\">\n                      {name} ({age} {gender})\n                    </div>\n                    {chiefComplaint && (\n                      <div className=\"fontsize14 chief-complaint\">\n                        {chiefComplaint}\n                      </div>\n                    )}\n                    {homeAddress && (\n                      <div className=\"fontsize12 address\">\n                        {addressLine1},{addressLine2},{homeCityName},\n                        {homeCountryName}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div\n                  className=\"view-profile-button\"\n                  onClick={this.openVerificationModal}\n                >\n                  View Profile\n                </div>\n              </div>\n              {!showHistory && currentTab === CALENDAR && showCalendar && (\n                <Calendar {...this.props} calendarUserId={id} />\n              )}\n              {showHistory && currentTab === CALENDAR && showCalendar && (\n                <AppointmentsHistory userId={id} />\n              )}\n            </Fragment>\n          )}\n        </div>\n        <Footer\n          showHistory={showHistory}\n          currentTab={currentTab}\n          {...this.props}\n          toggleHistory={this.toggleHistory}\n          selectMenu={this.selectMenu}\n          openAddAppointment={this.openAddAppointment}\n          goBack={this.goBack}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default PatientProfile;\n","import { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PatientProfile from \"../../../Components/Detail/patient\";\nimport { fetchPatient } from \"../../../../modules/page/Patientprofile\";\nimport { makeGetUserById } from \"../../../../modules/user/selector\";\nimport { makeGetMedicalDataOfUser } from \"../../../../modules/medical/selector\";\nimport {\n  makeCitySelector,\n  makeCountrySelector\n} from \"../../../../modules/countryCity/selector\";\nimport { GLOBAL_MODALS, USER_CATEGORY } from \"../../../../constant\";\nimport { fetchDoctor } from \"../../../../modules/page/doctorProfile\";\nimport { open } from \"../../../../modules/modals\";\n\nconst mapStateToProps = state => {\n  const {\n    users,\n    medicals,\n    countryCities,\n    auth,\n    page: { patientProfile = {} } = {}\n  } = state;\n  const getUser = makeGetUserById();\n  const getMedicalData = makeGetMedicalDataOfUser();\n  const getCity = makeCitySelector();\n  const getCountry = makeCountrySelector();\n\n  return {\n    userData: getUser(users, patientProfile.id),\n    medicalsData: getMedicalData(medicals, patientProfile.id),\n    countrySelector: id => getCountry(countryCities, id),\n    citySelector: (countryId, cityId) =>\n      getCity(countryCities, countryId, cityId),\n    is_loading: patientProfile.is_loading,\n    is_data_loaded: patientProfile.is_data_loaded,\n    country_city: countryCities,\n    auth,\n    users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUser: userId => dispatch(fetchPatient(userId)),\n    fetchDoctor: userId => dispatch(fetchDoctor(userId)),\n    addEditAppointmentReminder: (eventId, userId, purpose) =>\n      dispatch(open(GLOBAL_MODALS.EVENT_MODAL, eventId, purpose, { userId })),\n    openDocumentsVerification: id =>\n      dispatch(open(GLOBAL_MODALS.DOCUMENTS_MODAL, id))\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { id: userId, history, match } = ownProps;\n  const {\n    users,\n    auth: { authenticated_user: viewerId },\n    citySelector,\n    countrySelector\n  } = stateProps;\n  const viewer = users[viewerId];\n  const userData = users[userId];\n  const {\n    basicInfo: { category: viewerCategory }\n  } = viewer;\n  const showCalendar = viewerCategory === USER_CATEGORY.CARE_COACH;\n\n  return {\n    userId,\n    viewer,\n    history,\n    match,\n    users,\n    userData,\n    citySelector,\n    countrySelector,\n    showCalendar,\n    ...dispatchProps\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergePropsToState\n  )(PatientProfile)\n);\n","import React, { Component, Fragment } from \"react\";\nimport AppHeader from \"../../Containers/Header\";\nimport Patient from \"../../Containers/Detail/PatientProfile\";\nimport CommonSuccessMsg from \"../../Containers/CommonSuccessMsg\";\nimport \"./style.less\";\n\nclass Detail extends Component {\n  render() {\n    const { id } = this.props.match.params;\n    return (\n      <Fragment>\n        <AppHeader />\n        <div className=\"patient-details-wrapper\">\n          <Patient id={id} />\n        </div>\n        <CommonSuccessMsg className={\"profile-success-msg\"} />\n      </Fragment>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { path } from \"../../../constant\";\nimport EntityDetail from \"../../Components/Detail\";\nimport EditProfile from \"../../Containers/Page/editprofile\";\nimport BlankState from \"../../Containers/BlankState\";\n\nexport default class PatientRoute extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Switch>\n          <Route\n            exact\n            strict\n            path={path.ENTITY.EDIT_PROFILE}\n            render={props => <EditProfile {...props} />}\n          />\n          <Route\n            exact\n            path={path.ENTITY.PROFILE}\n            render={props => <EntityDetail {...props} />}\n          />\n          <Route\n            exact\n            path={`${path.ENTITY.PROFILE}/:contentIs`}\n            render={props => <EntityDetail {...props} />}\n          />\n          <Route path=\"\" component={BlankState} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { path } from \"../../../constant\";\nimport EntityDetail from \"../../Components/Detail\";\nimport EditProfile from \"../../Containers/Page/editprofile\";\nimport BlankState from \"../../Containers/BlankState\";\n\nexport default class DoctorRoute extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Switch>\n          <Route exact path={path.ENTITY.PROFILE} component={EntityDetail} />\n          <Route\n            exact\n            path={path.ENTITY.EDIT_PROFILE}\n            component={EditProfile}\n          />\n          <Route path=\"\" component={BlankState} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  questionnairePreview: {\n    id: \"app.surveyDetail.questionnairePreview\",\n    description: \"questionnairePreview in surveyDetail page\",\n    defaultMessage: \"Questionnaire Preview\"\n  },\n  questions: {\n    id: \"app.surveyDetail.questions\",\n    description: \"questions in surveyDetail page\",\n    defaultMessage: \"Questions\"\n  },\n  toComplete: {\n    id: \"app.surveyDetail.toComplete\",\n    description: \"toComplete in surveyDetail page\",\n    defaultMessage: \"to complete\"\n  }\n});\n\nexport default messages;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport moment from \"moment\";\nimport GoBack from \"../../../Assets/images/ico-back.svg\";\nimport multiselect from \"../../../Assets/images/ico-multiselect.png\";\nimport \"./style.less\";\nimport messages from \"./message\";\n\nclass QuestionnaireHeader extends Component {\n  render() {\n    const { handleGoBack, surveytemplates = [] } = this.props;\n\n    const { templateId } = this.props.match.params;\n    let name = \"\";\n\n    if (surveytemplates[templateId]) {\n      const { title } = surveytemplates[templateId];\n      name = title;\n    }\n    return (\n      <div className=\"profileHead\">\n        <div className=\"back-location flex align-items-center\">\n          <img\n            alt=\"\"\n            src={GoBack}\n            className=\"backButton clickable mr16\"\n            onClick={handleGoBack}\n          />\n          <span className=\"ml16\">All Surveys</span>\n          <span className=\"previousLocation ml16\">{name}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(QuestionnaireHeader);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport moment from \"moment\";\nimport AppHeader from \"../../Containers/Header\";\nimport QuestionnaireHeader from \"./questionnaireHeader\";\nimport Questions from \"../Question\";\nimport messages from \"./message\";\nimport \"./style.less\";\n\nclass Questinnaire extends Component {\n  componentDidMount() {\n    const { fetchQuestions, fetchSurveyTemplates } = this.props;\n    fetchSurveyTemplates();\n    const templateId = this.props.match.params.templateId;\n    if (!isEmpty(templateId)) {\n      this.setState({ templateId: templateId }, this.updateBrowserhistory);\n      fetchQuestions(templateId);\n    }\n  }\n\n  handleGoBack = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const {\n      questions: surveyQuestion,\n      surveytemplates = [],\n      intl: { formatMessage }\n    } = this.props;\n    const { templateId } = this.props.match.params;\n\n    let questionsId = [];\n    let surveyDescription = \"\";\n    let SurveyTitle = \"\";\n    let timeToComplete = 0;\n    let isNew = false;\n\n    if (surveytemplates[templateId]) {\n      const {\n        questions,\n        description,\n        time_to_complete,\n        title,\n        createdAt\n      } = surveytemplates[templateId];\n      SurveyTitle = title;\n      questionsId = questions;\n      surveyDescription = description;\n      timeToComplete = time_to_complete;\n      const checkIfNew = moment().diff(createdAt, \"days\", true);\n\n      if (checkIfNew >= 0 && checkIfNew <= 7) {\n        isNew = true;\n      }\n    }\n\n    return (\n      <Fragment>\n        <AppHeader />\n        <div className=\"survey-content-wrapper\">\n          <div className=\"survey-content mt24\">\n            <LinesEllipsis\n              text={\n                SurveyTitle\n                  ? SurveyTitle.length < 100\n                    ? SurveyTitle\n                    : SurveyTitle.substr(0, 100) + \"...\"\n                  : \"\"\n              }\n              maxLine=\"2\"\n              className=\"fontsize18 dark medium mb8\"\n              ellipsis=\"...\"\n              trimRight\n              basedOn=\"letters\"\n            />\n            {isNew && <div className={isNew ? \"newSurvey mb16\" : \"\"}>New</div>}\n            <div className=\"fontsize18 bold dark \">\n              {formatMessage(messages.questionnairePreview)}\n            </div>\n            <div className=\"fonstsize12 dark mb8\">\n              {questionsId.length} {formatMessage(messages.questions)} •{\" \"}\n              {timeToComplete} {formatMessage(messages.toComplete)}\n            </div>\n            <div className=\"fontsize14 dark mb24\">{surveyDescription}</div>\n            {!isEmpty(surveyQuestion) &&\n              surveyQuestion.map((question, index) => {\n                const { _id } = question;\n                return (\n                  <Fragment key={_id}>\n                    <Questions\n                      data={question}\n                      displayType={\"readonly\"}\n                      index={index}\n                    />\n                  </Fragment>\n                );\n              })}\n          </div>\n          <QuestionnaireHeader\n            handleGoBack={this.handleGoBack}\n            {...this.props}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Questinnaire);\n","import Questionnaire from \"../../Components/Questionnaire\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\nimport { fetchQuestions } from \"../../../modules/page/createSurvey\";\nimport { fetchSurveyTemplates } from \"../../../modules/surveyTemplate\";\n\nconst mapStateToProps = state => {\n  const {\n    programs,\n    users,\n    auth,\n    hospitals,\n    surveytemplates,\n    surveys,\n    page: { createSurvey = {} } = {}\n  } = state;\n\n  const getUser = makeGetUserById();\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    users,\n    programs_data: programs,\n    hospitals_data: hospitals,\n    surveytemplates_data: surveytemplates,\n    questions: createSurvey.questions,\n    surveytemplates,\n    surveys\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuestions: templateId => dispatch(fetchQuestions(templateId)),\n    fetchSurveyTemplates: () => dispatch(fetchSurveyTemplates())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Questionnaire)\n);\n","import { Card } from \"antd\";\nimport React from \"react\";\nimport \"./style.less\";\nimport defaultProfilePic from \"../../../Assets/images/ico-placeholder-userdp.svg\";\nimport { ENTITY } from \"../../../constant\";\nimport Col from \"antd/es/grid/col\";\n\nconst DoctorCard = ({ data, handleOnClick }) => {\n  return (\n    <Col key={data.title} xs={12} sm={12} md={6} lg={6}>\n      <Card\n        className=\"doctor clickable\"\n        key={data.title}\n        onClick={e => handleOnClick(ENTITY.DOCTOR, data.id)}\n      >\n        <div>\n          <div className=\"flex align-items-center\">\n            <img\n              alt=\"\"\n              src={data.profilePicLink || defaultProfilePic}\n              className=\"patientDp mr16\"\n            />\n            <div className=\"dark patientInfo\">{data.title}</div>\n          </div>\n          <div>\n            <ul className=\"doctors\">\n              <li>\n                <span className=\"fontsize12 dark\">{data.hospital}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Card>\n    </Col>\n  );\n};\n\nexport default DoctorCard;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport multiSelect from \"../../../Assets/images/ico-multiselect.png\";\nimport \"./style.less\";\n\nclass DischargeBar extends Component {\n  dischargePatient = e => {\n    e.preventDefault();\n    const {\n      dischargePatient,\n      patientSelectedForDischarge,\n      disableDischargeBar\n    } = this.props;\n    dischargePatient(patientSelectedForDischarge);\n    disableDischargeBar();\n  };\n\n  render() {\n    const { disableDischargeBar, patientSelectedForDischarge } = this.props;\n    const { dischargePatient } = this;\n\n    return (\n      <div className=\"discharge-bar\">\n        <div className=\"discharge-text\">\n          <div\n            className=\"image clickable\"\n            onClick={() => {\n              disableDischargeBar();\n            }}\n          >\n            <img alt=\"minus\" src={multiSelect} />\n          </div>\n          <div className=\"text\">\n            {patientSelectedForDischarge.length} Patient\n            {patientSelectedForDischarge.length > 1\n              ? \"s(s) selected\"\n              : \" selected\"}\n          </div>\n        </div>\n        <Button className=\"warning\" onClick={dischargePatient}>\n          Discharge\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default DischargeBar;\n","import React, { Component, Fragment } from \"react\";\nimport { Tabs, Input, Icon, Select, Row, Col } from \"antd\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport isEqual from \"lodash-es/isEqual\";\nimport PatientCard from \"../Cards/patientCard\";\nimport DoctorCard from \"../Cards/doctorCard\";\nimport throttle from \"lodash-es/throttle\";\nimport DownArrow from \"../../../Assets/images/material-icons-black-arrow-drop-down.svg\";\nimport getPatientCardData from \"../../../Helper/dataFormater/patientCard\";\nimport { Menu } from \"antd\";\nimport DischargeBar from \"./dischargeBar\";\nimport {\n  ALL_SORT_BY,\n  USER_STATUS,\n  USER_CATEGORY,\n  DOCUMENT_FILTER_TYPE\n} from \"../../../constant\";\nimport CommonSuccessMsg from \"../../Containers/CommonSuccessMsg\";\nimport { getQuery, makeQueryString } from \"../../../Helper/queryString\";\nimport \"./style.less\";\nimport isBefore from \"date-fns/is_before\";\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nconst { Item } = Menu;\nclass PageContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFilterType:\n        (props.location.state && props.location.state.currentFilterType) ||\n        \"Name\",\n      documentStatusFilterType: \"All\",\n      showDischarge: false,\n      patientEnrolled: [],\n      patientDischarged: [],\n      patientInactive: [],\n      patientInactiveUnverified: [],\n      doctorData: [],\n      patientSelectedForDischarge: [],\n      uncheckAll: false,\n      query: \"\",\n      currentTab: USER_CATEGORY.PATIENT\n    };\n    this.handleSearch = throttle(this.handleSearch.bind(this), 1000);\n  }\n\n  componentDidMount() {\n    this.ProgramPatientDoctorToState(true);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { patients, doctors } = this.props;\n    const { patients: prevPatients, doctors: prevDoctors } = prevProps;\n    if (!isEqual(patients, prevPatients) || !isEqual(doctors, prevDoctors)) {\n      this.ProgramPatientDoctorToState(true);\n    }\n  }\n\n  showDischargeBarToggle = () => {\n    const { patientSelectedForDischarge } = this.state;\n    this.setState({\n      showDischarge: patientSelectedForDischarge.length > 0,\n      uncheckAll: patientSelectedForDischarge.length < 1\n    });\n  };\n\n  disableDischargeBar = () => {\n    this.setState({\n      showDischarge: false,\n      uncheckAll: true,\n      patientSelectedForDischarge: []\n    });\n  };\n\n  applyDocumentFilter() {\n    this.setState({\n      patientInactiveUnverified: this.documentStatusFilter()\n    });\n  }\n\n  documentStatusFilter() {\n    const { documentStatusFilterType, patientInactive } = this.state;\n    switch (documentStatusFilterType) {\n      case DOCUMENT_FILTER_TYPE.NOT_CONSENTED:\n        return patientInactive.filter(\n          ({ documents: { consentFormVerified } }) => {\n            return !consentFormVerified;\n          }\n        );\n      case DOCUMENT_FILTER_TYPE.NOT_VERIFIED:\n        return patientInactive.filter(({ documents: { idProofVerified } }) => {\n          return !idProofVerified;\n        });\n      default:\n        return patientInactive;\n    }\n  }\n\n  handleSearch(query = \"\") {\n    this.setState({ query: query.trim() }, this.ProgramPatientDoctorToState);\n  }\n\n  filterUser = user => {\n    const { query } = this.state;\n    const { basicInfo: { name = \"\" } = {} } = user;\n    const regex = new RegExp(\"(\" + query + \")\", \"gi\");\n    return regex.test(name);\n  };\n\n  filterUserData = () => {\n    const {\n      patientDischarged = [],\n      patientEnrolled = [],\n      patientInactive = [],\n      doctorData = []\n    } = this.state;\n    const { filterUser } = this;\n    this.setState({\n      patientDischarged: patientDischarged.filter(user => filterUser(user)),\n      patientEnrolled: patientEnrolled.filter(user => filterUser(user)),\n      patientInactive: patientInactive.filter(user => filterUser(user)),\n      doctorData: doctorData.filter(user => filterUser(user))\n    });\n\n    console.log(\n      patientDischarged,\n      patientEnrolled,\n      patientInactive,\n      doctorData\n    );\n  };\n\n  onSearchTextChange = e => {\n    e.preventDefault();\n    this.handleSearch(e.target.value);\n  };\n\n  onPatientCardSelect = id => {\n    let { patientSelectedForDischarge } = this.state;\n    patientSelectedForDischarge.push(id);\n    this.setState({\n      patientSelectedForDischarge: patientSelectedForDischarge,\n      uncheckAll: false\n    });\n  };\n\n  onPatientCardDeselect = id => {\n    let patientSelectedForDischarge = this.state.patientSelectedForDischarge;\n    let index = patientSelectedForDischarge.indexOf(id);\n    patientSelectedForDischarge.splice(index, 1);\n    this.setState({\n      patientSelectedForDischarge: patientSelectedForDischarge,\n      uncheckAll: patientSelectedForDischarge < 1\n    });\n  };\n\n  sortResults = data => {\n    const { currentFilterType } = this.state;\n    const { countrySelector, citySelector } = this.props;\n    // const { tab: currentEntity = USER_CATEGORY.PATIENT } = getQuery(search);\n\n    switch (currentFilterType) {\n      case ALL_SORT_BY.NAME:\n        return data\n          .filter(value => this.filterUser(value))\n          .sort((a, b) => {\n            let nameA = a.basicInfo.name.toLowerCase(),\n              nameB = b.basicInfo.name.toLowerCase();\n            if (nameA < nameB) return -1;\n            if (nameA > nameB) return 1;\n            return 0;\n          });\n\n      case ALL_SORT_BY.LOCATION:\n        return data\n          .filter(value => this.filterUser(value))\n          .sort((a, b) => {\n            const {\n              personalInfo: {\n                homeAddress: { city: cityA, country: countryA } = {}\n              } = {}\n            } = a;\n            const {\n              personalInfo: {\n                homeAddress: { city: cityB, country: countryB } = {}\n              } = {}\n            } = b;\n            const countryAData = countrySelector(countryA);\n            const cityAData = citySelector(countryA, cityA);\n            const countryBData = countrySelector(countryB);\n            const cityBData = citySelector(countryB, cityB);\n            const countryAName =\n              countryAData && countryAData !== null\n                ? countryAData.toLowerCase()\n                : \"\";\n            const countryBName =\n              countryBData && countryBData !== null\n                ? countryBData.toLowerCase()\n                : \"\";\n            const cityAName =\n              cityAData && cityAData !== null ? cityAData.toLowerCase() : \"\";\n            const cityBName =\n              cityBData && cityBData !== null ? cityBData.toLowerCase() : \"\";\n\n            if (countryAName < countryBName) return -1;\n            if (countryAName > countryBName) return 1;\n            if (countryAName === countryBName) {\n              if (cityAName < cityBName) return -1;\n              if (cityAName > cityBName) return 1;\n            }\n\n            return 0;\n          });\n\n      case ALL_SORT_BY.DATE_ADDED:\n        return data\n          .filter(value => this.filterUser(value))\n          .sort((a, b) => {\n            return moment(a.basicInfo.createdAt).diff(b.basicInfo.createdAt);\n          });\n\n      default:\n        return data.filter(value => this.filterUser(value));\n    }\n  };\n  getAge = d1 => {\n    const now = new Date();\n    const then = new Date(d1);\n    const diff = now.getTime() - then.getTime();\n    const age = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\n    if (age >= 0) {\n      return `${age}`;\n    }\n    return false;\n  };\n\n  getTypeCount = type => {\n    const {\n      history: {\n        location: { search }\n      }\n    } = this.props;\n    const { tab: currentEntity = USER_CATEGORY.PATIENT } = getQuery(search);\n\n    switch (type) {\n      case \"enrolled\":\n        return currentEntity === USER_CATEGORY.PATIENT\n          ? this.state.patientEnrolled.length\n          : \"\";\n      case \"inactive\":\n        return currentEntity === USER_CATEGORY.PATIENT\n          ? this.state.patientInactive.length\n          : \"\";\n      case \"discharged\":\n        return currentEntity === USER_CATEGORY.PATIENT\n          ? this.state.patientDischarged.length\n          : \"\";\n      default:\n        return 0;\n    }\n  };\n\n  handleOnClick = (entity, id) => {\n    this.props.history.push(`/${entity}/${id}`);\n  };\n\n  ProgramPatientDoctorToState = async (applyDocumentFilter = false) => {\n    let {\n      doctors: programDoctors = [],\n      patients: programPatients = []\n    } = this.props;\n    let {\n      patientDischarged,\n      patientEnrolled,\n      patientInactive,\n      doctorData\n    } = this.state;\n    if (programDoctors && programPatients) {\n      let patientEnrolledData = [],\n        patientDischargedData = [],\n        patientInactiveData = [],\n        doctorInfo = [];\n      if (\n        _.isEmpty(patientDischarged) ||\n        _.isEmpty(patientEnrolled) ||\n        _.isEmpty(patientInactive) ||\n        _.isEmpty(doctorData)\n      ) {\n        Object.keys(programDoctors).forEach((key, index) => {\n          const value = programDoctors[key];\n          doctorInfo.push(value);\n        });\n        Object.keys(programPatients).forEach((key, index) => {\n          const value = programPatients[key];\n          if (value.status === USER_STATUS.ENROLLED) {\n            patientEnrolledData.push(value);\n          } else if (value.status === USER_STATUS.DISCHARGED) {\n            patientDischargedData.push(value);\n          } else {\n            patientInactiveData.push(value);\n          }\n        });\n        await this.setState({\n          patientEnrolled: this.sortResults(patientEnrolledData),\n          patientDischarged: this.sortResults(patientDischargedData),\n          patientInactive: this.sortResults(patientInactiveData),\n          doctorData: this.sortResults(doctorInfo)\n        });\n      } else {\n        await this.setState({\n          patientEnrolled: this.sortResults(patientEnrolled),\n          patientDischarged: this.sortResults(patientDischarged),\n          patientInactive: this.sortResults(patientInactive),\n          doctorData: this.sortResults(doctorData)\n        });\n      }\n    }\n\n    if (applyDocumentFilter) {\n      this.applyDocumentFilter();\n    }\n  };\n\n  getPatientsEnrolledComponent = () => {\n    const {\n      patientEnrolled,\n      patientSelectedForDischarge,\n      uncheckAll\n    } = this.state;\n    const { users = {}, hospitals = {}, user_data: currentUser } = this.props;\n    let component = !_.isEmpty(patientEnrolled)\n      ? patientEnrolled.map((value, index) => {\n          const data = getPatientCardData({\n            users,\n            hospitals,\n            currentUser,\n            patient: value\n          });\n          const { basicInfo = {} } = value;\n          return (\n            <PatientCard\n              data={data}\n              key={index}\n              showDischargeBarToggle={this.showDischargeBarToggle}\n              onPatientCardSelect={this.onPatientCardSelect}\n              onPatientCardDeselect={this.onPatientCardDeselect}\n              patientDischargedList={patientSelectedForDischarge}\n              uncheckAll={uncheckAll}\n              handleOnClick={(entity, id) => {\n                this.props.history.push(`/${entity}/${basicInfo._id}`);\n              }}\n            />\n          );\n        })\n      : \"\";\n\n    return component;\n  };\n  getPatientsInactiveComponent = () => {\n    const { patientInactiveUnverified } = this.state;\n    const { users = {}, hospitals = {}, user_data: currentUser } = this.props;\n    let component = !_.isEmpty(patientInactiveUnverified)\n      ? patientInactiveUnverified.map((value, index) => {\n          const data = getPatientCardData({\n            users,\n            hospitals,\n            currentUser,\n            patient: value\n          });\n          return (\n            <PatientCard\n              data={data}\n              key={index}\n              handleOnClick={this.handleOnClick}\n            />\n          );\n        })\n      : \"\";\n    return component;\n  };\n  getPatientsDischargedComponent = () => {\n    const { patientDischarged } = this.state;\n    const { users = {}, hospitals = {}, user_data: currentUser } = this.props;\n    let component = !_.isEmpty(patientDischarged)\n      ? patientDischarged.map((value, index) => {\n          const data = getPatientCardData({\n            users,\n            hospitals,\n            currentUser,\n            patient: value\n          });\n          return (\n            <PatientCard\n              data={data}\n              key={index}\n              handleOnClick={this.handleOnClick}\n            />\n          );\n        })\n      : \"\";\n\n    return component;\n  };\n  getDoctorsComponent = () => {\n    const { doctorData } = this.state;\n    const { hospitals } = this.props;\n    let component =\n      !_.isEmpty(doctorData) && doctorData.length !== 0\n        ? doctorData.map((value, index) => {\n            let data = {};\n            const { visitingHospitals = [] } = value;\n\n            data.profilePicLink = value.basicInfo.profilePicLink || \"\";\n            data.title = value.basicInfo.name || \"\";\n            if (visitingHospitals.length > 0) {\n              const primaryHospital = hospitals[visitingHospitals[0]];\n              if (primaryHospital) {\n                data.hospital = `${primaryHospital.name},${\n                  primaryHospital.city\n                }`;\n              }\n            }\n            data.id = value.basicInfo._id;\n\n            return (\n              <DoctorCard\n                data={data}\n                key={index}\n                handleOnClick={this.handleOnClick}\n              />\n            );\n          })\n        : \"\";\n\n    return component;\n  };\n\n  goBack = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  selectMenu = e => {\n    const { key } = e;\n    this.setState({ currentTab: key });\n  };\n\n  redirectToProgramDetails = () => {\n    console.log(\"this.props ----\", this.props);\n    const { program_data: { _id: programId } = {}, history } = this.props;\n    history.push(`/program/${programId}/summary`);\n  };\n\n  render() {\n    const {\n      program_data: { name = \"\", expiresOn = new Date() } = {},\n      patients: programPatients = [],\n      doctors: programDoctors = [],\n      user_data: { basicInfo: { category } = {} } = {},\n      history: {\n        location: { pathname, search }\n      }\n    } = this.props;\n    const { doctorData, currentTab, showDischarge } = this.state;\n    const isActive = isBefore(new Date(), expiresOn);\n    const {\n      tab: currentEntity = USER_CATEGORY.PATIENT,\n      status = \"enrolled\"\n    } = getQuery(search);\n    const { onSearchTextChange } = this;\n\n    return (\n      <Fragment>\n        <div className=\"program-details-body hide-scroll\">\n          <div className=\"search-section\">\n            <div className=\"search-bar\">\n              <Input\n                placeholder={`Search ${currentTab}s by name or location`}\n                onChange={onSearchTextChange}\n                prefix={\n                  <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n              />\n            </div>\n            <Row gutter={8}>\n              {status === \"inactive\" && currentTab === USER_CATEGORY.PATIENT && (\n                <Col xs={12} xm={12} md={6} lg={6}>\n                  <div className=\"sort-bar\">\n                    <Select\n                      optionFilterProp=\"children\"\n                      onChange={value => {\n                        this.setState(\n                          { documentStatusFilterType: value },\n                          () => {\n                            this.applyDocumentFilter();\n                          }\n                        );\n                      }}\n                      value={`Showing: ${this.state.documentStatusFilterType}`}\n                      suffixIcon={\n                        <img\n                          alt=\"downArrow\"\n                          src={DownArrow}\n                          className=\"arrowImg\"\n                        />\n                      }\n                    >\n                      <Option value=\"All\">All</Option>\n                      <Option value=\"Not Consented\">Not Consented</Option>\n                      <Option value=\"Not Verified\">Not Verified</Option>\n                    </Select>\n                  </div>\n                </Col>\n              )}\n              <Col xs={12} xm={12} md={6} lg={6}>\n                <div className=\"sort-bar\">\n                  <Select\n                    optionFilterProp=\"children\"\n                    onChange={value => {\n                      this.setState({ currentFilterType: value }, () => {\n                        this.ProgramPatientDoctorToState();\n                      });\n                    }}\n                    value={`Sort by: ${this.state.currentFilterType}`}\n                    suffixIcon={\n                      <img\n                        alt=\"downArrow\"\n                        src={DownArrow}\n                        className=\"arrowImg\"\n                      />\n                    }\n                  >\n                    <Option value=\"Name\">Name</Option>\n                    <Option value=\"Location\">Location</Option>\n                    <Option value=\"Date Added\">Date Added</Option>\n                  </Select>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <div className=\"program-details-lower-body\">\n            {currentTab === USER_CATEGORY.PATIENT && (\n              <Tabs\n                className={\"tab-title fontsize14\"}\n                activeKey={status}\n                defaultActiveKey=\"enrolled\"\n                onChange={e => {\n                  this.props.history.replace({\n                    pathname,\n                    search: makeQueryString({\n                      tab: currentEntity,\n                      status: e\n                    })\n                  });\n                  if ([\"discharged\", \"inactive\"].indexOf(e) !== -1) {\n                    this.showDischargeBarToggle(false);\n                  }\n                }}\n                style={{ width: \"100%\" }}\n              >\n                <TabPane\n                  tab={`Enrolled(${this.getTypeCount(\"enrolled\")})`}\n                  key=\"enrolled\"\n                  className=\"flex flex-wrap\"\n                >\n                  <Row gutter={8} className=\"w100\">\n                    {this.getPatientsEnrolledComponent()}\n                  </Row>\n                </TabPane>\n                <TabPane\n                  tab={`Inactive(${this.getTypeCount(\"inactive\")})`}\n                  key=\"inactive\"\n                  className=\"flex flex-wrap\"\n                >\n                  <Row gutter={8} className=\"w100\">\n                    {this.getPatientsInactiveComponent()}\n                  </Row>\n                </TabPane>\n                <TabPane\n                  tab={`Discharged(${this.getTypeCount(\"discharged\")})`}\n                  key=\"discharged\"\n                  className=\"flex flex-wrap\"\n                >\n                  <Row gutter={8} className=\"w100\">\n                    {this.getPatientsDischargedComponent()}\n                  </Row>\n                </TabPane>\n              </Tabs>\n            )}\n            {currentTab === USER_CATEGORY.DOCTOR && (\n              <div className=\"w100 flex flex-wrap\">\n                <div className=\"w100 flex column justify-content-start\">\n                  <div className=\"fontsize-16 medium dark fw500\">\n                    Showing {doctorData.length} Doctors\n                  </div>\n                  <div className=\"clearFix-8\" />\n                  <div\n                    className=\"clearFix-1\"\n                    style={{ borderBottom: \"solid 2px #d4d7d9\" }}\n                  />\n                  <div className=\"clearFix-30 \" />\n                </div>\n                <Row gutter={8} className=\"w100\">\n                  {this.getDoctorsComponent()}\n                </Row>\n                <div className=\"clearFix-30 \" />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"program-details-footer\">\n          <div\n            className=\"view-program-button\"\n            onClick={this.redirectToProgramDetails}\n          >\n            View Program Info\n          </div>\n          {!showDischarge && (\n            <div className=\"menu-selection menu-black\">\n              <Menu\n                selectedKeys={[this.state.currentTab]}\n                mode=\"horizontal\"\n                onClick={this.selectMenu}\n              >\n                <Item key={USER_CATEGORY.PATIENT}>\n                  Patients (\n                  {(programPatients && Object.keys(programPatients).length) ||\n                    0}\n                  )\n                </Item>\n                {category !== USER_CATEGORY.DOCTOR && (\n                  <Item key={USER_CATEGORY.DOCTOR}>\n                    Doctors (\n                    {(programDoctors && Object.keys(programDoctors).length) ||\n                      0}\n                    )\n                  </Item>\n                )}\n              </Menu>\n            </div>\n          )}\n          {!showDischarge && (\n            <div className=\"nav-bar\">\n              <div className=\"nav-bar-left\">\n                <div className=\"arrow-wrapper\">\n                  <Icon type=\"arrow-left\" onClick={this.goBack} />\n                </div>\n                <div className=\"text\">All Programs</div>\n              </div>\n              <div className=\"nav-bar-right\">\n                <div className=\"program-name\">{name}</div>\n                <div className={isActive ? \"bubble active\" : \"bubble\"}>\n                  {isActive ? \"Active\" : \"Expired\"}\n                </div>\n              </div>\n            </div>\n          )}\n          {showDischarge && (\n            <DischargeBar\n              patientSelectedForDischarge={\n                this.state.patientSelectedForDischarge\n              }\n              disableDischargeBar={this.disableDischargeBar}\n              dischargePatient={this.props.dischargePatient}\n            />\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default PageContent;\n","import React, { Component, Fragment } from \"react\";\nimport { Layout } from \"antd\";\nimport \"./style.less\";\n\nimport AppHeader from \"../../Containers/Header\";\nimport PageContent from \"./pageContent\";\nimport { USER_CATEGORY } from \"../../../constant\";\n\nclass ProgramDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ProgramIsLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const pid = this.props.match.params.id;\n    const {\n      user_data: { basicInfo: { category } = {} } = {},\n      getCurrentProgram\n    } = this.props;\n    this.setState({ ProgramIsLoading: true });\n    getCurrentProgram(pid).then(status => {\n      this.setState({ ProgramIsLoading: !status });\n    });\n    this.props.getProgramPatients(pid);\n    if (category === USER_CATEGORY.CARE_COACH) {\n      this.props.getProgramDoctor(pid);\n    }\n  }\n  render() {\n    const { ProgramIsLoading } = this.state;\n    return (\n      (!ProgramIsLoading && (\n        <Fragment>\n          <AppHeader />\n          <div className=\"program-details-wrapper\">\n            <PageContent {...this.props} />\n          </div>\n        </Fragment>\n      )) ||\n      \"\"\n    );\n  }\n}\n\nexport default ProgramDetails;\n","import ProgramDetails from \"../../Components/ProgramDetails\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../../modules/auth\";\nimport { makeGetUserById } from \"../../../modules/user/selector\";\nimport {\n  makeGetProgramsById,\n  makeGetProgramDoctors,\n  makeGetProgramPatients,\n  makeGetProgramProducts\n} from \"../../../modules/program/selector\";\nimport {\n  fetchCurrentProgram,\n  fetchProgramPatient,\n  fetchProgramDoctors,\n  fetchProgramsData,\n  clearCurrentPrograms\n} from \"../../../modules/program\";\nimport {\n  makeCitySelector,\n  makeCountrySelector\n} from \"../../../modules/countryCity/selector\";\nimport { open } from \"../../../modules/modals\";\nimport { GLOBAL_MODALS } from \"../../../constant\";\n\nconst mapStateToProps = state => {\n  const {\n    users,\n    auth,\n    programs,\n    page: { programDetails },\n    products,\n    hospitals,\n    countryCities\n  } = state;\n  const getUser = makeGetUserById();\n  const getCurrentProgram = makeGetProgramsById();\n  const getDoctors = makeGetProgramDoctors();\n  const getPatients = makeGetProgramPatients();\n  const getProducts = makeGetProgramProducts();\n  const getCountry = makeCountrySelector();\n  const getCity = makeCitySelector();\n\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    auth_data: auth,\n    users,\n    authenticated: auth.authenticated,\n    program_data: getCurrentProgram(programs, programDetails.id),\n    doctors: getDoctors(programs, programDetails.id, users),\n    patients: getPatients(programs, programDetails.id, users),\n    products: getProducts(programs, programDetails.id, products),\n    countrySelector: id => getCountry(countryCities, id),\n    citySelector: (countryId, cityId) =>\n      getCity(countryCities, countryId, cityId),\n    hospitals,\n    isLoading: programDetails.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => {\n      dispatch(signOut());\n    },\n    getCurrentProgram: pid => dispatch(fetchCurrentProgram(pid)),\n    getProgramPatients: pid => dispatch(fetchProgramPatient(pid)),\n    getProgramDoctor: pid => dispatch(fetchProgramDoctors(pid)),\n    getMyPrograms: () => {\n      return dispatch(fetchProgramsData());\n    },\n    clearCurrentPrograms: () => {\n      dispatch(clearCurrentPrograms());\n    },\n    dischargePatient: id => dispatch(open(GLOBAL_MODALS.DISCHARGE_PATIENT, id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProgramDetails);\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport Spin from \"antd/es/spin\";\nimport AppHeader from \"../../Containers/Header\";\nimport Icon from \"antd/es/icon\";\nimport moment from \"moment\";\nimport \"./summaryStyles.less\";\nimport CapsuleIcon from \"../../../Assets/images/ico-capsule-flat-clr.png\";\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      currentProgram: null,\n      programId: null\n    };\n  }\n\n  componentDidMount() {\n    const { getCurrentProgram } = this.props;\n    getCurrentProgram()\n      .then(() => {\n        const { programs = {}, programId, products } = this.props;\n        const currentProgram = programs[programId];\n        this.setState({ currentProgram, programId, products });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  goBack = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    console.log(\"this.props --SUMMARY--\", this.props);\n    console.log(\"this.state ----\", this.state);\n    const { loading, currentProgram, products } = this.state;\n    return (\n      <Fragment>\n        <AppHeader />\n        <div className=\"summary\">\n          {loading && (\n            <div className=\"loading\">\n              <Spin />\n            </div>\n          )}\n          <div className=\"summary-content\">\n            {!loading && (\n              <Fragment>\n                <div className=\"clearFix-8\" />\n                <div className=\"flex row align-items-center fontsize16 medium dark fw500\">\n                  Program Info\n                </div>\n                <div className=\"clearFix-24\" />\n                <div className=\"flex column\">\n                  <div className=\"flex row align-items-center medium fontsize12 cool-grey\">\n                    Pharma Co\n                  </div>\n                  <div className=\"clearFix-4\" />\n                  <div className=\"flex row align-items-center medium fontsize14\">\n                    {(currentProgram && currentProgram.name) || \"\"}\n                  </div>\n                </div>\n                <div className=\"clearFix-24\" />\n                <div className=\"flex column\">\n                  <div className=\"flex row align-items-center medium fontsize12 cool-grey\">\n                    Target Location\n                  </div>\n                  <div className=\"clearFix-4\" />\n                  <div className=\"flex row align-items-center medium fontsize14\">\n                    {(currentProgram &&\n                      currentProgram.targetLocation &&\n                      `${currentProgram.targetLocation.country},${\n                        currentProgram.targetLocation.city\n                      }`) ||\n                      \"\"}\n                  </div>\n                </div>\n                <div className=\"clearFix-24\" />\n                <div className=\"flex column\">\n                  <div className=\"flex row align-items-center medium fontsize12 cool-grey\">\n                    Created On\n                  </div>\n                  <div className=\"clearFix-4\" />\n                  <div className=\"flex row align-items-center medium fontsize14 dark\">\n                    {(currentProgram &&\n                      currentProgram.createdAt &&\n                      moment(currentProgram.createdAt).format(\n                        \"DD MMMM YYYY\"\n                      )) ||\n                      \"\"}\n                  </div>\n                </div>\n                <div className=\"clearFix-24\" />\n                <div className=\"flex column\">\n                  <div className=\"flex row align-items-center medium fontsize12 cool-grey\">\n                    Expires On\n                  </div>\n                  <div className=\"clearFix-4\" />\n                  <div className=\"flex row align-items-center medium fontsize14\">\n                    {(currentProgram &&\n                      currentProgram.expiresOn &&\n                      moment(currentProgram.expiresOn).format(\n                        \"DD MMMM YYYY\"\n                      )) ||\n                      \"\"}\n                  </div>\n                </div>\n                <div className=\"clearFix-24\" />\n                <div className=\"flex column\">\n                  <div className=\"flex row align-items-center medium fontsize12 cool-grey\">\n                    Description\n                  </div>\n                  <div className=\"clearFix-4\" />\n                  <div className=\"flex row align-items-center medium fontsize14\">\n                    {(currentProgram && currentProgram.description) || \"\"}\n                  </div>\n                </div>\n                <div className=\"clearFix-24\" />\n                <div className=\"flex column\">\n                  <div className=\"flex row align-items-center medium fontsize12 cool-grey \">\n                    {(products && Object.keys(products).length) || 0} Products\n                    selected\n                  </div>\n                  <div className=\"clearFix-4\" />\n                  <div className=\"flex flex-wrap\">\n                    {!isEmpty(products)\n                      ? Object.keys(products).map((key, index) => {\n                          let value = products[key];\n                          return (\n                            <div className=\"product\" key={index}>\n                              <span>\n                                <img src={CapsuleIcon} alt=\"product\" />\n                              </span>\n                              <span>{value.name}</span>\n                            </div>\n                          );\n                        })\n                      : \"\"}\n                  </div>\n                </div>\n              </Fragment>\n            )}\n            <div>\n              <div />\n            </div>\n          </div>\n          <div className=\"summary-footer\">\n            <div className=\"arrow-wrapper\">\n              <Icon type=\"arrow-left\" onClick={this.goBack} />\n            </div>\n            <div className=\"text\">My Calendar Details</div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(Summary);\n","import ProgramSummary from \"../../Components/ProgramDetails/summary\";\nimport { connect } from \"react-redux\";\nimport { fetchCurrentProgram } from \"../../../modules/program\";\nimport withRouter from \"react-router/es/withRouter\";\n\nconst mapStateToProps = state => {\n  const { auth, programs, products } = state;\n  return {\n    auth,\n    programs,\n    products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCurrentProgram: pid => () => dispatch(fetchCurrentProgram(pid))\n  };\n};\n\nconst mergePropsToState = (stateProps, dispatchProps, ownProps) => {\n  const { match: { params: { id } = {} } = {} } = ownProps;\n  const { auth, programs, products } = stateProps;\n  const { getCurrentProgram: getCurrentProgramDispatch } = dispatchProps;\n  const getCurrentProgram = getCurrentProgramDispatch(id);\n\n  return {\n    programId: id,\n    ...ownProps,\n    getCurrentProgram,\n    auth,\n    programs,\n    products\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergePropsToState\n  )(ProgramSummary)\n);\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n  viewProfile: {\n    id: \"app.surveyDetail.viewProfile\",\n    description: \"viewProfile in surveyDetail page\",\n    defaultMessage: \"View Profile\"\n  },\n  questions: {\n    id: \"app.surveyDetail.questions\",\n    description: \"questions in surveyDetail page\",\n    defaultMessage: \"Questions\"\n  },\n  toComplete: {\n    id: \"app.surveyDetail.toComplete\",\n    description: \"toComplete in surveyDetail page\",\n    defaultMessage: \"to complete\"\n  },\n  survey_Details: {\n    id: \"app.surveyDetail.survey_Details\",\n    description: \"surveyDetail in surveyDetail page footer\",\n    defaultMessage: \"Survey Details\"\n  }\n});\n\nexport default messages;\n","import React, { Fragment, Component } from \"react\";\nimport {\n  Page,\n  PDFDownloadLink,\n  Text,\n  View,\n  Document,\n  StyleSheet\n} from \"@react-pdf/renderer\";\nimport filter from \"lodash-es/filter\";\nimport { OPTION_TYPE } from \"../../../constant\";\nconst styles = StyleSheet.create({\n  page: { backgroundColor: \"white\" },\n  header: {\n    width: \"100%\",\n    fontFamily: \"AvenirNext-Regular\",\n    fontSize: \"16pt\"\n  },\n  heading: {\n    fontFamily: \"AvenirNext-Regular\",\n    fontSize: \"12pt\"\n  },\n  content: {\n    fontFamily: \"AvenirNext-Regular\",\n    fontSize: \"14pt\",\n    marginBottom: \"14pt\",\n    marginTop: \"16pt\",\n    marginLeft: \"24pt\"\n  },\n  question: {\n    marginTop: \"12pt\"\n  },\n  section: { color: \"white\", textAlign: \"center\", margin: 30 }\n});\n\nlet LOADING = true;\n\nclass Doc extends Component {\n  generateResponsePdf = () => {\n    const {\n      questions,\n      response,\n      users,\n      match: { params: { participantId } = {} } = {}\n      //medicalsData = {}\n    } = this.props;\n\n    const user = users && participantId ? users[participantId] : null;\n    // const medicalDetails =\n    //   medicalsData && participantId ? medicalsData[participantId] : null;\n    // const complaint =\n    //   medicalDetails && medicalDetails.basicCondition\n    //     ? medicalDetails.basicCondition.chiefComplaint\n    //     : null;\n\n    let userDetails = [];\n    userDetails.push(\n      <View style={styles.header}>\n        <View>\n          <Text>Name :{user.basicInfo.name}</Text>\n          <Text style={{ marginTop: \"16pt\" }}>Response :</Text>\n        </View>\n      </View>\n    );\n\n    let result = [];\n    result.push(userDetails);\n\n    questions.forEach((question, index) => {\n      const qid = question._id;\n      const answer = filter(response, function(answer) {\n        return answer.questionId === qid;\n      });\n\n      if (answer.length > 0) {\n        if (answer[0].type === OPTION_TYPE.TEXT) {\n          result.push(\n            <Fragment key={question._id}>\n              <Text key={question._id} style={styles.question}>\n                Q{index + 1} {question.statement}\n              </Text>\n              <Text key={question._id}>{answer[0].response}</Text>\n            </Fragment>\n          );\n        } else if (answer[0].type === OPTION_TYPE.RADIO) {\n          result.push(\n            <Fragment key={question._id}>\n              <Text key={question._id} style={styles.question}>\n                Q{index + 1} {question.statement}\n              </Text>\n              <Text key={question._id}>\n                {`${answer[0].response.id}. ${answer[0].response.value}`}{\" \"}\n              </Text>\n            </Fragment>\n          );\n        } else if (answer[0].type === OPTION_TYPE.CHECKBOX) {\n          const checkboxResponse = answer[0].response;\n          let checkbox = [];\n          for (const response in checkboxResponse) {\n            const checkboxAnswer = checkboxResponse[response];\n\n            checkbox.push(\n              <Text id={checkboxAnswer.id} key={question._id}>\n                {`${checkboxAnswer.id}. ${checkboxAnswer.value}`}{\" \"}\n              </Text>\n            );\n          }\n          result.push(\n            <Fragment key={question._id}>\n              <Text style={styles.question} key={question._id}>\n                Q{index + 1} {question.statement}\n              </Text>\n              <Text>{checkbox}</Text>\n            </Fragment>\n          );\n        }\n      }\n    });\n    // let trial = [];\n    // trial.push(<Fragment>{result}</Fragment>);\n\n    return (\n      <Document>\n        <Page style={styles.page}>\n          <View style={styles.content}>{result}</View>\n        </Page>\n      </Document>\n    );\n  };\n\n  createDocument = () => (\n    <Document\n      onRender={() => {\n        //  LOADING = false;\n      }}\n    >\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.section}>\n          <Text>Section #1</Text>\n        </View>\n        <View style={styles.section}>\n          <Text>Section #2</Text>\n        </View>\n      </Page>\n    </Document>\n  );\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    //\n  }\n\n  componentDidUpdate() {\n    //\n  }\n\n  componentWillReceiveProps() {\n    //\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    //\n    return !LOADING;\n  }\n\n  render() {\n    const {\n      surveyTitle,\n      users,\n      match: { params: { participantId } = {} } = {}\n    } = this.props;\n    const user = users && participantId ? users[participantId] : null;\n    const { basicInfo: { name = \"\" } = {} } = user;\n    return (\n      <PDFDownloadLink\n        document={this.generateResponsePdf()}\n        fileName={`${surveyTitle}_${name}_response.pdf`}\n      >\n        {({ blob, url, loading, error }) => \"Download Response\"}\n      </PDFDownloadLink>\n    );\n  }\n}\n\nexport default Doc;\n// export default () => {\n//   //return <div>pdf</div>;\n//   return (\n//     <PDFViewer>\n//       <Document>\n//         <Page>\n//           <View>\n//             <Text>Section #1</Text>\n//           </View>\n//         </Page>\n//       </Document>\n//     </PDFViewer>\n//   );\n// };\n","import { defineMessages } from \"react-intl\";\n\nexport default defineMessages({\n  allSurveys: {\n    id: \"app.surveys.allSurveys\",\n    description: \"\",\n    defaultMessage: \"All Surveys\"\n  },\n  survey_Details: {\n    id: \"app.surveyDetail.survey_Details\",\n    description: \"surveyDetail in surveyDetail page footer\",\n    defaultMessage: \"Survey Details\"\n  },\n  patientsResponses: {\n    id: \"app.surveys.patientsResponses\",\n    description: \"\",\n    defaultMessage: \"Patient's responses\"\n  },\n  downloadResponse: {\n    id: \"app.surveys.downloadResponse\",\n    description: \"\",\n    defaultMessage: \"Download Response\"\n  },\n  downloadingResponse: {\n    id: \"app.surveys.downloadingResponse\",\n    description: \"\",\n    defaultMessage: \"Downloading...\"\n  },\n  downloadSuccessMessage: {\n    id: \"app.surveys.downloadSuccessMessage\",\n    description: \"\",\n    defaultMessage: \"Download Completed\"\n  },\n  downloadFailureMessage: {\n    id: \"app.surveys.downloadFailureMessage\",\n    description: \"\",\n    defaultMessage: \"Download Failed\"\n  }\n});\n","import React, { Component, Fragment } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Button } from \"antd\";\nimport isEmpty from \"lodash-es/isEmpty\";\nimport Doc from \"./doc\";\nimport messages from \"./messages\";\nimport backIcon from \"../../../Assets/images/ico-back.svg\";\n\nclass PatientResponseHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadSuccess: true,\n      prepareDoc: false\n    };\n  }\n\n  formatMessage = data => this.props.intl.formatMessage(data);\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEmpty(this.props.medicalsData) &&\n      !isEmpty(this.props.users) &&\n      !isEmpty(this.props.questions) &&\n      !isEmpty(this.props.response) &&\n      (this.props.medicalsData !== prevProps.medicalsData ||\n        this.props.users !== prevProps.users ||\n        this.props.questions !== prevProps.questions ||\n        this.props.response !== prevProps.response)\n    ) {\n      this.setState({\n        prepareDoc: true\n      });\n    }\n  }\n\n  render() {\n    const { handleGoBack, surveyTitle = \"\" } = this.props;\n    const { formatMessage } = this;\n    const { prepareDoc } = this.state;\n    return (\n      <Fragment>\n        <div className=\"fixed-header-sticky-patient-response\">\n          <div className=\" flex align-items-center justify-content-space-between w100\">\n            <div className=\"  text-align-l flex column align-items-start justify-content-space-between\">\n              <div\n                className={\n                  \"flex row align-items-center justify-content-space-between w100 pl20\"\n                }\n              >\n                <img\n                  className=\"clickable\"\n                  alt=\"\"\n                  onClick={handleGoBack}\n                  src={backIcon}\n                  style={{ width: \"20px\" }}\n                />\n                <div className=\"dark fontsize12 pl20\">\n                  {formatMessage(messages.survey_Details)}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex justify-content-end align-items-center\">\n              <div className=\"fontsize12\">\n                <Button className={\"iqvia-primary-btn primary-color\"}>\n                  {prepareDoc && <Doc {...this.props} />}\n                </Button>\n              </div>\n              <div className=\"mr16 ml16\" />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(PatientResponseHeader);\n","import React, { Component, Fragment } from \"react\";\nimport moment from \"moment\";\nimport { Button, Row, Col } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport Questions from \"../Question\";\nimport AppHeader from \"../../Containers/Header\";\nimport profilePicPlaceHolder from \"../../../Assets/images/ico-placeholder-userdp.svg\";\nimport messages from \"./message\";\nimport \"./style.less\";\nimport PatientResponseHeader from \"./header\";\n\nclass PatientResponse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    const { fetchPatientresponse, fetchPatient, fetchSurveysById } = this.props;\n    const surveyId = this.props.match.params.surveyId;\n    const participantId = this.props.match.params.participantId;\n    fetchPatient(participantId);\n    fetchSurveysById(surveyId);\n    fetchPatientresponse(surveyId, participantId);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.surveys !== prevProps.surveys) {\n      const surveyId = this.props.match.params.surveyId;\n      const participantId = this.props.match.params.participantId;\n      const { surveys, fetchQuestions } = this.props;\n      const { template = {} } = surveys[surveyId];\n      const { templateId } = template;\n      this.setState({\n        surveyId: surveyId,\n        participantId: participantId\n      });\n      fetchQuestions(templateId);\n    }\n  }\n\n  handleGoBack = e => {\n    e.preventDefault();\n    const { history } = this.props;\n\n    history.goBack();\n  };\n\n  handleViewProfile = () => {\n    const { participantId } = this.state;\n    this.props.history.push(`/patient/${participantId}`);\n  };\n\n  render() {\n    const {\n      users,\n      medicals_data,\n      questions,\n      patientResponse,\n      countrySelector,\n      citySelector,\n      surveys,\n      intl: { formatMessage },\n      match,\n      completedOn = \"\"\n    } = this.props;\n    const { handleGoBack } = this;\n    const { participantId, surveyId } = this.state;\n    let participantData = {};\n    let surveyData = {};\n    if (users && participantId && users[participantId]) {\n      const { basicInfo = {}, personalInfo = {} } = users[participantId];\n      const { name, _id, profilePicLink } = basicInfo;\n      const { dob, gender, homeAddress = {} } = personalInfo;\n      participantData.id = _id;\n      participantData.name = name;\n      participantData.gender = gender;\n      participantData.profilePicLink = profilePicLink\n        ? profilePicLink\n        : profilePicPlaceHolder;\n      participantData.age = moment().diff(dob, \"years\", false);\n      const {\n        addressLine1,\n        addressLine2,\n        city = false,\n        country = false\n      } = homeAddress;\n      participantData.addressLine1 = addressLine1;\n      participantData.addressLine2 = addressLine2;\n      const homeCountryName = country ? countrySelector(country) : \"\";\n      participantData.country = homeCountryName;\n      const homeCityName = city ? citySelector(country, city) : \"\";\n      participantData.city = homeCityName;\n    }\n    if (medicals_data && participantId && medicals_data[participantId]) {\n      const { basicCondition = {} } = medicals_data[participantId];\n      const { chiefComplaint } = basicCondition;\n      participantData.disease = chiefComplaint;\n    }\n    if (surveys && surveyId && surveys[surveyId]) {\n      const { template = {} } = surveys[surveyId];\n      const {\n        title = \"\",\n        questions = [],\n        time_to_complete = \"\",\n        description = \"\"\n      } = template;\n      surveyData.title = title;\n      surveyData.TotalQuestions = questions.length;\n      surveyData.time_to_complete = time_to_complete;\n      surveyData.description = description;\n    }\n\n    const CompletedDate = moment(completedOn).format(\"L\");\n    const CompletedTime = moment(completedOn).format(\"LT\");\n\n    return (\n      <Fragment>\n        <AppHeader />\n        <div className=\"patient-survey-response-container-wrapper\">\n          <div className=\"patient-survey-response-container\">\n            <div className=\"patient-survey-response\">\n              <Row>\n                <Col sm={12} md={6}>\n                  <div className=\"flex align-items-center pt40\">\n                    <div className=\"mr36 patient-img-container\">\n                      <img\n                        src={participantData.profilePicLink}\n                        alt=\"\"\n                        className=\"patient-img\"\n                      />\n                    </div>\n                    <div className=\"align-self-start\">\n                      <div className=\"fontsize22 dark\">\n                        {participantData.name}({participantData.age}{\" \"}\n                        {participantData.gender})\n                      </div>\n                      <div className=\"fontsize14 dark medium\">\n                        {participantData.disease}\n                      </div>\n                      <div className=\"fontsize12 label-color \">\n                        {participantData.addressLine1 &&\n                          participantData.addressLine1 + \",\"}\n                        {participantData.addressLine2 &&\n                          participantData.addressLine2 + \",\"}\n                        {participantData.city + \",\"}\n                        {participantData.country}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"mt8\">\n                <Button\n                  className=\"view-profile \"\n                  onClick={this.handleViewProfile}\n                >\n                  {formatMessage(messages.viewProfile)}\n                </Button>\n              </div>\n              <div className=\"mt24\">\n                Survey completed on {CompletedDate}, {CompletedTime}\n              </div>\n              <div className=\"mt8 fontsize18 dark bold\">{surveyData.title}</div>\n              <div className=\"fontsize12 dark\">\n                {surveyData.TotalQuestions} {formatMessage(messages.questions)}{\" \"}\n                • {surveyData.time_to_complete}{\" \"}\n                {formatMessage(messages.toComplete)}\n              </div>\n              <div className=\"fontsize14 dark mt8 mb24\">\n                {surveyData.description}\n              </div>\n              <div>\n                {questions.map((question, index) => {\n                  return (\n                    <Questions\n                      key={index}\n                      data={question}\n                      displayType={\"response\"}\n                      index={index}\n                      patientResponse={patientResponse}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <PatientResponseHeader\n            questions={questions}\n            response={patientResponse}\n            match={match}\n            users={users}\n            medicalsData={medicals_data}\n            handleGoBack={handleGoBack}\n            surveyTitle={surveyData.title}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(PatientResponse);\n","import PatientResponse from \"../../Components/PatientResponse\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { fetchPatient } from \"../../../modules/page/Patientprofile\";\n\nimport {\n  makeCitySelector,\n  makeCountrySelector\n} from \"../../../modules/countryCity/selector\";\nimport { fetchSurveys, fetchSurveysById } from \"../../../modules/survey\";\n\nimport { fetchQuestions } from \"../../../modules/page/createSurvey\";\nimport { fetchSurveyTemplates } from \"../../../modules/surveyTemplate\";\nimport { fetchPatientresponse } from \"../../../modules/page/patientResponse\";\nconst mapStateToProps = state => {\n  const {\n    users,\n    countryCities,\n    surveytemplates,\n    medicals,\n    surveys,\n    page: { patientResponse = {}, createSurvey = {} } = {}\n  } = state;\n  const getCity = makeCitySelector();\n  const getCountry = makeCountrySelector();\n\n  return {\n    users,\n    medicals_data: medicals,\n    surveys,\n    surveytemplates,\n    questions: createSurvey.questions,\n    countrySelector: id => getCountry(countryCities, id),\n    citySelector: (countryId, cityId) =>\n      getCity(countryCities, countryId, cityId),\n    country_city: countryCities,\n    patientResponse: patientResponse.response,\n    completedOn: patientResponse.completedOn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuestions: templateId => dispatch(fetchQuestions(templateId)),\n    fetchSurveys: status => dispatch(fetchSurveys(status)),\n    fetchSurveyTemplates: () => dispatch(fetchSurveyTemplates()),\n    fetchPatient: userId => dispatch(fetchPatient(userId)),\n    fetchPatientresponse: (surveyId, patientId) =>\n      dispatch(fetchPatientresponse(surveyId, patientId)),\n    fetchSurveysById: surveyId => dispatch(fetchSurveysById(surveyId))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(PatientResponse)\n);\n","import React, { Component } from \"react\";\nimport \"./styles.less\";\nimport AppointmentHistory from \"../../Containers/AppointmentsHistory\";\nimport AppHeader from \"../../Containers/Header\";\nimport Icon from \"antd/es/icon\";\n\nclass History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  goBack = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    console.log(\"this.props ----\", this.props);\n    const { userId } = this.props;\n    return (\n      <div className=\"history-wrapper\">\n        <AppHeader signup={false} {...this.props} />\n        <div className=\"history-container hide-scroll\">\n          <AppointmentHistory userId={userId} />\n        </div>\n        <div className=\"back-footer\">\n          <div className=\"arrow-wrapper\">\n            <Icon type=\"arrow-left\" onClick={this.goBack} />\n          </div>\n          <div className=\"text\">My Calendar Details</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default History;\n","import History from \"../../Components/History\";\nimport withRouter from \"react-router-dom/es/withRouter\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  const { auth: { authenticated_user } = {} } = state;\n  return {\n    userId: authenticated_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(History)\n);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n//import Home from \"../Components/Home\";\nimport EditProfile from \"../Containers/Page/editprofile\";\nimport Myprofile from \"../Containers/Page/myprofile\";\n// import CalendarSync from \"../Components/CalendarSync\";\nimport BlankState from \"../Containers/BlankState\";\n// import ProfileSetup from \"../Containers/page/profileSetup\";\nimport SurveyDetail from \"../Containers/survey/SurveyDetail\";\nimport CreateSurvey from \"../Containers/survey/Createsurvey\";\n// import PatientRoute from \"./patient\";\n// import DoctorRoute from \"./doctor\";\nimport DashBoardRoute from \"./dashboard\";\nimport ArticleRoute from \"./article\";\nimport PatientRoute from \"./patient\";\nimport DoctorRoute from \"./doctor\";\nimport Questionnaire from \"../Containers/Questionnaire\";\n// import SearchResult from \"../Containers/SearchResult\";\nimport ProgramDetails from \"../Containers/ProgramDetails\";\nimport ProgramSummary from \"../Containers/ProgramDetails/summary\";\nimport PatientResponse from \"../Containers/PatientResponse\";\nimport { path } from \"../../constant\";\nimport History from \"../Containers/History\";\n// import RemoteConsulting from \"../Containers/RemoteConsulting\";\n\nexport default class Authenticated extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirecting: this.props.authRedirection\n    };\n  }\n  componentDidMount() {\n    this.setState((prevState, prevProps) => {\n      return {\n        redirecting: false\n      };\n    });\n  }\n\n  // componentDidUpdate(prevProps,prevState){\n  //   if(prevProps.authenticated !== this.props.authenticated){\n  //     if(!prevProps.authenticated){\n\n  //     }\n  //   }\n  // }\n\n  render() {\n    //\n    return (\n      <BrowserRouter>\n        <Switch>\n          {this.state.redirecting && this.state.redirecting.length > 0 && (\n            <Redirect to={this.state.redirecting} />\n          )}\n          {this.props.unauthorizedError && (\n            <Route path=\"\" component={BlankState} />\n          )}\n          {/* <Route exact path={path.CALENDAR_SYNC} component={CalendarSync} />\n          <Route exact path={path.PROFILE_SETUP} component={ProfileSetup} />\n          <Route\n            exact\n            path={path.CREATESURVEYDETAIL}\n            component={CreateSurvey}\n          />\n          <Route path={path.PATIENT_RESPONSE} component={PatientResponse} />\n          <Route exact path={path.SEARCH} component={SearchResult} />\n          <Route\n            exact\n            path={path.REMOTE_CONSULTING}\n            component={RemoteConsulting}\n          />*/}\n          <Route path={\"/patient\"} component={PatientRoute} />\n          <Route path={\"/doctor\"} component={DoctorRoute} />\n          <Route exact path={path.MY_PROFILE} component={Myprofile} />\n          <Route exact path={path.EDIT_PROFILE} component={EditProfile} />\n          <Route path={path.PATIENT_RESPONSE} component={PatientResponse} />\n          <Route exact path={path.PROGRAM_SUMMARY} component={ProgramSummary} />\n          <Route exact path={path.PROGRAM_DETAILS} component={ProgramDetails} />\n          <Route exact path={path.APPOINTMENT_HISTORY} component={History} />\n          <Route\n            exact\n            path={path.CREATESURVEYDETAIL}\n            component={CreateSurvey}\n          />\n          <Route\n            exact\n            path={path.PREVIEWQUESTIONNAIRE}\n            component={Questionnaire}\n          />\n          <Route exact path={path.SURVEYDETAIL} component={SurveyDetail} />\n          <Route path={path.ARTICLE.ROOT} component={ArticleRoute} />\n          <Route path={path.DASHBOARD.DASHBOARD} component={DashBoardRoute} />\n\n          <Route path=\"\" component={BlankState} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","import AuthRoute from \"../../routes/auth\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthRoute);\n","import AppHeader from \"../../Components/Header/index\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { open } from \"../../../modules/modals\";\nimport { signOut } from \"../../../modules/auth\";\n\nimport { GLOBAL_MODALS, USER_CATEGORY, USER_STATUS } from \"../../../constant\";\n\nimport { makeGetUserById } from \"../../../modules/user/selector\";\nconst mapStateToProps = state => {\n  const { users, auth, programs } = state;\n  const getUser = makeGetUserById();\n  return {\n    user_data: getUser(users, auth.authenticated_user),\n    program_data: programs,\n    authenticated: auth.authenticated,\n    unauthorizedError: auth.unauthorizedError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openModal: data => dispatch(open(data)),\n    reportAdverseEvent: userId =>\n      dispatch(open(GLOBAL_MODALS.ADVERSE_EVENTS, null, null, userId)),\n    signOut: () => dispatch(signOut())\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    user_data = {},\n    program_data,\n    authenticated,\n    unauthorizedError\n  } = stateProps;\n  const { basicInfo: { category } = {}, status } = user_data;\n  return {\n    showSearch:\n      category === USER_CATEGORY.CARE_COACH ||\n      category === USER_CATEGORY.DOCTOR,\n    showAddButton:\n      category === USER_CATEGORY.CARE_COACH ||\n      (category === USER_CATEGORY.PATIENT && status === USER_STATUS.ENROLLED),\n    user_data,\n    program_data,\n    authenticated,\n    unauthorizedError,\n    ...dispatchProps,\n    ...ownProps\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n  )(AppHeader)\n);\n","import { createSelector } from \"reselect\";\n\nconst getMedicalData = (medicalData, id) => {\n  // (\"=========id =======\", id,     medicalData)\n  return medicalData[id];\n};\n\nexport const makeGetMedicalDataOfUser = () =>\n  createSelector(\n    [getMedicalData],\n    data => {\n      return data;\n    }\n  );\n","import { createSelector } from \"reselect\";\nimport isEmpty from \"lodash-es/isEmpty\";\nconst getPatientProgram = (users, userId, programs) => {\n  if (!userId) {\n    return {};\n  }\n  let program = {};\n  const userData = users[userId];\n  if (userData) {\n    const { programIds = [] } = userData;\n    if (programIds.length > 0) {\n      program = programs[programIds[0].id];\n    }\n  }\n  return program;\n};\n\nconst getUserPrograms = programData => {\n  if (isEmpty(programData)) return {};\n  let programs = {};\n  Object.keys(programData).forEach(key => {\n    let value = programData[key];\n\n    if (\n      [\"basicInfo\", \"products\", \"programDoctors\", \"programPatients\"].indexOf(\n        key\n      ) === -1\n    ) {\n      programs[key] = value;\n    }\n  });\n  return programs;\n};\n\nconst getProgramById = (programData, programId) => {\n  if (isEmpty(programData)) return {};\n  const program = programData[programId];\n  if (program) return program;\n  else return {};\n};\n\nconst getProgramProducts = (programData, programId, productsData) => {\n  if (isEmpty(programData)) return [];\n  const program = programData[programId];\n  if (program) {\n    const { products } = program;\n    return products.map(value => {\n      return productsData[value];\n    });\n  } else return [];\n};\n\nconst getProgramPatients = (programData, programId, users) => {\n  if (isEmpty(programData)) return {};\n  const program = programData[programId];\n  if (program) {\n    let patientList = [];\n    const { patients = [] } = program;\n    patients.forEach(value => {\n      const patient = users[value];\n      if (patient) patientList.push(patient);\n    });\n    return patientList;\n  } else return [];\n};\n\nconst getProgramDoctors = (programData, programId, users) => {\n  if (isEmpty(programData)) return [];\n  const program = programData[programId];\n  if (program) {\n    const { doctors = [] } = program;\n    let doctorList = [];\n    doctors.forEach(value => {\n      const { _id } = value;\n      if (_id) {\n        const doctor = users[_id];\n        if (doctor) doctorList.push(doctor);\n      }\n    });\n    return doctorList;\n  } else return [];\n};\n\nexport const makeGetPatientProgramProduct = () =>\n  createSelector(\n    [getPatientProgram],\n    programs => {\n      const { products = [] } = programs;\n      return products;\n    }\n  );\n\nexport const makeGetUserPrograms = () =>\n  createSelector(\n    [getUserPrograms],\n    programs => {\n      return programs;\n    }\n  );\n\nexport const makeGetProgramsById = () => {\n  return createSelector(\n    [getProgramById],\n    program => {\n      return program;\n    }\n  );\n};\n\nexport const makeGetProgramProducts = () => {\n  return createSelector(\n    [getProgramProducts],\n    products => {\n      return products;\n    }\n  );\n};\n\nexport const makeGetProgramDoctors = () => {\n  return createSelector(\n    [getProgramDoctors],\n    doctors => {\n      return doctors;\n    }\n  );\n};\n\nexport const makeGetProgramPatients = () => {\n  return createSelector(\n    [getProgramPatients],\n    patients => {\n      return patients;\n    }\n  );\n};\n","import React, { Component, Fragment } from \"react\";\nimport AppHeader from \"../../Containers/Header\";\nimport \"./style.less\";\n\nexport default class BlankState extends Component {\n  componentDidMount() {\n    const {\n      auth: { authenticated } = {},\n      location: { pathname } = {}\n    } = this.props;\n    if (!authenticated) {\n      //this.props.history.push(pathname);\n      this.props.history.push(\"/sign-in\", [pathname]);\n    }\n    //this.props.resetUnauthorizedError();\n  }\n\n  // componentDidUpdate(prevProps, prevState, snapshot) {\n  //   if (prevProps.unauthorizedError !== this.props.unauthorizedError) {\n  //     this.props.resetUnauthorizedError();\n  //   }\n  // }\n\n  goHome = e => {\n    e.preventDefault();\n    this.props.resetUnauthorizedError();\n    this.props.history.push(\"/\");\n  };\n\n  componentWillUnmount() {\n    this.props.resetUnauthorizedError();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AppHeader />\n        <div className=\"eror-page-container\">\n          {/* <img alt=\"error-page\" src={blankState}></img> */}\n          <div\n            className=\"dark medium fontsize14 go-home-btn clickable\"\n            onClick={this.goHome}\n          >\n            Click Here to Go Home\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import BlankState from \"../../Components/BlankState\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { resetUnauthorizedError } from \"../../../modules/auth\";\n\nconst mapStateToProps = state => {\n  const { users, auth } = state;\n  return {\n    users: users,\n    auth: auth,\n    unauthorizedError: auth.unauthorizedError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetUnauthorizedError: () => {\n      dispatch(resetUnauthorizedError());\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BlankState)\n);\n"],"sourceRoot":""}